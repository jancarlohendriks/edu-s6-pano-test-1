const Wf=function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const i of document.querySelectorAll('link[rel="modulepreload"]'))n(i);new MutationObserver(i=>{for(const s of i)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&n(o)}).observe(document,{childList:!0,subtree:!0});function t(i){const s={};return i.integrity&&(s.integrity=i.integrity),i.referrerpolicy&&(s.referrerPolicy=i.referrerpolicy),i.crossorigin==="use-credentials"?s.credentials="include":i.crossorigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function n(i){if(i.ep)return;i.ep=!0;const s=t(i);fetch(i.href,s)}};Wf();var Xl=typeof globalThis!="undefined"?globalThis:typeof window!="undefined"?window:typeof global!="undefined"?global:typeof self!="undefined"?self:{},Wo={exports:{}},w={};/**
 * @license
 * Copyright 2010-2022 Three.js Authors
 * SPDX-License-Identifier: MIT
 */Object.defineProperty(w,"__esModule",{value:!0});const Qo="139",Xf={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},qf={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},du=0,hl=1,fu=2,Yf=3,Zf=0,ql=1,pu=2,Ar=3,Yi=0,jt=1,Zi=2,Yl=1,Kf=2,Xn=0,ki=1,ul=2,dl=3,fl=4,mu=5,Oi=100,gu=101,vu=102,pl=103,ml=104,_u=200,yu=201,xu=202,Mu=203,Zl=204,Kl=205,Eu=206,wu=207,bu=208,Tu=209,Su=210,Au=0,Ru=1,Cu=2,Xo=3,Lu=4,Pu=5,Iu=6,Du=7,Ds=0,Nu=1,Ou=2,bn=0,Fu=1,Uu=2,Bu=3,Hu=4,zu=5,ea=300,di=301,fi=302,vs=303,_s=304,qr=306,ys=1e3,zt=1001,xs=1002,Tt=1003,qo=1004,$f=1004,Yo=1005,jf=1005,_t=1006,$l=1007,Jf=1007,ir=1008,Qf=1008,pi=1009,ku=1010,Gu=1011,Pr=1012,Vu=1013,fs=1014,Wn=1015,Gi=1016,Wu=1017,Xu=1018,Vi=1020,qu=1021,Yu=1022,$t=1023,Zu=1024,Ku=1025,hi=1026,Ki=1027,$u=1028,ju=1029,Ju=1030,Qu=1031,ed=1033,Uo=33776,Bo=33777,Ho=33778,zo=33779,gl=35840,vl=35841,_l=35842,yl=35843,td=36196,xl=37492,Ml=37496,El=37808,wl=37809,bl=37810,Tl=37811,Sl=37812,Al=37813,Rl=37814,Cl=37815,Ll=37816,Pl=37817,Il=37818,Dl=37819,Nl=37820,Ol=37821,Fl=36492,nd=2200,id=2201,rd=2202,Ms=2300,Es=2301,ko=2302,Ui=2400,Bi=2401,ws=2402,ta=2500,jl=2501,sd=0,ep=1,tp=2,An=3e3,dt=3001,od=3200,ad=3201,rr=0,ld=1,np="",En="srgb",ci="srgb-linear",ip=0,Go=7680,rp=7681,sp=7682,op=7683,ap=34055,lp=34056,cp=5386,hp=512,up=513,dp=514,fp=515,pp=516,mp=517,gp=518,cd=519,Ir=35044,Dr=35048,vp=35040,_p=35045,yp=35049,xp=35041,Mp=35046,Ep=35050,wp=35042,bp="100",Ul="300 es",Zo=1035;class _i{addEventListener(e,t){this._listeners===void 0&&(this._listeners={});const n=this._listeners;n[e]===void 0&&(n[e]=[]),n[e].indexOf(t)===-1&&n[e].push(t)}hasEventListener(e,t){if(this._listeners===void 0)return!1;const n=this._listeners;return n[e]!==void 0&&n[e].indexOf(t)!==-1}removeEventListener(e,t){if(this._listeners===void 0)return;const i=this._listeners[e];if(i!==void 0){const s=i.indexOf(t);s!==-1&&i.splice(s,1)}}dispatchEvent(e){if(this._listeners===void 0)return;const n=this._listeners[e.type];if(n!==void 0){e.target=this;const i=n.slice(0);for(let s=0,o=i.length;s<o;s++)i[s].call(this,e);e.target=null}}}const Nt=[];for(let r=0;r<256;r++)Nt[r]=(r<16?"0":"")+r.toString(16);let Gc=1234567;const Wi=Math.PI/180,bs=180/Math.PI;function Jt(){const r=Math.random()*4294967295|0,e=Math.random()*4294967295|0,t=Math.random()*4294967295|0,n=Math.random()*4294967295|0;return(Nt[r&255]+Nt[r>>8&255]+Nt[r>>16&255]+Nt[r>>24&255]+"-"+Nt[e&255]+Nt[e>>8&255]+"-"+Nt[e>>16&15|64]+Nt[e>>24&255]+"-"+Nt[t&63|128]+Nt[t>>8&255]+"-"+Nt[t>>16&255]+Nt[t>>24&255]+Nt[n&255]+Nt[n>>8&255]+Nt[n>>16&255]+Nt[n>>24&255]).toLowerCase()}function yt(r,e,t){return Math.max(e,Math.min(t,r))}function Jl(r,e){return(r%e+e)%e}function Tp(r,e,t,n,i){return n+(r-e)*(i-n)/(t-e)}function Sp(r,e,t){return r!==e?(t-r)/(e-r):0}function ps(r,e,t){return(1-t)*r+t*e}function Ap(r,e,t,n){return ps(r,e,1-Math.exp(-t*n))}function Rp(r,e=1){return e-Math.abs(Jl(r,e*2)-e)}function Cp(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*(3-2*r))}function Lp(r,e,t){return r<=e?0:r>=t?1:(r=(r-e)/(t-e),r*r*r*(r*(r*6-15)+10))}function Pp(r,e){return r+Math.floor(Math.random()*(e-r+1))}function Ip(r,e){return r+Math.random()*(e-r)}function Dp(r){return r*(.5-Math.random())}function Np(r){r!==void 0&&(Gc=r);let e=Gc+=1831565813;return e=Math.imul(e^e>>>15,e|1),e^=e+Math.imul(e^e>>>7,e|61),((e^e>>>14)>>>0)/4294967296}function Op(r){return r*Wi}function Fp(r){return r*bs}function Bl(r){return(r&r-1)===0&&r!==0}function hd(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function Ko(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function Up(r,e,t,n,i){const s=Math.cos,o=Math.sin,a=s(t/2),c=o(t/2),h=s((e+n)/2),u=o((e+n)/2),f=s((e-n)/2),d=o((e-n)/2),p=s((n-e)/2),v=o((n-e)/2);switch(i){case"XYX":r.set(a*u,c*f,c*d,a*h);break;case"YZY":r.set(c*d,a*u,c*f,a*h);break;case"ZXZ":r.set(c*f,c*d,a*u,a*h);break;case"XZX":r.set(a*u,c*v,c*p,a*h);break;case"YXY":r.set(c*p,a*u,c*v,a*h);break;case"ZYZ":r.set(c*v,c*p,a*u,a*h);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+i)}}function Bp(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Hp(r,e){switch(e.constructor){case Float32Array:return r;case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}var ud=Object.freeze({__proto__:null,DEG2RAD:Wi,RAD2DEG:bs,generateUUID:Jt,clamp:yt,euclideanModulo:Jl,mapLinear:Tp,inverseLerp:Sp,lerp:ps,damp:Ap,pingpong:Rp,smoothstep:Cp,smootherstep:Lp,randInt:Pp,randFloat:Ip,randFloatSpread:Dp,seededRandom:Np,degToRad:Op,radToDeg:Fp,isPowerOfTwo:Bl,ceilPowerOfTwo:hd,floorPowerOfTwo:Ko,setQuaternionFromProperEuler:Up,normalize:Hp,denormalize:Bp});class le{constructor(e=0,t=0){this.x=e,this.y=t}get width(){return this.x}set width(e){this.x=e}get height(){return this.y}set height(e){this.y=e}set(e,t){return this.x=e,this.y=t,this}setScalar(e){return this.x=e,this.y=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y)}copy(e){return this.x=e.x,this.y=e.y,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this)}addScalar(e){return this.x+=e,this.y+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this)}subScalar(e){return this.x-=e,this.y-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this}multiply(e){return this.x*=e.x,this.y*=e.y,this}multiplyScalar(e){return this.x*=e,this.y*=e,this}divide(e){return this.x/=e.x,this.y/=e.y,this}divideScalar(e){return this.multiplyScalar(1/e)}applyMatrix3(e){const t=this.x,n=this.y,i=e.elements;return this.x=i[0]*t+i[3]*n+i[6],this.y=i[1]*t+i[4]*n+i[7],this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(e){return this.x*e.x+this.y*e.y}cross(e){return this.x*e.y-this.y*e.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y;return t*t+n*n}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this}equals(e){return e.x===this.x&&e.y===this.y}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector2: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this}rotateAround(e,t){const n=Math.cos(t),i=Math.sin(t),s=this.x-e.x,o=this.y-e.y;return this.x=s*n-o*i+e.x,this.y=s*i+o*n+e.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}le.prototype.isVector2=!0;class Lt{constructor(){this.elements=[1,0,0,0,1,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,c,h){const u=this.elements;return u[0]=e,u[1]=i,u[2]=a,u[3]=t,u[4]=s,u[5]=c,u[6]=n,u[7]=o,u[8]=h,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],this}extractBasis(e,t,n){return e.setFromMatrix3Column(this,0),t.setFromMatrix3Column(this,1),n.setFromMatrix3Column(this,2),this}setFromMatrix4(e){const t=e.elements;return this.set(t[0],t[4],t[8],t[1],t[5],t[9],t[2],t[6],t[10]),this}multiply(e){return this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[3],c=n[6],h=n[1],u=n[4],f=n[7],d=n[2],p=n[5],v=n[8],m=i[0],g=i[3],E=i[6],b=i[1],C=i[4],S=i[7],A=i[2],O=i[5],V=i[8];return s[0]=o*m+a*b+c*A,s[3]=o*g+a*C+c*O,s[6]=o*E+a*S+c*V,s[1]=h*m+u*b+f*A,s[4]=h*g+u*C+f*O,s[7]=h*E+u*S+f*V,s[2]=d*m+p*b+v*A,s[5]=d*g+p*C+v*O,s[8]=d*E+p*S+v*V,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[3]*=e,t[6]*=e,t[1]*=e,t[4]*=e,t[7]*=e,t[2]*=e,t[5]*=e,t[8]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],h=e[7],u=e[8];return t*o*u-t*a*h-n*s*u+n*a*c+i*s*h-i*o*c}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],h=e[7],u=e[8],f=u*o-a*h,d=a*c-u*s,p=h*s-o*c,v=t*f+n*d+i*p;if(v===0)return this.set(0,0,0,0,0,0,0,0,0);const m=1/v;return e[0]=f*m,e[1]=(i*h-u*n)*m,e[2]=(a*n-i*o)*m,e[3]=d*m,e[4]=(u*t-i*c)*m,e[5]=(i*s-a*t)*m,e[6]=p*m,e[7]=(n*c-h*t)*m,e[8]=(o*t-n*s)*m,this}transpose(){let e;const t=this.elements;return e=t[1],t[1]=t[3],t[3]=e,e=t[2],t[2]=t[6],t[6]=e,e=t[5],t[5]=t[7],t[7]=e,this}getNormalMatrix(e){return this.setFromMatrix4(e).invert().transpose()}transposeIntoArray(e){const t=this.elements;return e[0]=t[0],e[1]=t[3],e[2]=t[6],e[3]=t[1],e[4]=t[4],e[5]=t[7],e[6]=t[2],e[7]=t[5],e[8]=t[8],this}setUvTransform(e,t,n,i,s,o,a){const c=Math.cos(s),h=Math.sin(s);return this.set(n*c,n*h,-n*(c*o+h*a)+o+e,-i*h,i*c,-i*(-h*o+c*a)+a+t,0,0,1),this}scale(e,t){const n=this.elements;return n[0]*=e,n[3]*=e,n[6]*=e,n[1]*=t,n[4]*=t,n[7]*=t,this}rotate(e){const t=Math.cos(e),n=Math.sin(e),i=this.elements,s=i[0],o=i[3],a=i[6],c=i[1],h=i[4],u=i[7];return i[0]=t*s+n*c,i[3]=t*o+n*h,i[6]=t*a+n*u,i[1]=-n*s+t*c,i[4]=-n*o+t*h,i[7]=-n*a+t*u,this}translate(e,t){const n=this.elements;return n[0]+=e*n[2],n[3]+=e*n[5],n[6]+=e*n[8],n[1]+=t*n[2],n[4]+=t*n[5],n[7]+=t*n[8],this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<9;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<9;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e}clone(){return new this.constructor().fromArray(this.elements)}}Lt.prototype.isMatrix3=!0;function dd(r){for(let e=r.length-1;e>=0;--e)if(r[e]>65535)return!0;return!1}const zp={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Rr(r,e){return new zp[r](e)}function Ts(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Xi(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Vo(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}const Ca={[En]:{[ci]:Xi},[ci]:{[En]:Vo}},an={legacyMode:!0,get workingColorSpace(){return ci},set workingColorSpace(r){console.warn("THREE.ColorManagement: .workingColorSpace is readonly.")},convert:function(r,e,t){if(this.legacyMode||e===t||!e||!t)return r;if(Ca[e]&&Ca[e][t]!==void 0){const n=Ca[e][t];return r.r=n(r.r),r.g=n(r.g),r.b=n(r.b),r}throw new Error("Unsupported color space conversion.")},fromWorkingColorSpace:function(r,e){return this.convert(r,this.workingColorSpace,e)},toWorkingColorSpace:function(r,e){return this.convert(r,e,this.workingColorSpace)}},fd={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ct={r:0,g:0,b:0},dn={h:0,s:0,l:0},Ks={h:0,s:0,l:0};function La(r,e,t){return t<0&&(t+=1),t>1&&(t-=1),t<1/6?r+(e-r)*6*t:t<1/2?e:t<2/3?r+(e-r)*6*(2/3-t):r}function $s(r,e){return e.r=r.r,e.g=r.g,e.b=r.b,e}class Me{constructor(e,t,n){return t===void 0&&n===void 0?this.set(e):this.setRGB(e,t,n)}set(e){return e&&e.isColor?this.copy(e):typeof e=="number"?this.setHex(e):typeof e=="string"&&this.setStyle(e),this}setScalar(e){return this.r=e,this.g=e,this.b=e,this}setHex(e,t=En){return e=Math.floor(e),this.r=(e>>16&255)/255,this.g=(e>>8&255)/255,this.b=(e&255)/255,an.toWorkingColorSpace(this,t),this}setRGB(e,t,n,i=ci){return this.r=e,this.g=t,this.b=n,an.toWorkingColorSpace(this,i),this}setHSL(e,t,n,i=ci){if(e=Jl(e,1),t=yt(t,0,1),n=yt(n,0,1),t===0)this.r=this.g=this.b=n;else{const s=n<=.5?n*(1+t):n+t-n*t,o=2*n-s;this.r=La(o,s,e+1/3),this.g=La(o,s,e),this.b=La(o,s,e-1/3)}return an.toWorkingColorSpace(this,i),this}setStyle(e,t=En){function n(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+e+" will be ignored.")}let i;if(i=/^((?:rgb|hsl)a?)\(([^\)]*)\)/.exec(e)){let s;const o=i[1],a=i[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(255,parseInt(s[1],10))/255,this.g=Math.min(255,parseInt(s[2],10))/255,this.b=Math.min(255,parseInt(s[3],10))/255,an.toWorkingColorSpace(this,t),n(s[4]),this;if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return this.r=Math.min(100,parseInt(s[1],10))/100,this.g=Math.min(100,parseInt(s[2],10))/100,this.b=Math.min(100,parseInt(s[3],10))/100,an.toWorkingColorSpace(this,t),n(s[4]),this;break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a)){const c=parseFloat(s[1])/360,h=parseInt(s[2],10)/100,u=parseInt(s[3],10)/100;return n(s[4]),this.setHSL(c,h,u,t)}break}}else if(i=/^\#([A-Fa-f\d]+)$/.exec(e)){const s=i[1],o=s.length;if(o===3)return this.r=parseInt(s.charAt(0)+s.charAt(0),16)/255,this.g=parseInt(s.charAt(1)+s.charAt(1),16)/255,this.b=parseInt(s.charAt(2)+s.charAt(2),16)/255,an.toWorkingColorSpace(this,t),this;if(o===6)return this.r=parseInt(s.charAt(0)+s.charAt(1),16)/255,this.g=parseInt(s.charAt(2)+s.charAt(3),16)/255,this.b=parseInt(s.charAt(4)+s.charAt(5),16)/255,an.toWorkingColorSpace(this,t),this}return e&&e.length>0?this.setColorName(e,t):this}setColorName(e,t=En){const n=fd[e.toLowerCase()];return n!==void 0?this.setHex(n,t):console.warn("THREE.Color: Unknown color "+e),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(e){return this.r=e.r,this.g=e.g,this.b=e.b,this}copySRGBToLinear(e){return this.r=Xi(e.r),this.g=Xi(e.g),this.b=Xi(e.b),this}copyLinearToSRGB(e){return this.r=Vo(e.r),this.g=Vo(e.g),this.b=Vo(e.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(e=En){return an.fromWorkingColorSpace($s(this,Ct),e),yt(Ct.r*255,0,255)<<16^yt(Ct.g*255,0,255)<<8^yt(Ct.b*255,0,255)<<0}getHexString(e=En){return("000000"+this.getHex(e).toString(16)).slice(-6)}getHSL(e,t=ci){an.fromWorkingColorSpace($s(this,Ct),t);const n=Ct.r,i=Ct.g,s=Ct.b,o=Math.max(n,i,s),a=Math.min(n,i,s);let c,h;const u=(a+o)/2;if(a===o)c=0,h=0;else{const f=o-a;switch(h=u<=.5?f/(o+a):f/(2-o-a),o){case n:c=(i-s)/f+(i<s?6:0);break;case i:c=(s-n)/f+2;break;case s:c=(n-i)/f+4;break}c/=6}return e.h=c,e.s=h,e.l=u,e}getRGB(e,t=ci){return an.fromWorkingColorSpace($s(this,Ct),t),e.r=Ct.r,e.g=Ct.g,e.b=Ct.b,e}getStyle(e=En){return an.fromWorkingColorSpace($s(this,Ct),e),e!==En?`color(${e} ${Ct.r} ${Ct.g} ${Ct.b})`:`rgb(${Ct.r*255|0},${Ct.g*255|0},${Ct.b*255|0})`}offsetHSL(e,t,n){return this.getHSL(dn),dn.h+=e,dn.s+=t,dn.l+=n,this.setHSL(dn.h,dn.s,dn.l),this}add(e){return this.r+=e.r,this.g+=e.g,this.b+=e.b,this}addColors(e,t){return this.r=e.r+t.r,this.g=e.g+t.g,this.b=e.b+t.b,this}addScalar(e){return this.r+=e,this.g+=e,this.b+=e,this}sub(e){return this.r=Math.max(0,this.r-e.r),this.g=Math.max(0,this.g-e.g),this.b=Math.max(0,this.b-e.b),this}multiply(e){return this.r*=e.r,this.g*=e.g,this.b*=e.b,this}multiplyScalar(e){return this.r*=e,this.g*=e,this.b*=e,this}lerp(e,t){return this.r+=(e.r-this.r)*t,this.g+=(e.g-this.g)*t,this.b+=(e.b-this.b)*t,this}lerpColors(e,t,n){return this.r=e.r+(t.r-e.r)*n,this.g=e.g+(t.g-e.g)*n,this.b=e.b+(t.b-e.b)*n,this}lerpHSL(e,t){this.getHSL(dn),e.getHSL(Ks);const n=ps(dn.h,Ks.h,t),i=ps(dn.s,Ks.s,t),s=ps(dn.l,Ks.l,t);return this.setHSL(n,i,s),this}equals(e){return e.r===this.r&&e.g===this.g&&e.b===this.b}fromArray(e,t=0){return this.r=e[t],this.g=e[t+1],this.b=e[t+2],this}toArray(e=[],t=0){return e[t]=this.r,e[t+1]=this.g,e[t+2]=this.b,e}fromBufferAttribute(e,t){return this.r=e.getX(t),this.g=e.getY(t),this.b=e.getZ(t),e.normalized===!0&&(this.r/=255,this.g/=255,this.b/=255),this}toJSON(){return this.getHex()}}Me.NAMES=fd;Me.prototype.isColor=!0;Me.prototype.r=1;Me.prototype.g=1;Me.prototype.b=1;let cr;class yi{static getDataURL(e){if(/^data:/i.test(e.src)||typeof HTMLCanvasElement=="undefined")return e.src;let t;if(e instanceof HTMLCanvasElement)t=e;else{cr===void 0&&(cr=Ts("canvas")),cr.width=e.width,cr.height=e.height;const n=cr.getContext("2d");e instanceof ImageData?n.putImageData(e,0,0):n.drawImage(e,0,0,e.width,e.height),t=cr}return t.width>2048||t.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",e),t.toDataURL("image/jpeg",.6)):t.toDataURL("image/png")}static sRGBToLinear(e){if(typeof HTMLImageElement!="undefined"&&e instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&e instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&e instanceof ImageBitmap){const t=Ts("canvas");t.width=e.width,t.height=e.height;const n=t.getContext("2d");n.drawImage(e,0,0,e.width,e.height);const i=n.getImageData(0,0,e.width,e.height),s=i.data;for(let o=0;o<s.length;o++)s[o]=Xi(s[o]/255)*255;return n.putImageData(i,0,0),t}else if(e.data){const t=e.data.slice(0);for(let n=0;n<t.length;n++)t instanceof Uint8Array||t instanceof Uint8ClampedArray?t[n]=Math.floor(Xi(t[n]/255)*255):t[n]=Xi(t[n]);return{data:t,width:e.width,height:e.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),e}}class Hi{constructor(e=null){this.uuid=Jt(),this.data=e,this.version=0}set needsUpdate(e){e===!0&&this.version++}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.images[this.uuid]!==void 0)return e.images[this.uuid];const n={uuid:this.uuid,url:""},i=this.data;if(i!==null){let s;if(Array.isArray(i)){s=[];for(let o=0,a=i.length;o<a;o++)i[o].isDataTexture?s.push(Pa(i[o].image)):s.push(Pa(i[o]))}else s=Pa(i);n.url=s}return t||(e.images[this.uuid]=n),n}}function Pa(r){return typeof HTMLImageElement!="undefined"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&r instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&r instanceof ImageBitmap?yi.getDataURL(r):r.data?{data:Array.prototype.slice.call(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}Hi.prototype.isSource=!0;let kp=0;class At extends _i{constructor(e=At.DEFAULT_IMAGE,t=At.DEFAULT_MAPPING,n=zt,i=zt,s=_t,o=ir,a=$t,c=pi,h=1,u=An){super(),Object.defineProperty(this,"id",{value:kp++}),this.uuid=Jt(),this.name="",this.source=new Hi(e),this.mipmaps=[],this.mapping=t,this.wrapS=n,this.wrapT=i,this.magFilter=s,this.minFilter=o,this.anisotropy=h,this.format=a,this.internalFormat=null,this.type=c,this.offset=new le(0,0),this.repeat=new le(1,1),this.center=new le(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Lt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.encoding=u,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.needsPMREMUpdate=!1}get image(){return this.source.data}set image(e){this.source.data=e}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(e){return this.name=e.name,this.source=e.source,this.mipmaps=e.mipmaps.slice(0),this.mapping=e.mapping,this.wrapS=e.wrapS,this.wrapT=e.wrapT,this.magFilter=e.magFilter,this.minFilter=e.minFilter,this.anisotropy=e.anisotropy,this.format=e.format,this.internalFormat=e.internalFormat,this.type=e.type,this.offset.copy(e.offset),this.repeat.copy(e.repeat),this.center.copy(e.center),this.rotation=e.rotation,this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrix.copy(e.matrix),this.generateMipmaps=e.generateMipmaps,this.premultiplyAlpha=e.premultiplyAlpha,this.flipY=e.flipY,this.unpackAlignment=e.unpackAlignment,this.encoding=e.encoding,this.userData=JSON.parse(JSON.stringify(e.userData)),this.needsUpdate=!0,this}toJSON(e){const t=e===void 0||typeof e=="string";if(!t&&e.textures[this.uuid]!==void 0)return e.textures[this.uuid];const n={metadata:{version:4.5,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(e).uuid,mapping:this.mapping,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,type:this.type,encoding:this.encoding,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData),t||(e.textures[this.uuid]=n),n}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(e){if(this.mapping!==ea)return e;if(e.applyMatrix3(this.matrix),e.x<0||e.x>1)switch(this.wrapS){case ys:e.x=e.x-Math.floor(e.x);break;case zt:e.x=e.x<0?0:1;break;case xs:Math.abs(Math.floor(e.x)%2)===1?e.x=Math.ceil(e.x)-e.x:e.x=e.x-Math.floor(e.x);break}if(e.y<0||e.y>1)switch(this.wrapT){case ys:e.y=e.y-Math.floor(e.y);break;case zt:e.y=e.y<0?0:1;break;case xs:Math.abs(Math.floor(e.y)%2)===1?e.y=Math.ceil(e.y)-e.y:e.y=e.y-Math.floor(e.y);break}return this.flipY&&(e.y=1-e.y),e}set needsUpdate(e){e===!0&&(this.version++,this.source.needsUpdate=!0)}}At.DEFAULT_IMAGE=null;At.DEFAULT_MAPPING=ea;At.prototype.isTexture=!0;class st{constructor(e=0,t=0,n=0,i=1){this.x=e,this.y=t,this.z=n,this.w=i}get width(){return this.z}set width(e){this.z=e}get height(){return this.w}set height(e){this.w=e}set(e,t,n,i){return this.x=e,this.y=t,this.z=n,this.w=i,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this.w=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setW(e){return this.w=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;case 3:this.w=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this.w=e.w!==void 0?e.w:1,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this.w+=e.w,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this.w+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this.w=e.w+t.w,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this.w+=e.w*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this.w-=e.w,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this.w-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this.w=e.w-t.w,this}multiply(e){return this.x*=e.x,this.y*=e.y,this.z*=e.z,this.w*=e.w,this}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this.w*=e,this}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=this.w,o=e.elements;return this.x=o[0]*t+o[4]*n+o[8]*i+o[12]*s,this.y=o[1]*t+o[5]*n+o[9]*i+o[13]*s,this.z=o[2]*t+o[6]*n+o[10]*i+o[14]*s,this.w=o[3]*t+o[7]*n+o[11]*i+o[15]*s,this}divideScalar(e){return this.multiplyScalar(1/e)}setAxisAngleFromQuaternion(e){this.w=2*Math.acos(e.w);const t=Math.sqrt(1-e.w*e.w);return t<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=e.x/t,this.y=e.y/t,this.z=e.z/t),this}setAxisAngleFromRotationMatrix(e){let t,n,i,s;const c=e.elements,h=c[0],u=c[4],f=c[8],d=c[1],p=c[5],v=c[9],m=c[2],g=c[6],E=c[10];if(Math.abs(u-d)<.01&&Math.abs(f-m)<.01&&Math.abs(v-g)<.01){if(Math.abs(u+d)<.1&&Math.abs(f+m)<.1&&Math.abs(v+g)<.1&&Math.abs(h+p+E-3)<.1)return this.set(1,0,0,0),this;t=Math.PI;const C=(h+1)/2,S=(p+1)/2,A=(E+1)/2,O=(u+d)/4,V=(f+m)/4,U=(v+g)/4;return C>S&&C>A?C<.01?(n=0,i=.707106781,s=.707106781):(n=Math.sqrt(C),i=O/n,s=V/n):S>A?S<.01?(n=.707106781,i=0,s=.707106781):(i=Math.sqrt(S),n=O/i,s=U/i):A<.01?(n=.707106781,i=.707106781,s=0):(s=Math.sqrt(A),n=V/s,i=U/s),this.set(n,i,s,t),this}let b=Math.sqrt((g-v)*(g-v)+(f-m)*(f-m)+(d-u)*(d-u));return Math.abs(b)<.001&&(b=1),this.x=(g-v)/b,this.y=(f-m)/b,this.z=(d-u)/b,this.w=Math.acos((h+p+E-1)/2),this}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this.w=Math.min(this.w,e.w),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this.w=Math.max(this.w,e.w),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this.w=Math.max(e.w,Math.min(t.w,this.w)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this.w=Math.max(e,Math.min(t,this.w)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this.w=this.w<0?Math.ceil(this.w):Math.floor(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z+this.w*e.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this.w+=(e.w-this.w)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this.w=e.w+(t.w-e.w)*n,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z&&e.w===this.w}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this.w=e[t+3],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e[t+3]=this.w,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector4: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this.w=e.getW(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}st.prototype.isVector4=!0;class kt extends _i{constructor(e,t,n={}){super(),this.width=e,this.height=t,this.depth=1,this.scissor=new st(0,0,e,t),this.scissorTest=!1,this.viewport=new st(0,0,e,t);const i={width:e,height:t,depth:1};this.texture=new At(i,n.mapping,n.wrapS,n.wrapT,n.magFilter,n.minFilter,n.format,n.type,n.anisotropy,n.encoding),this.texture.isRenderTargetTexture=!0,this.texture.flipY=!1,this.texture.generateMipmaps=n.generateMipmaps!==void 0?n.generateMipmaps:!1,this.texture.internalFormat=n.internalFormat!==void 0?n.internalFormat:null,this.texture.minFilter=n.minFilter!==void 0?n.minFilter:_t,this.depthBuffer=n.depthBuffer!==void 0?n.depthBuffer:!0,this.stencilBuffer=n.stencilBuffer!==void 0?n.stencilBuffer:!1,this.depthTexture=n.depthTexture!==void 0?n.depthTexture:null,this.samples=n.samples!==void 0?n.samples:0}setSize(e,t,n=1){(this.width!==e||this.height!==t||this.depth!==n)&&(this.width=e,this.height=t,this.depth=n,this.texture.image.width=e,this.texture.image.height=t,this.texture.image.depth=n,this.dispose()),this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.copy(e.viewport),this.texture=e.texture.clone(),this.texture.isRenderTargetTexture=!0,this.texture.image=Object.assign({},e.texture.image),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,e.depthTexture!==null&&(this.depthTexture=e.depthTexture.clone()),this.samples=e.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}kt.prototype.isWebGLRenderTarget=!0;class Yr extends At{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=Tt,this.minFilter=Tt,this.wrapR=zt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Yr.prototype.isDataArrayTexture=!0;class pd extends kt{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new Yr(null,e,t,n),this.texture.isRenderTargetTexture=!0}}pd.prototype.isWebGLArrayRenderTarget=!0;class Ns extends At{constructor(e=null,t=1,n=1,i=1){super(null),this.image={data:e,width:t,height:n,depth:i},this.magFilter=Tt,this.minFilter=Tt,this.wrapR=zt,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}Ns.prototype.isData3DTexture=!0;class md extends kt{constructor(e,t,n){super(e,t),this.depth=n,this.texture=new Ns(null,e,t,n),this.texture.isRenderTargetTexture=!0}}md.prototype.isWebGL3DRenderTarget=!0;class gd extends kt{constructor(e,t,n,i={}){super(e,t,i);const s=this.texture;this.texture=[];for(let o=0;o<n;o++)this.texture[o]=s.clone(),this.texture[o].isRenderTargetTexture=!0}setSize(e,t,n=1){if(this.width!==e||this.height!==t||this.depth!==n){this.width=e,this.height=t,this.depth=n;for(let i=0,s=this.texture.length;i<s;i++)this.texture[i].image.width=e,this.texture[i].image.height=t,this.texture[i].image.depth=n;this.dispose()}return this.viewport.set(0,0,e,t),this.scissor.set(0,0,e,t),this}copy(e){this.dispose(),this.width=e.width,this.height=e.height,this.depth=e.depth,this.viewport.set(0,0,this.width,this.height),this.scissor.set(0,0,this.width,this.height),this.depthBuffer=e.depthBuffer,this.stencilBuffer=e.stencilBuffer,this.depthTexture=e.depthTexture,this.texture.length=0;for(let t=0,n=e.texture.length;t<n;t++)this.texture[t]=e.texture[t].clone();return this}}gd.prototype.isWebGLMultipleRenderTargets=!0;class Ot{constructor(e=0,t=0,n=0,i=1){this._x=e,this._y=t,this._z=n,this._w=i}static slerp(e,t,n,i){return console.warn("THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead."),n.slerpQuaternions(e,t,i)}static slerpFlat(e,t,n,i,s,o,a){let c=n[i+0],h=n[i+1],u=n[i+2],f=n[i+3];const d=s[o+0],p=s[o+1],v=s[o+2],m=s[o+3];if(a===0){e[t+0]=c,e[t+1]=h,e[t+2]=u,e[t+3]=f;return}if(a===1){e[t+0]=d,e[t+1]=p,e[t+2]=v,e[t+3]=m;return}if(f!==m||c!==d||h!==p||u!==v){let g=1-a;const E=c*d+h*p+u*v+f*m,b=E>=0?1:-1,C=1-E*E;if(C>Number.EPSILON){const A=Math.sqrt(C),O=Math.atan2(A,E*b);g=Math.sin(g*O)/A,a=Math.sin(a*O)/A}const S=a*b;if(c=c*g+d*S,h=h*g+p*S,u=u*g+v*S,f=f*g+m*S,g===1-a){const A=1/Math.sqrt(c*c+h*h+u*u+f*f);c*=A,h*=A,u*=A,f*=A}}e[t]=c,e[t+1]=h,e[t+2]=u,e[t+3]=f}static multiplyQuaternionsFlat(e,t,n,i,s,o){const a=n[i],c=n[i+1],h=n[i+2],u=n[i+3],f=s[o],d=s[o+1],p=s[o+2],v=s[o+3];return e[t]=a*v+u*f+c*p-h*d,e[t+1]=c*v+u*d+h*f-a*p,e[t+2]=h*v+u*p+a*d-c*f,e[t+3]=u*v-a*f-c*d-h*p,e}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get w(){return this._w}set w(e){this._w=e,this._onChangeCallback()}set(e,t,n,i){return this._x=e,this._y=t,this._z=n,this._w=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(e){return this._x=e.x,this._y=e.y,this._z=e.z,this._w=e.w,this._onChangeCallback(),this}setFromEuler(e,t){if(!(e&&e.isEuler))throw new Error("THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.");const n=e._x,i=e._y,s=e._z,o=e._order,a=Math.cos,c=Math.sin,h=a(n/2),u=a(i/2),f=a(s/2),d=c(n/2),p=c(i/2),v=c(s/2);switch(o){case"XYZ":this._x=d*u*f+h*p*v,this._y=h*p*f-d*u*v,this._z=h*u*v+d*p*f,this._w=h*u*f-d*p*v;break;case"YXZ":this._x=d*u*f+h*p*v,this._y=h*p*f-d*u*v,this._z=h*u*v-d*p*f,this._w=h*u*f+d*p*v;break;case"ZXY":this._x=d*u*f-h*p*v,this._y=h*p*f+d*u*v,this._z=h*u*v+d*p*f,this._w=h*u*f-d*p*v;break;case"ZYX":this._x=d*u*f-h*p*v,this._y=h*p*f+d*u*v,this._z=h*u*v-d*p*f,this._w=h*u*f+d*p*v;break;case"YZX":this._x=d*u*f+h*p*v,this._y=h*p*f+d*u*v,this._z=h*u*v-d*p*f,this._w=h*u*f-d*p*v;break;case"XZY":this._x=d*u*f-h*p*v,this._y=h*p*f-d*u*v,this._z=h*u*v+d*p*f,this._w=h*u*f+d*p*v;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return t!==!1&&this._onChangeCallback(),this}setFromAxisAngle(e,t){const n=t/2,i=Math.sin(n);return this._x=e.x*i,this._y=e.y*i,this._z=e.z*i,this._w=Math.cos(n),this._onChangeCallback(),this}setFromRotationMatrix(e){const t=e.elements,n=t[0],i=t[4],s=t[8],o=t[1],a=t[5],c=t[9],h=t[2],u=t[6],f=t[10],d=n+a+f;if(d>0){const p=.5/Math.sqrt(d+1);this._w=.25/p,this._x=(u-c)*p,this._y=(s-h)*p,this._z=(o-i)*p}else if(n>a&&n>f){const p=2*Math.sqrt(1+n-a-f);this._w=(u-c)/p,this._x=.25*p,this._y=(i+o)/p,this._z=(s+h)/p}else if(a>f){const p=2*Math.sqrt(1+a-n-f);this._w=(s-h)/p,this._x=(i+o)/p,this._y=.25*p,this._z=(c+u)/p}else{const p=2*Math.sqrt(1+f-n-a);this._w=(o-i)/p,this._x=(s+h)/p,this._y=(c+u)/p,this._z=.25*p}return this._onChangeCallback(),this}setFromUnitVectors(e,t){let n=e.dot(t)+1;return n<Number.EPSILON?(n=0,Math.abs(e.x)>Math.abs(e.z)?(this._x=-e.y,this._y=e.x,this._z=0,this._w=n):(this._x=0,this._y=-e.z,this._z=e.y,this._w=n)):(this._x=e.y*t.z-e.z*t.y,this._y=e.z*t.x-e.x*t.z,this._z=e.x*t.y-e.y*t.x,this._w=n),this.normalize()}angleTo(e){return 2*Math.acos(Math.abs(yt(this.dot(e),-1,1)))}rotateTowards(e,t){const n=this.angleTo(e);if(n===0)return this;const i=Math.min(1,t/n);return this.slerp(e,i),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(e){return this._x*e._x+this._y*e._y+this._z*e._z+this._w*e._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let e=this.length();return e===0?(this._x=0,this._y=0,this._z=0,this._w=1):(e=1/e,this._x=this._x*e,this._y=this._y*e,this._z=this._z*e,this._w=this._w*e),this._onChangeCallback(),this}multiply(e,t){return t!==void 0?(console.warn("THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead."),this.multiplyQuaternions(e,t)):this.multiplyQuaternions(this,e)}premultiply(e){return this.multiplyQuaternions(e,this)}multiplyQuaternions(e,t){const n=e._x,i=e._y,s=e._z,o=e._w,a=t._x,c=t._y,h=t._z,u=t._w;return this._x=n*u+o*a+i*h-s*c,this._y=i*u+o*c+s*a-n*h,this._z=s*u+o*h+n*c-i*a,this._w=o*u-n*a-i*c-s*h,this._onChangeCallback(),this}slerp(e,t){if(t===0)return this;if(t===1)return this.copy(e);const n=this._x,i=this._y,s=this._z,o=this._w;let a=o*e._w+n*e._x+i*e._y+s*e._z;if(a<0?(this._w=-e._w,this._x=-e._x,this._y=-e._y,this._z=-e._z,a=-a):this.copy(e),a>=1)return this._w=o,this._x=n,this._y=i,this._z=s,this;const c=1-a*a;if(c<=Number.EPSILON){const p=1-t;return this._w=p*o+t*this._w,this._x=p*n+t*this._x,this._y=p*i+t*this._y,this._z=p*s+t*this._z,this.normalize(),this._onChangeCallback(),this}const h=Math.sqrt(c),u=Math.atan2(h,a),f=Math.sin((1-t)*u)/h,d=Math.sin(t*u)/h;return this._w=o*f+this._w*d,this._x=n*f+this._x*d,this._y=i*f+this._y*d,this._z=s*f+this._z*d,this._onChangeCallback(),this}slerpQuaternions(e,t,n){return this.copy(e).slerp(t,n)}random(){const e=Math.random(),t=Math.sqrt(1-e),n=Math.sqrt(e),i=2*Math.PI*Math.random(),s=2*Math.PI*Math.random();return this.set(t*Math.cos(i),n*Math.sin(s),n*Math.cos(s),t*Math.sin(i))}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._w===this._w}fromArray(e,t=0){return this._x=e[t],this._y=e[t+1],this._z=e[t+2],this._w=e[t+3],this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._w,e}fromBufferAttribute(e,t){return this._x=e.getX(t),this._y=e.getY(t),this._z=e.getZ(t),this._w=e.getW(t),this}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Ot.prototype.isQuaternion=!0;class D{constructor(e=0,t=0,n=0){this.x=e,this.y=t,this.z=n}set(e,t,n){return n===void 0&&(n=this.z),this.x=e,this.y=t,this.z=n,this}setScalar(e){return this.x=e,this.y=e,this.z=e,this}setX(e){return this.x=e,this}setY(e){return this.y=e,this}setZ(e){return this.z=e,this}setComponent(e,t){switch(e){case 0:this.x=t;break;case 1:this.y=t;break;case 2:this.z=t;break;default:throw new Error("index is out of range: "+e)}return this}getComponent(e){switch(e){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+e)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(e){return this.x=e.x,this.y=e.y,this.z=e.z,this}add(e,t){return t!==void 0?(console.warn("THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead."),this.addVectors(e,t)):(this.x+=e.x,this.y+=e.y,this.z+=e.z,this)}addScalar(e){return this.x+=e,this.y+=e,this.z+=e,this}addVectors(e,t){return this.x=e.x+t.x,this.y=e.y+t.y,this.z=e.z+t.z,this}addScaledVector(e,t){return this.x+=e.x*t,this.y+=e.y*t,this.z+=e.z*t,this}sub(e,t){return t!==void 0?(console.warn("THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead."),this.subVectors(e,t)):(this.x-=e.x,this.y-=e.y,this.z-=e.z,this)}subScalar(e){return this.x-=e,this.y-=e,this.z-=e,this}subVectors(e,t){return this.x=e.x-t.x,this.y=e.y-t.y,this.z=e.z-t.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead."),this.multiplyVectors(e,t)):(this.x*=e.x,this.y*=e.y,this.z*=e.z,this)}multiplyScalar(e){return this.x*=e,this.y*=e,this.z*=e,this}multiplyVectors(e,t){return this.x=e.x*t.x,this.y=e.y*t.y,this.z=e.z*t.z,this}applyEuler(e){return e&&e.isEuler||console.error("THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order."),this.applyQuaternion(Vc.setFromEuler(e))}applyAxisAngle(e,t){return this.applyQuaternion(Vc.setFromAxisAngle(e,t))}applyMatrix3(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[3]*n+s[6]*i,this.y=s[1]*t+s[4]*n+s[7]*i,this.z=s[2]*t+s[5]*n+s[8]*i,this}applyNormalMatrix(e){return this.applyMatrix3(e).normalize()}applyMatrix4(e){const t=this.x,n=this.y,i=this.z,s=e.elements,o=1/(s[3]*t+s[7]*n+s[11]*i+s[15]);return this.x=(s[0]*t+s[4]*n+s[8]*i+s[12])*o,this.y=(s[1]*t+s[5]*n+s[9]*i+s[13])*o,this.z=(s[2]*t+s[6]*n+s[10]*i+s[14])*o,this}applyQuaternion(e){const t=this.x,n=this.y,i=this.z,s=e.x,o=e.y,a=e.z,c=e.w,h=c*t+o*i-a*n,u=c*n+a*t-s*i,f=c*i+s*n-o*t,d=-s*t-o*n-a*i;return this.x=h*c+d*-s+u*-a-f*-o,this.y=u*c+d*-o+f*-s-h*-a,this.z=f*c+d*-a+h*-o-u*-s,this}project(e){return this.applyMatrix4(e.matrixWorldInverse).applyMatrix4(e.projectionMatrix)}unproject(e){return this.applyMatrix4(e.projectionMatrixInverse).applyMatrix4(e.matrixWorld)}transformDirection(e){const t=this.x,n=this.y,i=this.z,s=e.elements;return this.x=s[0]*t+s[4]*n+s[8]*i,this.y=s[1]*t+s[5]*n+s[9]*i,this.z=s[2]*t+s[6]*n+s[10]*i,this.normalize()}divide(e){return this.x/=e.x,this.y/=e.y,this.z/=e.z,this}divideScalar(e){return this.multiplyScalar(1/e)}min(e){return this.x=Math.min(this.x,e.x),this.y=Math.min(this.y,e.y),this.z=Math.min(this.z,e.z),this}max(e){return this.x=Math.max(this.x,e.x),this.y=Math.max(this.y,e.y),this.z=Math.max(this.z,e.z),this}clamp(e,t){return this.x=Math.max(e.x,Math.min(t.x,this.x)),this.y=Math.max(e.y,Math.min(t.y,this.y)),this.z=Math.max(e.z,Math.min(t.z,this.z)),this}clampScalar(e,t){return this.x=Math.max(e,Math.min(t,this.x)),this.y=Math.max(e,Math.min(t,this.y)),this.z=Math.max(e,Math.min(t,this.z)),this}clampLength(e,t){const n=this.length();return this.divideScalar(n||1).multiplyScalar(Math.max(e,Math.min(t,n)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=this.x<0?Math.ceil(this.x):Math.floor(this.x),this.y=this.y<0?Math.ceil(this.y):Math.floor(this.y),this.z=this.z<0?Math.ceil(this.z):Math.floor(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(e){return this.x*e.x+this.y*e.y+this.z*e.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(e){return this.normalize().multiplyScalar(e)}lerp(e,t){return this.x+=(e.x-this.x)*t,this.y+=(e.y-this.y)*t,this.z+=(e.z-this.z)*t,this}lerpVectors(e,t,n){return this.x=e.x+(t.x-e.x)*n,this.y=e.y+(t.y-e.y)*n,this.z=e.z+(t.z-e.z)*n,this}cross(e,t){return t!==void 0?(console.warn("THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead."),this.crossVectors(e,t)):this.crossVectors(this,e)}crossVectors(e,t){const n=e.x,i=e.y,s=e.z,o=t.x,a=t.y,c=t.z;return this.x=i*c-s*a,this.y=s*o-n*c,this.z=n*a-i*o,this}projectOnVector(e){const t=e.lengthSq();if(t===0)return this.set(0,0,0);const n=e.dot(this)/t;return this.copy(e).multiplyScalar(n)}projectOnPlane(e){return Ia.copy(this).projectOnVector(e),this.sub(Ia)}reflect(e){return this.sub(Ia.copy(e).multiplyScalar(2*this.dot(e)))}angleTo(e){const t=Math.sqrt(this.lengthSq()*e.lengthSq());if(t===0)return Math.PI/2;const n=this.dot(e)/t;return Math.acos(yt(n,-1,1))}distanceTo(e){return Math.sqrt(this.distanceToSquared(e))}distanceToSquared(e){const t=this.x-e.x,n=this.y-e.y,i=this.z-e.z;return t*t+n*n+i*i}manhattanDistanceTo(e){return Math.abs(this.x-e.x)+Math.abs(this.y-e.y)+Math.abs(this.z-e.z)}setFromSpherical(e){return this.setFromSphericalCoords(e.radius,e.phi,e.theta)}setFromSphericalCoords(e,t,n){const i=Math.sin(t)*e;return this.x=i*Math.sin(n),this.y=Math.cos(t)*e,this.z=i*Math.cos(n),this}setFromCylindrical(e){return this.setFromCylindricalCoords(e.radius,e.theta,e.y)}setFromCylindricalCoords(e,t,n){return this.x=e*Math.sin(t),this.y=n,this.z=e*Math.cos(t),this}setFromMatrixPosition(e){const t=e.elements;return this.x=t[12],this.y=t[13],this.z=t[14],this}setFromMatrixScale(e){const t=this.setFromMatrixColumn(e,0).length(),n=this.setFromMatrixColumn(e,1).length(),i=this.setFromMatrixColumn(e,2).length();return this.x=t,this.y=n,this.z=i,this}setFromMatrixColumn(e,t){return this.fromArray(e.elements,t*4)}setFromMatrix3Column(e,t){return this.fromArray(e.elements,t*3)}setFromEuler(e){return this.x=e._x,this.y=e._y,this.z=e._z,this}equals(e){return e.x===this.x&&e.y===this.y&&e.z===this.z}fromArray(e,t=0){return this.x=e[t],this.y=e[t+1],this.z=e[t+2],this}toArray(e=[],t=0){return e[t]=this.x,e[t+1]=this.y,e[t+2]=this.z,e}fromBufferAttribute(e,t,n){return n!==void 0&&console.warn("THREE.Vector3: offset has been removed from .fromBufferAttribute()."),this.x=e.getX(t),this.y=e.getY(t),this.z=e.getZ(t),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const e=(Math.random()-.5)*2,t=Math.random()*Math.PI*2,n=Math.sqrt(1-e**2);return this.x=n*Math.cos(t),this.y=n*Math.sin(t),this.z=e,this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}D.prototype.isVector3=!0;const Ia=new D,Vc=new Ot;class en{constructor(e=new D(1/0,1/0,1/0),t=new D(-1/0,-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromArray(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,h=e.length;c<h;c+=3){const u=e[c],f=e[c+1],d=e[c+2];u<t&&(t=u),f<n&&(n=f),d<i&&(i=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromBufferAttribute(e){let t=1/0,n=1/0,i=1/0,s=-1/0,o=-1/0,a=-1/0;for(let c=0,h=e.count;c<h;c++){const u=e.getX(c),f=e.getY(c),d=e.getZ(c);u<t&&(t=u),f<n&&(n=f),d<i&&(i=d),u>s&&(s=u),f>o&&(o=f),d>a&&(a=d)}return this.min.set(t,n,i),this.max.set(s,o,a),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=Si.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}setFromObject(e,t=!1){return this.makeEmpty(),this.expandByObject(e,t)}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(e){return this.isEmpty()?e.set(0,0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}expandByObject(e,t=!1){e.updateWorldMatrix(!1,!1);const n=e.geometry;if(n!==void 0)if(t&&n.attributes!=null&&n.attributes.position!==void 0){const s=n.attributes.position;for(let o=0,a=s.count;o<a;o++)Si.fromBufferAttribute(s,o).applyMatrix4(e.matrixWorld),this.expandByPoint(Si)}else n.boundingBox===null&&n.computeBoundingBox(),Da.copy(n.boundingBox),Da.applyMatrix4(e.matrixWorld),this.union(Da);const i=e.children;for(let s=0,o=i.length;s<o;s++)this.expandByObject(i[s],t);return this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y||e.z<this.min.z||e.z>this.max.z)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y&&this.min.z<=e.min.z&&e.max.z<=this.max.z}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y),(e.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y||e.max.z<this.min.z||e.min.z>this.max.z)}intersectsSphere(e){return this.clampPoint(e.center,Si),Si.distanceToSquared(e.center)<=e.radius*e.radius}intersectsPlane(e){let t,n;return e.normal.x>0?(t=e.normal.x*this.min.x,n=e.normal.x*this.max.x):(t=e.normal.x*this.max.x,n=e.normal.x*this.min.x),e.normal.y>0?(t+=e.normal.y*this.min.y,n+=e.normal.y*this.max.y):(t+=e.normal.y*this.max.y,n+=e.normal.y*this.min.y),e.normal.z>0?(t+=e.normal.z*this.min.z,n+=e.normal.z*this.max.z):(t+=e.normal.z*this.max.z,n+=e.normal.z*this.min.z),t<=-e.constant&&n>=-e.constant}intersectsTriangle(e){if(this.isEmpty())return!1;this.getCenter(rs),js.subVectors(this.max,rs),hr.subVectors(e.a,rs),ur.subVectors(e.b,rs),dr.subVectors(e.c,rs),ti.subVectors(ur,hr),ni.subVectors(dr,ur),Ai.subVectors(hr,dr);let t=[0,-ti.z,ti.y,0,-ni.z,ni.y,0,-Ai.z,Ai.y,ti.z,0,-ti.x,ni.z,0,-ni.x,Ai.z,0,-Ai.x,-ti.y,ti.x,0,-ni.y,ni.x,0,-Ai.y,Ai.x,0];return!Na(t,hr,ur,dr,js)||(t=[1,0,0,0,1,0,0,0,1],!Na(t,hr,ur,dr,js))?!1:(Js.crossVectors(ti,ni),t=[Js.x,Js.y,Js.z],Na(t,hr,ur,dr,js))}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return Si.copy(e).clamp(this.min,this.max).sub(e).length()}getBoundingSphere(e){return this.getCenter(e.center),e.radius=this.getSize(Si).length()*.5,e}intersect(e){return this.min.max(e.min),this.max.min(e.max),this.isEmpty()&&this.makeEmpty(),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}applyMatrix4(e){return this.isEmpty()?this:(Bn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(e),Bn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(e),Bn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(e),Bn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(e),Bn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(e),Bn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(e),Bn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(e),Bn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(e),this.setFromPoints(Bn),this)}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}en.prototype.isBox3=!0;const Bn=[new D,new D,new D,new D,new D,new D,new D,new D],Si=new D,Da=new en,hr=new D,ur=new D,dr=new D,ti=new D,ni=new D,Ai=new D,rs=new D,js=new D,Js=new D,Ri=new D;function Na(r,e,t,n,i){for(let s=0,o=r.length-3;s<=o;s+=3){Ri.fromArray(r,s);const a=i.x*Math.abs(Ri.x)+i.y*Math.abs(Ri.y)+i.z*Math.abs(Ri.z),c=e.dot(Ri),h=t.dot(Ri),u=n.dot(Ri);if(Math.max(-Math.max(c,h,u),Math.min(c,h,u))>a)return!1}return!0}const Gp=new en,Wc=new D,Qs=new D,Oa=new D;class xi{constructor(e=new D,t=-1){this.center=e,this.radius=t}set(e,t){return this.center.copy(e),this.radius=t,this}setFromPoints(e,t){const n=this.center;t!==void 0?n.copy(t):Gp.setFromPoints(e).getCenter(n);let i=0;for(let s=0,o=e.length;s<o;s++)i=Math.max(i,n.distanceToSquared(e[s]));return this.radius=Math.sqrt(i),this}copy(e){return this.center.copy(e.center),this.radius=e.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(e){return e.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(e){return e.distanceTo(this.center)-this.radius}intersectsSphere(e){const t=this.radius+e.radius;return e.center.distanceToSquared(this.center)<=t*t}intersectsBox(e){return e.intersectsSphere(this)}intersectsPlane(e){return Math.abs(e.distanceToPoint(this.center))<=this.radius}clampPoint(e,t){const n=this.center.distanceToSquared(e);return t.copy(e),n>this.radius*this.radius&&(t.sub(this.center).normalize(),t.multiplyScalar(this.radius).add(this.center)),t}getBoundingBox(e){return this.isEmpty()?(e.makeEmpty(),e):(e.set(this.center,this.center),e.expandByScalar(this.radius),e)}applyMatrix4(e){return this.center.applyMatrix4(e),this.radius=this.radius*e.getMaxScaleOnAxis(),this}translate(e){return this.center.add(e),this}expandByPoint(e){Oa.subVectors(e,this.center);const t=Oa.lengthSq();if(t>this.radius*this.radius){const n=Math.sqrt(t),i=(n-this.radius)*.5;this.center.add(Oa.multiplyScalar(i/n)),this.radius+=i}return this}union(e){return this.center.equals(e.center)===!0?Qs.set(0,0,1).multiplyScalar(e.radius):Qs.subVectors(e.center,this.center).normalize().multiplyScalar(e.radius),this.expandByPoint(Wc.copy(e.center).add(Qs)),this.expandByPoint(Wc.copy(e.center).sub(Qs)),this}equals(e){return e.center.equals(this.center)&&e.radius===this.radius}clone(){return new this.constructor().copy(this)}}const Hn=new D,Fa=new D,eo=new D,ii=new D,Ua=new D,to=new D,Ba=new D;class Mi{constructor(e=new D,t=new D(0,0,-1)){this.origin=e,this.direction=t}set(e,t){return this.origin.copy(e),this.direction.copy(t),this}copy(e){return this.origin.copy(e.origin),this.direction.copy(e.direction),this}at(e,t){return t.copy(this.direction).multiplyScalar(e).add(this.origin)}lookAt(e){return this.direction.copy(e).sub(this.origin).normalize(),this}recast(e){return this.origin.copy(this.at(e,Hn)),this}closestPointToPoint(e,t){t.subVectors(e,this.origin);const n=t.dot(this.direction);return n<0?t.copy(this.origin):t.copy(this.direction).multiplyScalar(n).add(this.origin)}distanceToPoint(e){return Math.sqrt(this.distanceSqToPoint(e))}distanceSqToPoint(e){const t=Hn.subVectors(e,this.origin).dot(this.direction);return t<0?this.origin.distanceToSquared(e):(Hn.copy(this.direction).multiplyScalar(t).add(this.origin),Hn.distanceToSquared(e))}distanceSqToSegment(e,t,n,i){Fa.copy(e).add(t).multiplyScalar(.5),eo.copy(t).sub(e).normalize(),ii.copy(this.origin).sub(Fa);const s=e.distanceTo(t)*.5,o=-this.direction.dot(eo),a=ii.dot(this.direction),c=-ii.dot(eo),h=ii.lengthSq(),u=Math.abs(1-o*o);let f,d,p,v;if(u>0)if(f=o*c-a,d=o*a-c,v=s*u,f>=0)if(d>=-v)if(d<=v){const m=1/u;f*=m,d*=m,p=f*(f+o*d+2*a)+d*(o*f+d+2*c)+h}else d=s,f=Math.max(0,-(o*d+a)),p=-f*f+d*(d+2*c)+h;else d=-s,f=Math.max(0,-(o*d+a)),p=-f*f+d*(d+2*c)+h;else d<=-v?(f=Math.max(0,-(-o*s+a)),d=f>0?-s:Math.min(Math.max(-s,-c),s),p=-f*f+d*(d+2*c)+h):d<=v?(f=0,d=Math.min(Math.max(-s,-c),s),p=d*(d+2*c)+h):(f=Math.max(0,-(o*s+a)),d=f>0?s:Math.min(Math.max(-s,-c),s),p=-f*f+d*(d+2*c)+h);else d=o>0?-s:s,f=Math.max(0,-(o*d+a)),p=-f*f+d*(d+2*c)+h;return n&&n.copy(this.direction).multiplyScalar(f).add(this.origin),i&&i.copy(eo).multiplyScalar(d).add(Fa),p}intersectSphere(e,t){Hn.subVectors(e.center,this.origin);const n=Hn.dot(this.direction),i=Hn.dot(Hn)-n*n,s=e.radius*e.radius;if(i>s)return null;const o=Math.sqrt(s-i),a=n-o,c=n+o;return a<0&&c<0?null:a<0?this.at(c,t):this.at(a,t)}intersectsSphere(e){return this.distanceSqToPoint(e.center)<=e.radius*e.radius}distanceToPlane(e){const t=e.normal.dot(this.direction);if(t===0)return e.distanceToPoint(this.origin)===0?0:null;const n=-(this.origin.dot(e.normal)+e.constant)/t;return n>=0?n:null}intersectPlane(e,t){const n=this.distanceToPlane(e);return n===null?null:this.at(n,t)}intersectsPlane(e){const t=e.distanceToPoint(this.origin);return t===0||e.normal.dot(this.direction)*t<0}intersectBox(e,t){let n,i,s,o,a,c;const h=1/this.direction.x,u=1/this.direction.y,f=1/this.direction.z,d=this.origin;return h>=0?(n=(e.min.x-d.x)*h,i=(e.max.x-d.x)*h):(n=(e.max.x-d.x)*h,i=(e.min.x-d.x)*h),u>=0?(s=(e.min.y-d.y)*u,o=(e.max.y-d.y)*u):(s=(e.max.y-d.y)*u,o=(e.min.y-d.y)*u),n>o||s>i||((s>n||n!==n)&&(n=s),(o<i||i!==i)&&(i=o),f>=0?(a=(e.min.z-d.z)*f,c=(e.max.z-d.z)*f):(a=(e.max.z-d.z)*f,c=(e.min.z-d.z)*f),n>c||a>i)||((a>n||n!==n)&&(n=a),(c<i||i!==i)&&(i=c),i<0)?null:this.at(n>=0?n:i,t)}intersectsBox(e){return this.intersectBox(e,Hn)!==null}intersectTriangle(e,t,n,i,s){Ua.subVectors(t,e),to.subVectors(n,e),Ba.crossVectors(Ua,to);let o=this.direction.dot(Ba),a;if(o>0){if(i)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ii.subVectors(this.origin,e);const c=a*this.direction.dot(to.crossVectors(ii,to));if(c<0)return null;const h=a*this.direction.dot(Ua.cross(ii));if(h<0||c+h>o)return null;const u=-a*ii.dot(Ba);return u<0?null:this.at(u/o,s)}applyMatrix4(e){return this.origin.applyMatrix4(e),this.direction.transformDirection(e),this}equals(e){return e.origin.equals(this.origin)&&e.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Ae{constructor(){this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],arguments.length>0&&console.error("THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.")}set(e,t,n,i,s,o,a,c,h,u,f,d,p,v,m,g){const E=this.elements;return E[0]=e,E[4]=t,E[8]=n,E[12]=i,E[1]=s,E[5]=o,E[9]=a,E[13]=c,E[2]=h,E[6]=u,E[10]=f,E[14]=d,E[3]=p,E[7]=v,E[11]=m,E[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Ae().fromArray(this.elements)}copy(e){const t=this.elements,n=e.elements;return t[0]=n[0],t[1]=n[1],t[2]=n[2],t[3]=n[3],t[4]=n[4],t[5]=n[5],t[6]=n[6],t[7]=n[7],t[8]=n[8],t[9]=n[9],t[10]=n[10],t[11]=n[11],t[12]=n[12],t[13]=n[13],t[14]=n[14],t[15]=n[15],this}copyPosition(e){const t=this.elements,n=e.elements;return t[12]=n[12],t[13]=n[13],t[14]=n[14],this}setFromMatrix3(e){const t=e.elements;return this.set(t[0],t[3],t[6],0,t[1],t[4],t[7],0,t[2],t[5],t[8],0,0,0,0,1),this}extractBasis(e,t,n){return e.setFromMatrixColumn(this,0),t.setFromMatrixColumn(this,1),n.setFromMatrixColumn(this,2),this}makeBasis(e,t,n){return this.set(e.x,t.x,n.x,0,e.y,t.y,n.y,0,e.z,t.z,n.z,0,0,0,0,1),this}extractRotation(e){const t=this.elements,n=e.elements,i=1/fr.setFromMatrixColumn(e,0).length(),s=1/fr.setFromMatrixColumn(e,1).length(),o=1/fr.setFromMatrixColumn(e,2).length();return t[0]=n[0]*i,t[1]=n[1]*i,t[2]=n[2]*i,t[3]=0,t[4]=n[4]*s,t[5]=n[5]*s,t[6]=n[6]*s,t[7]=0,t[8]=n[8]*o,t[9]=n[9]*o,t[10]=n[10]*o,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromEuler(e){e&&e.isEuler||console.error("THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.");const t=this.elements,n=e.x,i=e.y,s=e.z,o=Math.cos(n),a=Math.sin(n),c=Math.cos(i),h=Math.sin(i),u=Math.cos(s),f=Math.sin(s);if(e.order==="XYZ"){const d=o*u,p=o*f,v=a*u,m=a*f;t[0]=c*u,t[4]=-c*f,t[8]=h,t[1]=p+v*h,t[5]=d-m*h,t[9]=-a*c,t[2]=m-d*h,t[6]=v+p*h,t[10]=o*c}else if(e.order==="YXZ"){const d=c*u,p=c*f,v=h*u,m=h*f;t[0]=d+m*a,t[4]=v*a-p,t[8]=o*h,t[1]=o*f,t[5]=o*u,t[9]=-a,t[2]=p*a-v,t[6]=m+d*a,t[10]=o*c}else if(e.order==="ZXY"){const d=c*u,p=c*f,v=h*u,m=h*f;t[0]=d-m*a,t[4]=-o*f,t[8]=v+p*a,t[1]=p+v*a,t[5]=o*u,t[9]=m-d*a,t[2]=-o*h,t[6]=a,t[10]=o*c}else if(e.order==="ZYX"){const d=o*u,p=o*f,v=a*u,m=a*f;t[0]=c*u,t[4]=v*h-p,t[8]=d*h+m,t[1]=c*f,t[5]=m*h+d,t[9]=p*h-v,t[2]=-h,t[6]=a*c,t[10]=o*c}else if(e.order==="YZX"){const d=o*c,p=o*h,v=a*c,m=a*h;t[0]=c*u,t[4]=m-d*f,t[8]=v*f+p,t[1]=f,t[5]=o*u,t[9]=-a*u,t[2]=-h*u,t[6]=p*f+v,t[10]=d-m*f}else if(e.order==="XZY"){const d=o*c,p=o*h,v=a*c,m=a*h;t[0]=c*u,t[4]=-f,t[8]=h*u,t[1]=d*f+m,t[5]=o*u,t[9]=p*f-v,t[2]=v*f-p,t[6]=a*u,t[10]=m*f+d}return t[3]=0,t[7]=0,t[11]=0,t[12]=0,t[13]=0,t[14]=0,t[15]=1,this}makeRotationFromQuaternion(e){return this.compose(Vp,e,Wp)}lookAt(e,t,n){const i=this.elements;return Zt.subVectors(e,t),Zt.lengthSq()===0&&(Zt.z=1),Zt.normalize(),ri.crossVectors(n,Zt),ri.lengthSq()===0&&(Math.abs(n.z)===1?Zt.x+=1e-4:Zt.z+=1e-4,Zt.normalize(),ri.crossVectors(n,Zt)),ri.normalize(),no.crossVectors(Zt,ri),i[0]=ri.x,i[4]=no.x,i[8]=Zt.x,i[1]=ri.y,i[5]=no.y,i[9]=Zt.y,i[2]=ri.z,i[6]=no.z,i[10]=Zt.z,this}multiply(e,t){return t!==void 0?(console.warn("THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead."),this.multiplyMatrices(e,t)):this.multiplyMatrices(this,e)}premultiply(e){return this.multiplyMatrices(e,this)}multiplyMatrices(e,t){const n=e.elements,i=t.elements,s=this.elements,o=n[0],a=n[4],c=n[8],h=n[12],u=n[1],f=n[5],d=n[9],p=n[13],v=n[2],m=n[6],g=n[10],E=n[14],b=n[3],C=n[7],S=n[11],A=n[15],O=i[0],V=i[4],U=i[8],Q=i[12],Z=i[1],L=i[5],B=i[9],Y=i[13],z=i[2],N=i[6],R=i[10],P=i[14],F=i[3],X=i[7],J=i[11],te=i[15];return s[0]=o*O+a*Z+c*z+h*F,s[4]=o*V+a*L+c*N+h*X,s[8]=o*U+a*B+c*R+h*J,s[12]=o*Q+a*Y+c*P+h*te,s[1]=u*O+f*Z+d*z+p*F,s[5]=u*V+f*L+d*N+p*X,s[9]=u*U+f*B+d*R+p*J,s[13]=u*Q+f*Y+d*P+p*te,s[2]=v*O+m*Z+g*z+E*F,s[6]=v*V+m*L+g*N+E*X,s[10]=v*U+m*B+g*R+E*J,s[14]=v*Q+m*Y+g*P+E*te,s[3]=b*O+C*Z+S*z+A*F,s[7]=b*V+C*L+S*N+A*X,s[11]=b*U+C*B+S*R+A*J,s[15]=b*Q+C*Y+S*P+A*te,this}multiplyScalar(e){const t=this.elements;return t[0]*=e,t[4]*=e,t[8]*=e,t[12]*=e,t[1]*=e,t[5]*=e,t[9]*=e,t[13]*=e,t[2]*=e,t[6]*=e,t[10]*=e,t[14]*=e,t[3]*=e,t[7]*=e,t[11]*=e,t[15]*=e,this}determinant(){const e=this.elements,t=e[0],n=e[4],i=e[8],s=e[12],o=e[1],a=e[5],c=e[9],h=e[13],u=e[2],f=e[6],d=e[10],p=e[14],v=e[3],m=e[7],g=e[11],E=e[15];return v*(+s*c*f-i*h*f-s*a*d+n*h*d+i*a*p-n*c*p)+m*(+t*c*p-t*h*d+s*o*d-i*o*p+i*h*u-s*c*u)+g*(+t*h*f-t*a*p-s*o*f+n*o*p+s*a*u-n*h*u)+E*(-i*a*u-t*c*f+t*a*d+i*o*f-n*o*d+n*c*u)}transpose(){const e=this.elements;let t;return t=e[1],e[1]=e[4],e[4]=t,t=e[2],e[2]=e[8],e[8]=t,t=e[6],e[6]=e[9],e[9]=t,t=e[3],e[3]=e[12],e[12]=t,t=e[7],e[7]=e[13],e[13]=t,t=e[11],e[11]=e[14],e[14]=t,this}setPosition(e,t,n){const i=this.elements;return e.isVector3?(i[12]=e.x,i[13]=e.y,i[14]=e.z):(i[12]=e,i[13]=t,i[14]=n),this}invert(){const e=this.elements,t=e[0],n=e[1],i=e[2],s=e[3],o=e[4],a=e[5],c=e[6],h=e[7],u=e[8],f=e[9],d=e[10],p=e[11],v=e[12],m=e[13],g=e[14],E=e[15],b=f*g*h-m*d*h+m*c*p-a*g*p-f*c*E+a*d*E,C=v*d*h-u*g*h-v*c*p+o*g*p+u*c*E-o*d*E,S=u*m*h-v*f*h+v*a*p-o*m*p-u*a*E+o*f*E,A=v*f*c-u*m*c-v*a*d+o*m*d+u*a*g-o*f*g,O=t*b+n*C+i*S+s*A;if(O===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const V=1/O;return e[0]=b*V,e[1]=(m*d*s-f*g*s-m*i*p+n*g*p+f*i*E-n*d*E)*V,e[2]=(a*g*s-m*c*s+m*i*h-n*g*h-a*i*E+n*c*E)*V,e[3]=(f*c*s-a*d*s-f*i*h+n*d*h+a*i*p-n*c*p)*V,e[4]=C*V,e[5]=(u*g*s-v*d*s+v*i*p-t*g*p-u*i*E+t*d*E)*V,e[6]=(v*c*s-o*g*s-v*i*h+t*g*h+o*i*E-t*c*E)*V,e[7]=(o*d*s-u*c*s+u*i*h-t*d*h-o*i*p+t*c*p)*V,e[8]=S*V,e[9]=(v*f*s-u*m*s-v*n*p+t*m*p+u*n*E-t*f*E)*V,e[10]=(o*m*s-v*a*s+v*n*h-t*m*h-o*n*E+t*a*E)*V,e[11]=(u*a*s-o*f*s-u*n*h+t*f*h+o*n*p-t*a*p)*V,e[12]=A*V,e[13]=(u*m*i-v*f*i+v*n*d-t*m*d-u*n*g+t*f*g)*V,e[14]=(v*a*i-o*m*i-v*n*c+t*m*c+o*n*g-t*a*g)*V,e[15]=(o*f*i-u*a*i+u*n*c-t*f*c-o*n*d+t*a*d)*V,this}scale(e){const t=this.elements,n=e.x,i=e.y,s=e.z;return t[0]*=n,t[4]*=i,t[8]*=s,t[1]*=n,t[5]*=i,t[9]*=s,t[2]*=n,t[6]*=i,t[10]*=s,t[3]*=n,t[7]*=i,t[11]*=s,this}getMaxScaleOnAxis(){const e=this.elements,t=e[0]*e[0]+e[1]*e[1]+e[2]*e[2],n=e[4]*e[4]+e[5]*e[5]+e[6]*e[6],i=e[8]*e[8]+e[9]*e[9]+e[10]*e[10];return Math.sqrt(Math.max(t,n,i))}makeTranslation(e,t,n){return this.set(1,0,0,e,0,1,0,t,0,0,1,n,0,0,0,1),this}makeRotationX(e){const t=Math.cos(e),n=Math.sin(e);return this.set(1,0,0,0,0,t,-n,0,0,n,t,0,0,0,0,1),this}makeRotationY(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,0,n,0,0,1,0,0,-n,0,t,0,0,0,0,1),this}makeRotationZ(e){const t=Math.cos(e),n=Math.sin(e);return this.set(t,-n,0,0,n,t,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(e,t){const n=Math.cos(t),i=Math.sin(t),s=1-n,o=e.x,a=e.y,c=e.z,h=s*o,u=s*a;return this.set(h*o+n,h*a-i*c,h*c+i*a,0,h*a+i*c,u*a+n,u*c-i*o,0,h*c-i*a,u*c+i*o,s*c*c+n,0,0,0,0,1),this}makeScale(e,t,n){return this.set(e,0,0,0,0,t,0,0,0,0,n,0,0,0,0,1),this}makeShear(e,t,n,i,s,o){return this.set(1,n,s,0,e,1,o,0,t,i,1,0,0,0,0,1),this}compose(e,t,n){const i=this.elements,s=t._x,o=t._y,a=t._z,c=t._w,h=s+s,u=o+o,f=a+a,d=s*h,p=s*u,v=s*f,m=o*u,g=o*f,E=a*f,b=c*h,C=c*u,S=c*f,A=n.x,O=n.y,V=n.z;return i[0]=(1-(m+E))*A,i[1]=(p+S)*A,i[2]=(v-C)*A,i[3]=0,i[4]=(p-S)*O,i[5]=(1-(d+E))*O,i[6]=(g+b)*O,i[7]=0,i[8]=(v+C)*V,i[9]=(g-b)*V,i[10]=(1-(d+m))*V,i[11]=0,i[12]=e.x,i[13]=e.y,i[14]=e.z,i[15]=1,this}decompose(e,t,n){const i=this.elements;let s=fr.set(i[0],i[1],i[2]).length();const o=fr.set(i[4],i[5],i[6]).length(),a=fr.set(i[8],i[9],i[10]).length();this.determinant()<0&&(s=-s),e.x=i[12],e.y=i[13],e.z=i[14],fn.copy(this);const h=1/s,u=1/o,f=1/a;return fn.elements[0]*=h,fn.elements[1]*=h,fn.elements[2]*=h,fn.elements[4]*=u,fn.elements[5]*=u,fn.elements[6]*=u,fn.elements[8]*=f,fn.elements[9]*=f,fn.elements[10]*=f,t.setFromRotationMatrix(fn),n.x=s,n.y=o,n.z=a,this}makePerspective(e,t,n,i,s,o){o===void 0&&console.warn("THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.");const a=this.elements,c=2*s/(t-e),h=2*s/(n-i),u=(t+e)/(t-e),f=(n+i)/(n-i),d=-(o+s)/(o-s),p=-2*o*s/(o-s);return a[0]=c,a[4]=0,a[8]=u,a[12]=0,a[1]=0,a[5]=h,a[9]=f,a[13]=0,a[2]=0,a[6]=0,a[10]=d,a[14]=p,a[3]=0,a[7]=0,a[11]=-1,a[15]=0,this}makeOrthographic(e,t,n,i,s,o){const a=this.elements,c=1/(t-e),h=1/(n-i),u=1/(o-s),f=(t+e)*c,d=(n+i)*h,p=(o+s)*u;return a[0]=2*c,a[4]=0,a[8]=0,a[12]=-f,a[1]=0,a[5]=2*h,a[9]=0,a[13]=-d,a[2]=0,a[6]=0,a[10]=-2*u,a[14]=-p,a[3]=0,a[7]=0,a[11]=0,a[15]=1,this}equals(e){const t=this.elements,n=e.elements;for(let i=0;i<16;i++)if(t[i]!==n[i])return!1;return!0}fromArray(e,t=0){for(let n=0;n<16;n++)this.elements[n]=e[n+t];return this}toArray(e=[],t=0){const n=this.elements;return e[t]=n[0],e[t+1]=n[1],e[t+2]=n[2],e[t+3]=n[3],e[t+4]=n[4],e[t+5]=n[5],e[t+6]=n[6],e[t+7]=n[7],e[t+8]=n[8],e[t+9]=n[9],e[t+10]=n[10],e[t+11]=n[11],e[t+12]=n[12],e[t+13]=n[13],e[t+14]=n[14],e[t+15]=n[15],e}}Ae.prototype.isMatrix4=!0;const fr=new D,fn=new Ae,Vp=new D(0,0,0),Wp=new D(1,1,1),ri=new D,no=new D,Zt=new D,Xc=new Ae,qc=new Ot;class Ei{constructor(e=0,t=0,n=0,i=Ei.DefaultOrder){this._x=e,this._y=t,this._z=n,this._order=i}get x(){return this._x}set x(e){this._x=e,this._onChangeCallback()}get y(){return this._y}set y(e){this._y=e,this._onChangeCallback()}get z(){return this._z}set z(e){this._z=e,this._onChangeCallback()}get order(){return this._order}set order(e){this._order=e,this._onChangeCallback()}set(e,t,n,i=this._order){return this._x=e,this._y=t,this._z=n,this._order=i,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(e){return this._x=e._x,this._y=e._y,this._z=e._z,this._order=e._order,this._onChangeCallback(),this}setFromRotationMatrix(e,t=this._order,n=!0){const i=e.elements,s=i[0],o=i[4],a=i[8],c=i[1],h=i[5],u=i[9],f=i[2],d=i[6],p=i[10];switch(t){case"XYZ":this._y=Math.asin(yt(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-u,p),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,h),this._z=0);break;case"YXZ":this._x=Math.asin(-yt(u,-1,1)),Math.abs(u)<.9999999?(this._y=Math.atan2(a,p),this._z=Math.atan2(c,h)):(this._y=Math.atan2(-f,s),this._z=0);break;case"ZXY":this._x=Math.asin(yt(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-f,p),this._z=Math.atan2(-o,h)):(this._y=0,this._z=Math.atan2(c,s));break;case"ZYX":this._y=Math.asin(-yt(f,-1,1)),Math.abs(f)<.9999999?(this._x=Math.atan2(d,p),this._z=Math.atan2(c,s)):(this._x=0,this._z=Math.atan2(-o,h));break;case"YZX":this._z=Math.asin(yt(c,-1,1)),Math.abs(c)<.9999999?(this._x=Math.atan2(-u,h),this._y=Math.atan2(-f,s)):(this._x=0,this._y=Math.atan2(a,p));break;case"XZY":this._z=Math.asin(-yt(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,h),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-u,p),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+t)}return this._order=t,n===!0&&this._onChangeCallback(),this}setFromQuaternion(e,t,n){return Xc.makeRotationFromQuaternion(e),this.setFromRotationMatrix(Xc,t,n)}setFromVector3(e,t=this._order){return this.set(e.x,e.y,e.z,t)}reorder(e){return qc.setFromEuler(this),this.setFromQuaternion(qc,e)}equals(e){return e._x===this._x&&e._y===this._y&&e._z===this._z&&e._order===this._order}fromArray(e){return this._x=e[0],this._y=e[1],this._z=e[2],e[3]!==void 0&&(this._order=e[3]),this._onChangeCallback(),this}toArray(e=[],t=0){return e[t]=this._x,e[t+1]=this._y,e[t+2]=this._z,e[t+3]=this._order,e}_onChange(e){return this._onChangeCallback=e,this}_onChangeCallback(){}}Ei.prototype.isEuler=!0;Ei.DefaultOrder="XYZ";Ei.RotationOrders=["XYZ","YZX","ZXY","XZY","YXZ","ZYX"];class na{constructor(){this.mask=1}set(e){this.mask=(1<<e|0)>>>0}enable(e){this.mask|=1<<e|0}enableAll(){this.mask=-1}toggle(e){this.mask^=1<<e|0}disable(e){this.mask&=~(1<<e|0)}disableAll(){this.mask=0}test(e){return(this.mask&e.mask)!==0}isEnabled(e){return(this.mask&(1<<e|0))!==0}}let Xp=0;const Yc=new D,pr=new Ot,zn=new Ae,io=new D,ss=new D,qp=new D,Yp=new Ot,Zc=new D(1,0,0),Kc=new D(0,1,0),$c=new D(0,0,1),Zp={type:"added"},jc={type:"removed"};class Je extends _i{constructor(){super(),Object.defineProperty(this,"id",{value:Xp++}),this.uuid=Jt(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=Je.DefaultUp.clone();const e=new D,t=new Ei,n=new Ot,i=new D(1,1,1);function s(){n.setFromEuler(t,!1)}function o(){t.setFromQuaternion(n,void 0,!1)}t._onChange(s),n._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:e},rotation:{configurable:!0,enumerable:!0,value:t},quaternion:{configurable:!0,enumerable:!0,value:n},scale:{configurable:!0,enumerable:!0,value:i},modelViewMatrix:{value:new Ae},normalMatrix:{value:new Lt}}),this.matrix=new Ae,this.matrixWorld=new Ae,this.matrixAutoUpdate=Je.DefaultMatrixAutoUpdate,this.matrixWorldNeedsUpdate=!1,this.layers=new na,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeRender(){}onAfterRender(){}applyMatrix4(e){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(e),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(e){return this.quaternion.premultiply(e),this}setRotationFromAxisAngle(e,t){this.quaternion.setFromAxisAngle(e,t)}setRotationFromEuler(e){this.quaternion.setFromEuler(e,!0)}setRotationFromMatrix(e){this.quaternion.setFromRotationMatrix(e)}setRotationFromQuaternion(e){this.quaternion.copy(e)}rotateOnAxis(e,t){return pr.setFromAxisAngle(e,t),this.quaternion.multiply(pr),this}rotateOnWorldAxis(e,t){return pr.setFromAxisAngle(e,t),this.quaternion.premultiply(pr),this}rotateX(e){return this.rotateOnAxis(Zc,e)}rotateY(e){return this.rotateOnAxis(Kc,e)}rotateZ(e){return this.rotateOnAxis($c,e)}translateOnAxis(e,t){return Yc.copy(e).applyQuaternion(this.quaternion),this.position.add(Yc.multiplyScalar(t)),this}translateX(e){return this.translateOnAxis(Zc,e)}translateY(e){return this.translateOnAxis(Kc,e)}translateZ(e){return this.translateOnAxis($c,e)}localToWorld(e){return e.applyMatrix4(this.matrixWorld)}worldToLocal(e){return e.applyMatrix4(zn.copy(this.matrixWorld).invert())}lookAt(e,t,n){e.isVector3?io.copy(e):io.set(e,t,n);const i=this.parent;this.updateWorldMatrix(!0,!1),ss.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?zn.lookAt(ss,io,this.up):zn.lookAt(io,ss,this.up),this.quaternion.setFromRotationMatrix(zn),i&&(zn.extractRotation(i.matrixWorld),pr.setFromRotationMatrix(zn),this.quaternion.premultiply(pr.invert()))}add(e){if(arguments.length>1){for(let t=0;t<arguments.length;t++)this.add(arguments[t]);return this}return e===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",e),this):(e&&e.isObject3D?(e.parent!==null&&e.parent.remove(e),e.parent=this,this.children.push(e),e.dispatchEvent(Zp)):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",e),this)}remove(e){if(arguments.length>1){for(let n=0;n<arguments.length;n++)this.remove(arguments[n]);return this}const t=this.children.indexOf(e);return t!==-1&&(e.parent=null,this.children.splice(t,1),e.dispatchEvent(jc)),this}removeFromParent(){const e=this.parent;return e!==null&&e.remove(this),this}clear(){for(let e=0;e<this.children.length;e++){const t=this.children[e];t.parent=null,t.dispatchEvent(jc)}return this.children.length=0,this}attach(e){return this.updateWorldMatrix(!0,!1),zn.copy(this.matrixWorld).invert(),e.parent!==null&&(e.parent.updateWorldMatrix(!0,!1),zn.multiply(e.parent.matrixWorld)),e.applyMatrix4(zn),this.add(e),e.updateWorldMatrix(!1,!0),this}getObjectById(e){return this.getObjectByProperty("id",e)}getObjectByName(e){return this.getObjectByProperty("name",e)}getObjectByProperty(e,t){if(this[e]===t)return this;for(let n=0,i=this.children.length;n<i;n++){const o=this.children[n].getObjectByProperty(e,t);if(o!==void 0)return o}}getWorldPosition(e){return this.updateWorldMatrix(!0,!1),e.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ss,e,qp),e}getWorldScale(e){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(ss,Yp,e),e}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(t[8],t[9],t[10]).normalize()}raycast(){}traverse(e){e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverse(e)}traverseVisible(e){if(this.visible===!1)return;e(this);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].traverseVisible(e)}traverseAncestors(e){const t=this.parent;t!==null&&(e(t),t.traverseAncestors(e))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(e){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||e)&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),this.matrixWorldNeedsUpdate=!1,e=!0);const t=this.children;for(let n=0,i=t.length;n<i;n++)t[n].updateMatrixWorld(e)}updateWorldMatrix(e,t){const n=this.parent;if(e===!0&&n!==null&&n.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix),t===!0){const i=this.children;for(let s=0,o=i.length;s<o;s++)i[s].updateWorldMatrix(!1,!0)}}toJSON(e){const t=e===void 0||typeof e=="string",n={};t&&(e={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},n.metadata={version:4.5,type:"Object",generator:"Object3D.toJSON"});const i={};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.castShadow===!0&&(i.castShadow=!0),this.receiveShadow===!0&&(i.receiveShadow=!0),this.visible===!1&&(i.visible=!1),this.frustumCulled===!1&&(i.frustumCulled=!1),this.renderOrder!==0&&(i.renderOrder=this.renderOrder),JSON.stringify(this.userData)!=="{}"&&(i.userData=this.userData),i.layers=this.layers.mask,i.matrix=this.matrix.toArray(),this.matrixAutoUpdate===!1&&(i.matrixAutoUpdate=!1),this.isInstancedMesh&&(i.type="InstancedMesh",i.count=this.count,i.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(i.instanceColor=this.instanceColor.toJSON()));function s(a,c){return a[c.uuid]===void 0&&(a[c.uuid]=c.toJSON(e)),c.uuid}if(this.isScene)this.background&&(this.background.isColor?i.background=this.background.toJSON():this.background.isTexture&&(i.background=this.background.toJSON(e).uuid)),this.environment&&this.environment.isTexture&&(i.environment=this.environment.toJSON(e).uuid);else if(this.isMesh||this.isLine||this.isPoints){i.geometry=s(e.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const c=a.shapes;if(Array.isArray(c))for(let h=0,u=c.length;h<u;h++){const f=c[h];s(e.shapes,f)}else s(e.shapes,c)}}if(this.isSkinnedMesh&&(i.bindMode=this.bindMode,i.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(e.skeletons,this.skeleton),i.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let c=0,h=this.material.length;c<h;c++)a.push(s(e.materials,this.material[c]));i.material=a}else i.material=s(e.materials,this.material);if(this.children.length>0){i.children=[];for(let a=0;a<this.children.length;a++)i.children.push(this.children[a].toJSON(e).object)}if(this.animations.length>0){i.animations=[];for(let a=0;a<this.animations.length;a++){const c=this.animations[a];i.animations.push(s(e.animations,c))}}if(t){const a=o(e.geometries),c=o(e.materials),h=o(e.textures),u=o(e.images),f=o(e.shapes),d=o(e.skeletons),p=o(e.animations),v=o(e.nodes);a.length>0&&(n.geometries=a),c.length>0&&(n.materials=c),h.length>0&&(n.textures=h),u.length>0&&(n.images=u),f.length>0&&(n.shapes=f),d.length>0&&(n.skeletons=d),p.length>0&&(n.animations=p),v.length>0&&(n.nodes=v)}return n.object=i,n;function o(a){const c=[];for(const h in a){const u=a[h];delete u.metadata,c.push(u)}return c}}clone(e){return new this.constructor().copy(this,e)}copy(e,t=!0){if(this.name=e.name,this.up.copy(e.up),this.position.copy(e.position),this.rotation.order=e.rotation.order,this.quaternion.copy(e.quaternion),this.scale.copy(e.scale),this.matrix.copy(e.matrix),this.matrixWorld.copy(e.matrixWorld),this.matrixAutoUpdate=e.matrixAutoUpdate,this.matrixWorldNeedsUpdate=e.matrixWorldNeedsUpdate,this.layers.mask=e.layers.mask,this.visible=e.visible,this.castShadow=e.castShadow,this.receiveShadow=e.receiveShadow,this.frustumCulled=e.frustumCulled,this.renderOrder=e.renderOrder,this.userData=JSON.parse(JSON.stringify(e.userData)),t===!0)for(let n=0;n<e.children.length;n++){const i=e.children[n];this.add(i.clone())}return this}}Je.DefaultUp=new D(0,1,0);Je.DefaultMatrixAutoUpdate=!0;Je.prototype.isObject3D=!0;const pn=new D,kn=new D,Ha=new D,Gn=new D,mr=new D,gr=new D,Jc=new D,za=new D,ka=new D,Ga=new D;class xt{constructor(e=new D,t=new D,n=new D){this.a=e,this.b=t,this.c=n}static getNormal(e,t,n,i){i.subVectors(n,t),pn.subVectors(e,t),i.cross(pn);const s=i.lengthSq();return s>0?i.multiplyScalar(1/Math.sqrt(s)):i.set(0,0,0)}static getBarycoord(e,t,n,i,s){pn.subVectors(i,t),kn.subVectors(n,t),Ha.subVectors(e,t);const o=pn.dot(pn),a=pn.dot(kn),c=pn.dot(Ha),h=kn.dot(kn),u=kn.dot(Ha),f=o*h-a*a;if(f===0)return s.set(-2,-1,-1);const d=1/f,p=(h*c-a*u)*d,v=(o*u-a*c)*d;return s.set(1-p-v,v,p)}static containsPoint(e,t,n,i){return this.getBarycoord(e,t,n,i,Gn),Gn.x>=0&&Gn.y>=0&&Gn.x+Gn.y<=1}static getUV(e,t,n,i,s,o,a,c){return this.getBarycoord(e,t,n,i,Gn),c.set(0,0),c.addScaledVector(s,Gn.x),c.addScaledVector(o,Gn.y),c.addScaledVector(a,Gn.z),c}static isFrontFacing(e,t,n,i){return pn.subVectors(n,t),kn.subVectors(e,t),pn.cross(kn).dot(i)<0}set(e,t,n){return this.a.copy(e),this.b.copy(t),this.c.copy(n),this}setFromPointsAndIndices(e,t,n,i){return this.a.copy(e[t]),this.b.copy(e[n]),this.c.copy(e[i]),this}setFromAttributeAndIndices(e,t,n,i){return this.a.fromBufferAttribute(e,t),this.b.fromBufferAttribute(e,n),this.c.fromBufferAttribute(e,i),this}clone(){return new this.constructor().copy(this)}copy(e){return this.a.copy(e.a),this.b.copy(e.b),this.c.copy(e.c),this}getArea(){return pn.subVectors(this.c,this.b),kn.subVectors(this.a,this.b),pn.cross(kn).length()*.5}getMidpoint(e){return e.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(e){return xt.getNormal(this.a,this.b,this.c,e)}getPlane(e){return e.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(e,t){return xt.getBarycoord(e,this.a,this.b,this.c,t)}getUV(e,t,n,i,s){return xt.getUV(e,this.a,this.b,this.c,t,n,i,s)}containsPoint(e){return xt.containsPoint(e,this.a,this.b,this.c)}isFrontFacing(e){return xt.isFrontFacing(this.a,this.b,this.c,e)}intersectsBox(e){return e.intersectsTriangle(this)}closestPointToPoint(e,t){const n=this.a,i=this.b,s=this.c;let o,a;mr.subVectors(i,n),gr.subVectors(s,n),za.subVectors(e,n);const c=mr.dot(za),h=gr.dot(za);if(c<=0&&h<=0)return t.copy(n);ka.subVectors(e,i);const u=mr.dot(ka),f=gr.dot(ka);if(u>=0&&f<=u)return t.copy(i);const d=c*f-u*h;if(d<=0&&c>=0&&u<=0)return o=c/(c-u),t.copy(n).addScaledVector(mr,o);Ga.subVectors(e,s);const p=mr.dot(Ga),v=gr.dot(Ga);if(v>=0&&p<=v)return t.copy(s);const m=p*h-c*v;if(m<=0&&h>=0&&v<=0)return a=h/(h-v),t.copy(n).addScaledVector(gr,a);const g=u*v-p*f;if(g<=0&&f-u>=0&&p-v>=0)return Jc.subVectors(s,i),a=(f-u)/(f-u+(p-v)),t.copy(i).addScaledVector(Jc,a);const E=1/(g+m+d);return o=m*E,a=d*E,t.copy(n).addScaledVector(mr,o).addScaledVector(gr,a)}equals(e){return e.a.equals(this.a)&&e.b.equals(this.b)&&e.c.equals(this.c)}}let Kp=0;class Mt extends _i{constructor(){super(),Object.defineProperty(this,"id",{value:Kp++}),this.uuid=Jt(),this.name="",this.type="Material",this.fog=!0,this.blending=ki,this.side=Yi,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.blendSrc=Zl,this.blendDst=Kl,this.blendEquation=Oi,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.depthFunc=Xo,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=cd,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Go,this.stencilZFail=Go,this.stencilZPass=Go,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(e){this._alphaTest>0!=e>0&&this.version++,this._alphaTest=e}onBuild(){}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(e){if(e!==void 0)for(const t in e){const n=e[t];if(n===void 0){console.warn("THREE.Material: '"+t+"' parameter is undefined.");continue}if(t==="shading"){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=n===Yl;continue}const i=this[t];if(i===void 0){console.warn("THREE."+this.type+": '"+t+"' is not a property of this material.");continue}i&&i.isColor?i.set(n):i&&i.isVector3&&n&&n.isVector3?i.copy(n):this[t]=n}}toJSON(e){const t=e===void 0||typeof e=="string";t&&(e={textures:{},images:{}});const n={metadata:{version:4.5,type:"Material",generator:"Material.toJSON"}};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.color&&this.color.isColor&&(n.color=this.color.getHex()),this.roughness!==void 0&&(n.roughness=this.roughness),this.metalness!==void 0&&(n.metalness=this.metalness),this.sheen!==void 0&&(n.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(n.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(n.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(n.emissive=this.emissive.getHex()),this.emissiveIntensity&&this.emissiveIntensity!==1&&(n.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(n.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(n.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(n.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(n.shininess=this.shininess),this.clearcoat!==void 0&&(n.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(n.clearcoatMap=this.clearcoatMap.toJSON(e).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(n.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(e).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(n.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(e).uuid,n.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.map&&this.map.isTexture&&(n.map=this.map.toJSON(e).uuid),this.matcap&&this.matcap.isTexture&&(n.matcap=this.matcap.toJSON(e).uuid),this.alphaMap&&this.alphaMap.isTexture&&(n.alphaMap=this.alphaMap.toJSON(e).uuid),this.lightMap&&this.lightMap.isTexture&&(n.lightMap=this.lightMap.toJSON(e).uuid,n.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(n.aoMap=this.aoMap.toJSON(e).uuid,n.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(n.bumpMap=this.bumpMap.toJSON(e).uuid,n.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(n.normalMap=this.normalMap.toJSON(e).uuid,n.normalMapType=this.normalMapType,n.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(n.displacementMap=this.displacementMap.toJSON(e).uuid,n.displacementScale=this.displacementScale,n.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(n.roughnessMap=this.roughnessMap.toJSON(e).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(n.metalnessMap=this.metalnessMap.toJSON(e).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(n.emissiveMap=this.emissiveMap.toJSON(e).uuid),this.specularMap&&this.specularMap.isTexture&&(n.specularMap=this.specularMap.toJSON(e).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(n.specularIntensityMap=this.specularIntensityMap.toJSON(e).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(n.specularColorMap=this.specularColorMap.toJSON(e).uuid),this.envMap&&this.envMap.isTexture&&(n.envMap=this.envMap.toJSON(e).uuid,this.combine!==void 0&&(n.combine=this.combine)),this.envMapIntensity!==void 0&&(n.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(n.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(n.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(n.gradientMap=this.gradientMap.toJSON(e).uuid),this.transmission!==void 0&&(n.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(n.transmissionMap=this.transmissionMap.toJSON(e).uuid),this.thickness!==void 0&&(n.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(n.thicknessMap=this.thicknessMap.toJSON(e).uuid),this.attenuationDistance!==void 0&&(n.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(n.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(n.size=this.size),this.shadowSide!==null&&(n.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(n.sizeAttenuation=this.sizeAttenuation),this.blending!==ki&&(n.blending=this.blending),this.side!==Yi&&(n.side=this.side),this.vertexColors&&(n.vertexColors=!0),this.opacity<1&&(n.opacity=this.opacity),this.transparent===!0&&(n.transparent=this.transparent),n.depthFunc=this.depthFunc,n.depthTest=this.depthTest,n.depthWrite=this.depthWrite,n.colorWrite=this.colorWrite,n.stencilWrite=this.stencilWrite,n.stencilWriteMask=this.stencilWriteMask,n.stencilFunc=this.stencilFunc,n.stencilRef=this.stencilRef,n.stencilFuncMask=this.stencilFuncMask,n.stencilFail=this.stencilFail,n.stencilZFail=this.stencilZFail,n.stencilZPass=this.stencilZPass,this.rotation!==void 0&&this.rotation!==0&&(n.rotation=this.rotation),this.polygonOffset===!0&&(n.polygonOffset=!0),this.polygonOffsetFactor!==0&&(n.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(n.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(n.linewidth=this.linewidth),this.dashSize!==void 0&&(n.dashSize=this.dashSize),this.gapSize!==void 0&&(n.gapSize=this.gapSize),this.scale!==void 0&&(n.scale=this.scale),this.dithering===!0&&(n.dithering=!0),this.alphaTest>0&&(n.alphaTest=this.alphaTest),this.alphaToCoverage===!0&&(n.alphaToCoverage=this.alphaToCoverage),this.premultipliedAlpha===!0&&(n.premultipliedAlpha=this.premultipliedAlpha),this.wireframe===!0&&(n.wireframe=this.wireframe),this.wireframeLinewidth>1&&(n.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(n.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(n.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(n.flatShading=this.flatShading),this.visible===!1&&(n.visible=!1),this.toneMapped===!1&&(n.toneMapped=!1),JSON.stringify(this.userData)!=="{}"&&(n.userData=this.userData);function i(s){const o=[];for(const a in s){const c=s[a];delete c.metadata,o.push(c)}return o}if(t){const s=i(e.textures),o=i(e.images);s.length>0&&(n.textures=s),o.length>0&&(n.images=o)}return n}clone(){return new this.constructor().copy(this)}copy(e){this.name=e.name,this.fog=e.fog,this.blending=e.blending,this.side=e.side,this.vertexColors=e.vertexColors,this.opacity=e.opacity,this.transparent=e.transparent,this.blendSrc=e.blendSrc,this.blendDst=e.blendDst,this.blendEquation=e.blendEquation,this.blendSrcAlpha=e.blendSrcAlpha,this.blendDstAlpha=e.blendDstAlpha,this.blendEquationAlpha=e.blendEquationAlpha,this.depthFunc=e.depthFunc,this.depthTest=e.depthTest,this.depthWrite=e.depthWrite,this.stencilWriteMask=e.stencilWriteMask,this.stencilFunc=e.stencilFunc,this.stencilRef=e.stencilRef,this.stencilFuncMask=e.stencilFuncMask,this.stencilFail=e.stencilFail,this.stencilZFail=e.stencilZFail,this.stencilZPass=e.stencilZPass,this.stencilWrite=e.stencilWrite;const t=e.clippingPlanes;let n=null;if(t!==null){const i=t.length;n=new Array(i);for(let s=0;s!==i;++s)n[s]=t[s].clone()}return this.clippingPlanes=n,this.clipIntersection=e.clipIntersection,this.clipShadows=e.clipShadows,this.shadowSide=e.shadowSide,this.colorWrite=e.colorWrite,this.precision=e.precision,this.polygonOffset=e.polygonOffset,this.polygonOffsetFactor=e.polygonOffsetFactor,this.polygonOffsetUnits=e.polygonOffsetUnits,this.dithering=e.dithering,this.alphaTest=e.alphaTest,this.alphaToCoverage=e.alphaToCoverage,this.premultipliedAlpha=e.premultipliedAlpha,this.visible=e.visible,this.toneMapped=e.toneMapped,this.userData=JSON.parse(JSON.stringify(e.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(e){e===!0&&this.version++}}Mt.prototype.isMaterial=!0;Mt.fromType=function(){return null};class $n extends Mt{constructor(e){super(),this.type="MeshBasicMaterial",this.color=new Me(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ds,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}$n.prototype.isMeshBasicMaterial=!0;const bt=new D,ro=new le;class tt{constructor(e,t,n){if(Array.isArray(e))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.name="",this.array=e,this.itemSize=t,this.count=e!==void 0?e.length/t:0,this.normalized=n===!0,this.usage=Ir,this.updateRange={offset:0,count:-1},this.version=0}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.name=e.name,this.array=new e.array.constructor(e.array),this.itemSize=e.itemSize,this.count=e.count,this.normalized=e.normalized,this.usage=e.usage,this}copyAt(e,t,n){e*=this.itemSize,n*=t.itemSize;for(let i=0,s=this.itemSize;i<s;i++)this.array[e+i]=t.array[n+i];return this}copyArray(e){return this.array.set(e),this}copyColorsArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyColorsArray(): color is undefined",i),o=new Me),t[n++]=o.r,t[n++]=o.g,t[n++]=o.b}return this}copyVector2sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector2sArray(): vector is undefined",i),o=new le),t[n++]=o.x,t[n++]=o.y}return this}copyVector3sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector3sArray(): vector is undefined",i),o=new D),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z}return this}copyVector4sArray(e){const t=this.array;let n=0;for(let i=0,s=e.length;i<s;i++){let o=e[i];o===void 0&&(console.warn("THREE.BufferAttribute.copyVector4sArray(): vector is undefined",i),o=new st),t[n++]=o.x,t[n++]=o.y,t[n++]=o.z,t[n++]=o.w}return this}applyMatrix3(e){if(this.itemSize===2)for(let t=0,n=this.count;t<n;t++)ro.fromBufferAttribute(this,t),ro.applyMatrix3(e),this.setXY(t,ro.x,ro.y);else if(this.itemSize===3)for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.applyMatrix3(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}applyMatrix4(e){for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.applyMatrix4(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.applyNormalMatrix(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)bt.fromBufferAttribute(this,t),bt.transformDirection(e),this.setXYZ(t,bt.x,bt.y,bt.z);return this}set(e,t=0){return this.array.set(e,t),this}getX(e){return this.array[e*this.itemSize]}setX(e,t){return this.array[e*this.itemSize]=t,this}getY(e){return this.array[e*this.itemSize+1]}setY(e,t){return this.array[e*this.itemSize+1]=t,this}getZ(e){return this.array[e*this.itemSize+2]}setZ(e,t){return this.array[e*this.itemSize+2]=t,this}getW(e){return this.array[e*this.itemSize+3]}setW(e,t){return this.array[e*this.itemSize+3]=t,this}setXY(e,t,n){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this}setXYZ(e,t,n,i){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e*=this.itemSize,this.array[e+0]=t,this.array[e+1]=n,this.array[e+2]=i,this.array[e+3]=s,this}onUpload(e){return this.onUploadCallback=e,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const e={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.prototype.slice.call(this.array),normalized:this.normalized};return this.name!==""&&(e.name=this.name),this.usage!==Ir&&(e.usage=this.usage),(this.updateRange.offset!==0||this.updateRange.count!==-1)&&(e.updateRange=this.updateRange),e}}tt.prototype.isBufferAttribute=!0;class vd extends tt{constructor(e,t,n){super(new Int8Array(e),t,n)}}class _d extends tt{constructor(e,t,n){super(new Uint8Array(e),t,n)}}class yd extends tt{constructor(e,t,n){super(new Uint8ClampedArray(e),t,n)}}class xd extends tt{constructor(e,t,n){super(new Int16Array(e),t,n)}}class ia extends tt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}class Md extends tt{constructor(e,t,n){super(new Int32Array(e),t,n)}}class ra extends tt{constructor(e,t,n){super(new Uint32Array(e),t,n)}}class Ed extends tt{constructor(e,t,n){super(new Uint16Array(e),t,n)}}Ed.prototype.isFloat16BufferAttribute=!0;class Se extends tt{constructor(e,t,n){super(new Float32Array(e),t,n)}}class wd extends tt{constructor(e,t,n){super(new Float64Array(e),t,n)}}let $p=0;const on=new Ae,Va=new Je,vr=new D,Kt=new en,os=new en,Pt=new D;class Ue extends _i{constructor(){super(),Object.defineProperty(this,"id",{value:$p++}),this.uuid=Jt(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(e){return Array.isArray(e)?this.index=new(dd(e)?ra:ia)(e,1):this.index=e,this}getAttribute(e){return this.attributes[e]}setAttribute(e,t){return this.attributes[e]=t,this}deleteAttribute(e){return delete this.attributes[e],this}hasAttribute(e){return this.attributes[e]!==void 0}addGroup(e,t,n=0){this.groups.push({start:e,count:t,materialIndex:n})}clearGroups(){this.groups=[]}setDrawRange(e,t){this.drawRange.start=e,this.drawRange.count=t}applyMatrix4(e){const t=this.attributes.position;t!==void 0&&(t.applyMatrix4(e),t.needsUpdate=!0);const n=this.attributes.normal;if(n!==void 0){const s=new Lt().getNormalMatrix(e);n.applyNormalMatrix(s),n.needsUpdate=!0}const i=this.attributes.tangent;return i!==void 0&&(i.transformDirection(e),i.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(e){return on.makeRotationFromQuaternion(e),this.applyMatrix4(on),this}rotateX(e){return on.makeRotationX(e),this.applyMatrix4(on),this}rotateY(e){return on.makeRotationY(e),this.applyMatrix4(on),this}rotateZ(e){return on.makeRotationZ(e),this.applyMatrix4(on),this}translate(e,t,n){return on.makeTranslation(e,t,n),this.applyMatrix4(on),this}scale(e,t,n){return on.makeScale(e,t,n),this.applyMatrix4(on),this}lookAt(e){return Va.lookAt(e),Va.updateMatrix(),this.applyMatrix4(Va.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(vr).negate(),this.translate(vr.x,vr.y,vr.z),this}setFromPoints(e){const t=[];for(let n=0,i=e.length;n<i;n++){const s=e[n];t.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Se(t,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new en);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingBox.set(new D(-1/0,-1/0,-1/0),new D(1/0,1/0,1/0));return}if(e!==void 0){if(this.boundingBox.setFromBufferAttribute(e),t)for(let n=0,i=t.length;n<i;n++){const s=t[n];Kt.setFromBufferAttribute(s),this.morphTargetsRelative?(Pt.addVectors(this.boundingBox.min,Kt.min),this.boundingBox.expandByPoint(Pt),Pt.addVectors(this.boundingBox.max,Kt.max),this.boundingBox.expandByPoint(Pt)):(this.boundingBox.expandByPoint(Kt.min),this.boundingBox.expandByPoint(Kt.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new xi);const e=this.attributes.position,t=this.morphAttributes.position;if(e&&e.isGLBufferAttribute){console.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set "mesh.frustumCulled" to "false".',this),this.boundingSphere.set(new D,1/0);return}if(e){const n=this.boundingSphere.center;if(Kt.setFromBufferAttribute(e),t)for(let s=0,o=t.length;s<o;s++){const a=t[s];os.setFromBufferAttribute(a),this.morphTargetsRelative?(Pt.addVectors(Kt.min,os.min),Kt.expandByPoint(Pt),Pt.addVectors(Kt.max,os.max),Kt.expandByPoint(Pt)):(Kt.expandByPoint(os.min),Kt.expandByPoint(os.max))}Kt.getCenter(n);let i=0;for(let s=0,o=e.count;s<o;s++)Pt.fromBufferAttribute(e,s),i=Math.max(i,n.distanceToSquared(Pt));if(t)for(let s=0,o=t.length;s<o;s++){const a=t[s],c=this.morphTargetsRelative;for(let h=0,u=a.count;h<u;h++)Pt.fromBufferAttribute(a,h),c&&(vr.fromBufferAttribute(e,h),Pt.add(vr)),i=Math.max(i,n.distanceToSquared(Pt))}this.boundingSphere.radius=Math.sqrt(i),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const e=this.index,t=this.attributes;if(e===null||t.position===void 0||t.normal===void 0||t.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const n=e.array,i=t.position.array,s=t.normal.array,o=t.uv.array,a=i.length/3;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new tt(new Float32Array(4*a),4));const c=this.getAttribute("tangent").array,h=[],u=[];for(let Z=0;Z<a;Z++)h[Z]=new D,u[Z]=new D;const f=new D,d=new D,p=new D,v=new le,m=new le,g=new le,E=new D,b=new D;function C(Z,L,B){f.fromArray(i,Z*3),d.fromArray(i,L*3),p.fromArray(i,B*3),v.fromArray(o,Z*2),m.fromArray(o,L*2),g.fromArray(o,B*2),d.sub(f),p.sub(f),m.sub(v),g.sub(v);const Y=1/(m.x*g.y-g.x*m.y);!isFinite(Y)||(E.copy(d).multiplyScalar(g.y).addScaledVector(p,-m.y).multiplyScalar(Y),b.copy(p).multiplyScalar(m.x).addScaledVector(d,-g.x).multiplyScalar(Y),h[Z].add(E),h[L].add(E),h[B].add(E),u[Z].add(b),u[L].add(b),u[B].add(b))}let S=this.groups;S.length===0&&(S=[{start:0,count:n.length}]);for(let Z=0,L=S.length;Z<L;++Z){const B=S[Z],Y=B.start,z=B.count;for(let N=Y,R=Y+z;N<R;N+=3)C(n[N+0],n[N+1],n[N+2])}const A=new D,O=new D,V=new D,U=new D;function Q(Z){V.fromArray(s,Z*3),U.copy(V);const L=h[Z];A.copy(L),A.sub(V.multiplyScalar(V.dot(L))).normalize(),O.crossVectors(U,L);const Y=O.dot(u[Z])<0?-1:1;c[Z*4]=A.x,c[Z*4+1]=A.y,c[Z*4+2]=A.z,c[Z*4+3]=Y}for(let Z=0,L=S.length;Z<L;++Z){const B=S[Z],Y=B.start,z=B.count;for(let N=Y,R=Y+z;N<R;N+=3)Q(n[N+0]),Q(n[N+1]),Q(n[N+2])}}computeVertexNormals(){const e=this.index,t=this.getAttribute("position");if(t!==void 0){let n=this.getAttribute("normal");if(n===void 0)n=new tt(new Float32Array(t.count*3),3),this.setAttribute("normal",n);else for(let d=0,p=n.count;d<p;d++)n.setXYZ(d,0,0,0);const i=new D,s=new D,o=new D,a=new D,c=new D,h=new D,u=new D,f=new D;if(e)for(let d=0,p=e.count;d<p;d+=3){const v=e.getX(d+0),m=e.getX(d+1),g=e.getX(d+2);i.fromBufferAttribute(t,v),s.fromBufferAttribute(t,m),o.fromBufferAttribute(t,g),u.subVectors(o,s),f.subVectors(i,s),u.cross(f),a.fromBufferAttribute(n,v),c.fromBufferAttribute(n,m),h.fromBufferAttribute(n,g),a.add(u),c.add(u),h.add(u),n.setXYZ(v,a.x,a.y,a.z),n.setXYZ(m,c.x,c.y,c.z),n.setXYZ(g,h.x,h.y,h.z)}else for(let d=0,p=t.count;d<p;d+=3)i.fromBufferAttribute(t,d+0),s.fromBufferAttribute(t,d+1),o.fromBufferAttribute(t,d+2),u.subVectors(o,s),f.subVectors(i,s),u.cross(f),n.setXYZ(d+0,u.x,u.y,u.z),n.setXYZ(d+1,u.x,u.y,u.z),n.setXYZ(d+2,u.x,u.y,u.z);this.normalizeNormals(),n.needsUpdate=!0}}merge(e,t){if(!(e&&e.isBufferGeometry)){console.error("THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.",e);return}t===void 0&&(t=0,console.warn("THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge."));const n=this.attributes;for(const i in n){if(e.attributes[i]===void 0)continue;const o=n[i].array,a=e.attributes[i],c=a.array,h=a.itemSize*t,u=Math.min(c.length,o.length-h);for(let f=0,d=h;f<u;f++,d++)o[d]=c[f]}return this}normalizeNormals(){const e=this.attributes.normal;for(let t=0,n=e.count;t<n;t++)Pt.fromBufferAttribute(e,t),Pt.normalize(),e.setXYZ(t,Pt.x,Pt.y,Pt.z)}toNonIndexed(){function e(a,c){const h=a.array,u=a.itemSize,f=a.normalized,d=new h.constructor(c.length*u);let p=0,v=0;for(let m=0,g=c.length;m<g;m++){a.isInterleavedBufferAttribute?p=c[m]*a.data.stride+a.offset:p=c[m]*u;for(let E=0;E<u;E++)d[v++]=h[p++]}return new tt(d,u,f)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const t=new Ue,n=this.index.array,i=this.attributes;for(const a in i){const c=i[a],h=e(c,n);t.setAttribute(a,h)}const s=this.morphAttributes;for(const a in s){const c=[],h=s[a];for(let u=0,f=h.length;u<f;u++){const d=h[u],p=e(d,n);c.push(p)}t.morphAttributes[a]=c}t.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,c=o.length;a<c;a++){const h=o[a];t.addGroup(h.start,h.count,h.materialIndex)}return t}toJSON(){const e={metadata:{version:4.5,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(e.uuid=this.uuid,e.type=this.type,this.name!==""&&(e.name=this.name),Object.keys(this.userData).length>0&&(e.userData=this.userData),this.parameters!==void 0){const c=this.parameters;for(const h in c)c[h]!==void 0&&(e[h]=c[h]);return e}e.data={attributes:{}};const t=this.index;t!==null&&(e.data.index={type:t.array.constructor.name,array:Array.prototype.slice.call(t.array)});const n=this.attributes;for(const c in n){const h=n[c];e.data.attributes[c]=h.toJSON(e.data)}const i={};let s=!1;for(const c in this.morphAttributes){const h=this.morphAttributes[c],u=[];for(let f=0,d=h.length;f<d;f++){const p=h[f];u.push(p.toJSON(e.data))}u.length>0&&(i[c]=u,s=!0)}s&&(e.data.morphAttributes=i,e.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(e.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(e.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),e}clone(){return new this.constructor().copy(this)}copy(e){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const t={};this.name=e.name;const n=e.index;n!==null&&this.setIndex(n.clone(t));const i=e.attributes;for(const h in i){const u=i[h];this.setAttribute(h,u.clone(t))}const s=e.morphAttributes;for(const h in s){const u=[],f=s[h];for(let d=0,p=f.length;d<p;d++)u.push(f[d].clone(t));this.morphAttributes[h]=u}this.morphTargetsRelative=e.morphTargetsRelative;const o=e.groups;for(let h=0,u=o.length;h<u;h++){const f=o[h];this.addGroup(f.start,f.count,f.materialIndex)}const a=e.boundingBox;a!==null&&(this.boundingBox=a.clone());const c=e.boundingSphere;return c!==null&&(this.boundingSphere=c.clone()),this.drawRange.start=e.drawRange.start,this.drawRange.count=e.drawRange.count,this.userData=e.userData,e.parameters!==void 0&&(this.parameters=Object.assign({},e.parameters)),this}dispose(){this.dispatchEvent({type:"dispose"})}}Ue.prototype.isBufferGeometry=!0;const Qc=new Ae,_r=new Mi,Wa=new xi,si=new D,oi=new D,ai=new D,Xa=new D,qa=new D,Ya=new D,so=new D,oo=new D,ao=new D,lo=new le,co=new le,ho=new le,Za=new D,uo=new D;class St extends Je{constructor(e=new Ue,t=new $n){super(),this.type="Mesh",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),e.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=e.morphTargetInfluences.slice()),e.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},e.morphTargetDictionary)),this.material=e.material,this.geometry=e.geometry,this}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}raycast(e,t){const n=this.geometry,i=this.material,s=this.matrixWorld;if(i===void 0||(n.boundingSphere===null&&n.computeBoundingSphere(),Wa.copy(n.boundingSphere),Wa.applyMatrix4(s),e.ray.intersectsSphere(Wa)===!1)||(Qc.copy(s).invert(),_r.copy(e.ray).applyMatrix4(Qc),n.boundingBox!==null&&_r.intersectsBox(n.boundingBox)===!1))return;let o;if(n.isBufferGeometry){const a=n.index,c=n.attributes.position,h=n.morphAttributes.position,u=n.morphTargetsRelative,f=n.attributes.uv,d=n.attributes.uv2,p=n.groups,v=n.drawRange;if(a!==null)if(Array.isArray(i))for(let m=0,g=p.length;m<g;m++){const E=p[m],b=i[E.materialIndex],C=Math.max(E.start,v.start),S=Math.min(a.count,Math.min(E.start+E.count,v.start+v.count));for(let A=C,O=S;A<O;A+=3){const V=a.getX(A),U=a.getX(A+1),Q=a.getX(A+2);o=fo(this,b,e,_r,c,h,u,f,d,V,U,Q),o&&(o.faceIndex=Math.floor(A/3),o.face.materialIndex=E.materialIndex,t.push(o))}}else{const m=Math.max(0,v.start),g=Math.min(a.count,v.start+v.count);for(let E=m,b=g;E<b;E+=3){const C=a.getX(E),S=a.getX(E+1),A=a.getX(E+2);o=fo(this,i,e,_r,c,h,u,f,d,C,S,A),o&&(o.faceIndex=Math.floor(E/3),t.push(o))}}else if(c!==void 0)if(Array.isArray(i))for(let m=0,g=p.length;m<g;m++){const E=p[m],b=i[E.materialIndex],C=Math.max(E.start,v.start),S=Math.min(c.count,Math.min(E.start+E.count,v.start+v.count));for(let A=C,O=S;A<O;A+=3){const V=A,U=A+1,Q=A+2;o=fo(this,b,e,_r,c,h,u,f,d,V,U,Q),o&&(o.faceIndex=Math.floor(A/3),o.face.materialIndex=E.materialIndex,t.push(o))}}else{const m=Math.max(0,v.start),g=Math.min(c.count,v.start+v.count);for(let E=m,b=g;E<b;E+=3){const C=E,S=E+1,A=E+2;o=fo(this,i,e,_r,c,h,u,f,d,C,S,A),o&&(o.faceIndex=Math.floor(E/3),t.push(o))}}}else n.isGeometry&&console.error("THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}}St.prototype.isMesh=!0;function jp(r,e,t,n,i,s,o,a){let c;if(e.side===jt?c=n.intersectTriangle(o,s,i,!0,a):c=n.intersectTriangle(i,s,o,e.side!==Zi,a),c===null)return null;uo.copy(a),uo.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(uo);return h<t.near||h>t.far?null:{distance:h,point:uo.clone(),object:r}}function fo(r,e,t,n,i,s,o,a,c,h,u,f){si.fromBufferAttribute(i,h),oi.fromBufferAttribute(i,u),ai.fromBufferAttribute(i,f);const d=r.morphTargetInfluences;if(s&&d){so.set(0,0,0),oo.set(0,0,0),ao.set(0,0,0);for(let v=0,m=s.length;v<m;v++){const g=d[v],E=s[v];g!==0&&(Xa.fromBufferAttribute(E,h),qa.fromBufferAttribute(E,u),Ya.fromBufferAttribute(E,f),o?(so.addScaledVector(Xa,g),oo.addScaledVector(qa,g),ao.addScaledVector(Ya,g)):(so.addScaledVector(Xa.sub(si),g),oo.addScaledVector(qa.sub(oi),g),ao.addScaledVector(Ya.sub(ai),g)))}si.add(so),oi.add(oo),ai.add(ao)}r.isSkinnedMesh&&(r.boneTransform(h,si),r.boneTransform(u,oi),r.boneTransform(f,ai));const p=jp(r,e,t,n,si,oi,ai,Za);if(p){a&&(lo.fromBufferAttribute(a,h),co.fromBufferAttribute(a,u),ho.fromBufferAttribute(a,f),p.uv=xt.getUV(Za,si,oi,ai,lo,co,ho,new le)),c&&(lo.fromBufferAttribute(c,h),co.fromBufferAttribute(c,u),ho.fromBufferAttribute(c,f),p.uv2=xt.getUV(Za,si,oi,ai,lo,co,ho,new le));const v={a:h,b:u,c:f,normal:new D,materialIndex:0};xt.getNormal(si,oi,ai,v.normal),p.face=v}return p}class Yn extends Ue{constructor(e=1,t=1,n=1,i=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:e,height:t,depth:n,widthSegments:i,heightSegments:s,depthSegments:o};const a=this;i=Math.floor(i),s=Math.floor(s),o=Math.floor(o);const c=[],h=[],u=[],f=[];let d=0,p=0;v("z","y","x",-1,-1,n,t,e,o,s,0),v("z","y","x",1,-1,n,t,-e,o,s,1),v("x","z","y",1,1,e,n,t,i,o,2),v("x","z","y",1,-1,e,n,-t,i,o,3),v("x","y","z",1,-1,e,t,n,i,s,4),v("x","y","z",-1,-1,e,t,-n,i,s,5),this.setIndex(c),this.setAttribute("position",new Se(h,3)),this.setAttribute("normal",new Se(u,3)),this.setAttribute("uv",new Se(f,2));function v(m,g,E,b,C,S,A,O,V,U,Q){const Z=S/V,L=A/U,B=S/2,Y=A/2,z=O/2,N=V+1,R=U+1;let P=0,F=0;const X=new D;for(let J=0;J<R;J++){const te=J*L-Y;for(let oe=0;oe<N;oe++){const pe=oe*Z-B;X[m]=pe*b,X[g]=te*C,X[E]=z,h.push(X.x,X.y,X.z),X[m]=0,X[g]=0,X[E]=O>0?1:-1,u.push(X.x,X.y,X.z),f.push(oe/V),f.push(1-J/U),P+=1}}for(let J=0;J<U;J++)for(let te=0;te<V;te++){const oe=d+te+N*J,pe=d+te+N*(J+1),Le=d+(te+1)+N*(J+1),Oe=d+(te+1)+N*J;c.push(oe,pe,Oe),c.push(pe,Le,Oe),F+=6}a.addGroup(p,F,Q),p+=F,d+=P}}static fromJSON(e){return new Yn(e.width,e.height,e.depth,e.widthSegments,e.heightSegments,e.depthSegments)}}function Nr(r){const e={};for(const t in r){e[t]={};for(const n in r[t]){const i=r[t][n];i&&(i.isColor||i.isMatrix3||i.isMatrix4||i.isVector2||i.isVector3||i.isVector4||i.isTexture||i.isQuaternion)?e[t][n]=i.clone():Array.isArray(i)?e[t][n]=i.slice():e[t][n]=i}}return e}function Ft(r){const e={};for(let t=0;t<r.length;t++){const n=Nr(r[t]);for(const i in n)e[i]=n[i]}return e}const bd={clone:Nr,merge:Ft};var Jp=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,Qp=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class ln extends Mt{constructor(e){super(),this.type="ShaderMaterial",this.defines={},this.uniforms={},this.vertexShader=Jp,this.fragmentShader=Qp,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.extensions={derivatives:!1,fragDepth:!1,drawBuffers:!1,shaderTextureLOD:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv2:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,e!==void 0&&(e.attributes!==void 0&&console.error("THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead."),this.setValues(e))}copy(e){return super.copy(e),this.fragmentShader=e.fragmentShader,this.vertexShader=e.vertexShader,this.uniforms=Nr(e.uniforms),this.defines=Object.assign({},e.defines),this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.lights=e.lights,this.clipping=e.clipping,this.extensions=Object.assign({},e.extensions),this.glslVersion=e.glslVersion,this}toJSON(e){const t=super.toJSON(e);t.glslVersion=this.glslVersion,t.uniforms={};for(const i in this.uniforms){const o=this.uniforms[i].value;o&&o.isTexture?t.uniforms[i]={type:"t",value:o.toJSON(e).uuid}:o&&o.isColor?t.uniforms[i]={type:"c",value:o.getHex()}:o&&o.isVector2?t.uniforms[i]={type:"v2",value:o.toArray()}:o&&o.isVector3?t.uniforms[i]={type:"v3",value:o.toArray()}:o&&o.isVector4?t.uniforms[i]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?t.uniforms[i]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?t.uniforms[i]={type:"m4",value:o.toArray()}:t.uniforms[i]={value:o}}Object.keys(this.defines).length>0&&(t.defines=this.defines),t.vertexShader=this.vertexShader,t.fragmentShader=this.fragmentShader;const n={};for(const i in this.extensions)this.extensions[i]===!0&&(n[i]=!0);return Object.keys(n).length>0&&(t.extensions=n),t}}ln.prototype.isShaderMaterial=!0;class Os extends Je{constructor(){super(),this.type="Camera",this.matrixWorldInverse=new Ae,this.projectionMatrix=new Ae,this.projectionMatrixInverse=new Ae}copy(e,t){return super.copy(e,t),this.matrixWorldInverse.copy(e.matrixWorldInverse),this.projectionMatrix.copy(e.projectionMatrix),this.projectionMatrixInverse.copy(e.projectionMatrixInverse),this}getWorldDirection(e){this.updateWorldMatrix(!0,!1);const t=this.matrixWorld.elements;return e.set(-t[8],-t[9],-t[10]).normalize()}updateMatrixWorld(e){super.updateMatrixWorld(e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(e,t){super.updateWorldMatrix(e,t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}Os.prototype.isCamera=!0;class It extends Os{constructor(e=50,t=1,n=.1,i=2e3){super(),this.type="PerspectiveCamera",this.fov=e,this.zoom=1,this.near=n,this.far=i,this.focus=10,this.aspect=t,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.fov=e.fov,this.zoom=e.zoom,this.near=e.near,this.far=e.far,this.focus=e.focus,this.aspect=e.aspect,this.view=e.view===null?null:Object.assign({},e.view),this.filmGauge=e.filmGauge,this.filmOffset=e.filmOffset,this}setFocalLength(e){const t=.5*this.getFilmHeight()/e;this.fov=bs*2*Math.atan(t),this.updateProjectionMatrix()}getFocalLength(){const e=Math.tan(Wi*.5*this.fov);return .5*this.getFilmHeight()/e}getEffectiveFOV(){return bs*2*Math.atan(Math.tan(Wi*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}setViewOffset(e,t,n,i,s,o){this.aspect=e/t,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=this.near;let t=e*Math.tan(Wi*.5*this.fov)/this.zoom,n=2*t,i=this.aspect*n,s=-.5*i;const o=this.view;if(this.view!==null&&this.view.enabled){const c=o.fullWidth,h=o.fullHeight;s+=o.offsetX*i/c,t-=o.offsetY*n/h,i*=o.width/c,n*=o.height/h}const a=this.filmOffset;a!==0&&(s+=e*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+i,t,t-n,e,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.fov=this.fov,t.object.zoom=this.zoom,t.object.near=this.near,t.object.far=this.far,t.object.focus=this.focus,t.object.aspect=this.aspect,this.view!==null&&(t.object.view=Object.assign({},this.view)),t.object.filmGauge=this.filmGauge,t.object.filmOffset=this.filmOffset,t}}It.prototype.isPerspectiveCamera=!0;const yr=90,xr=1;class sa extends Je{constructor(e,t,n){if(super(),this.type="CubeCamera",n.isWebGLCubeRenderTarget!==!0){console.error("THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.");return}this.renderTarget=n;const i=new It(yr,xr,e,t);i.layers=this.layers,i.up.set(0,-1,0),i.lookAt(new D(1,0,0)),this.add(i);const s=new It(yr,xr,e,t);s.layers=this.layers,s.up.set(0,-1,0),s.lookAt(new D(-1,0,0)),this.add(s);const o=new It(yr,xr,e,t);o.layers=this.layers,o.up.set(0,0,1),o.lookAt(new D(0,1,0)),this.add(o);const a=new It(yr,xr,e,t);a.layers=this.layers,a.up.set(0,0,-1),a.lookAt(new D(0,-1,0)),this.add(a);const c=new It(yr,xr,e,t);c.layers=this.layers,c.up.set(0,-1,0),c.lookAt(new D(0,0,1)),this.add(c);const h=new It(yr,xr,e,t);h.layers=this.layers,h.up.set(0,-1,0),h.lookAt(new D(0,0,-1)),this.add(h)}update(e,t){this.parent===null&&this.updateMatrixWorld();const n=this.renderTarget,[i,s,o,a,c,h]=this.children,u=e.getRenderTarget(),f=e.outputEncoding,d=e.toneMapping,p=e.xr.enabled;e.outputEncoding=An,e.toneMapping=bn,e.xr.enabled=!1;const v=n.texture.generateMipmaps;n.texture.generateMipmaps=!1,e.setRenderTarget(n,0),e.render(t,i),e.setRenderTarget(n,1),e.render(t,s),e.setRenderTarget(n,2),e.render(t,o),e.setRenderTarget(n,3),e.render(t,a),e.setRenderTarget(n,4),e.render(t,c),n.texture.generateMipmaps=v,e.setRenderTarget(n,5),e.render(t,h),e.setRenderTarget(u),e.outputEncoding=f,e.toneMapping=d,e.xr.enabled=p,n.texture.needsPMREMUpdate=!0}}class Zr extends At{constructor(e,t,n,i,s,o,a,c,h,u){e=e!==void 0?e:[],t=t!==void 0?t:di,super(e,t,n,i,s,o,a,c,h,u),this.flipY=!1}get images(){return this.image}set images(e){this.image=e}}Zr.prototype.isCubeTexture=!0;class oa extends kt{constructor(e,t={}){super(e,e,t);const n={width:e,height:e,depth:1},i=[n,n,n,n,n,n];this.texture=new Zr(i,t.mapping,t.wrapS,t.wrapT,t.magFilter,t.minFilter,t.format,t.type,t.anisotropy,t.encoding),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=t.generateMipmaps!==void 0?t.generateMipmaps:!1,this.texture.minFilter=t.minFilter!==void 0?t.minFilter:_t}fromEquirectangularTexture(e,t){this.texture.type=t.type,this.texture.encoding=t.encoding,this.texture.generateMipmaps=t.generateMipmaps,this.texture.minFilter=t.minFilter,this.texture.magFilter=t.magFilter;const n={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},i=new Yn(5,5,5),s=new ln({name:"CubemapFromEquirect",uniforms:Nr(n.uniforms),vertexShader:n.vertexShader,fragmentShader:n.fragmentShader,side:jt,blending:Xn});s.uniforms.tEquirect.value=t;const o=new St(i,s),a=t.minFilter;return t.minFilter===ir&&(t.minFilter=_t),new sa(1,10,this).update(e,o),t.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(e,t,n,i){const s=e.getRenderTarget();for(let o=0;o<6;o++)e.setRenderTarget(this,o),e.clear(t,n,i);e.setRenderTarget(s)}}oa.prototype.isWebGLCubeRenderTarget=!0;const Ka=new D,em=new D,tm=new Lt;class wn{constructor(e=new D(1,0,0),t=0){this.normal=e,this.constant=t}set(e,t){return this.normal.copy(e),this.constant=t,this}setComponents(e,t,n,i){return this.normal.set(e,t,n),this.constant=i,this}setFromNormalAndCoplanarPoint(e,t){return this.normal.copy(e),this.constant=-t.dot(this.normal),this}setFromCoplanarPoints(e,t,n){const i=Ka.subVectors(n,t).cross(em.subVectors(e,t)).normalize();return this.setFromNormalAndCoplanarPoint(i,e),this}copy(e){return this.normal.copy(e.normal),this.constant=e.constant,this}normalize(){const e=1/this.normal.length();return this.normal.multiplyScalar(e),this.constant*=e,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(e){return this.normal.dot(e)+this.constant}distanceToSphere(e){return this.distanceToPoint(e.center)-e.radius}projectPoint(e,t){return t.copy(this.normal).multiplyScalar(-this.distanceToPoint(e)).add(e)}intersectLine(e,t){const n=e.delta(Ka),i=this.normal.dot(n);if(i===0)return this.distanceToPoint(e.start)===0?t.copy(e.start):null;const s=-(e.start.dot(this.normal)+this.constant)/i;return s<0||s>1?null:t.copy(n).multiplyScalar(s).add(e.start)}intersectsLine(e){const t=this.distanceToPoint(e.start),n=this.distanceToPoint(e.end);return t<0&&n>0||n<0&&t>0}intersectsBox(e){return e.intersectsPlane(this)}intersectsSphere(e){return e.intersectsPlane(this)}coplanarPoint(e){return e.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(e,t){const n=t||tm.getNormalMatrix(e),i=this.coplanarPoint(Ka).applyMatrix4(e),s=this.normal.applyMatrix3(n).normalize();return this.constant=-i.dot(s),this}translate(e){return this.constant-=e.dot(this.normal),this}equals(e){return e.normal.equals(this.normal)&&e.constant===this.constant}clone(){return new this.constructor().copy(this)}}wn.prototype.isPlane=!0;const Mr=new xi,po=new D;class Fs{constructor(e=new wn,t=new wn,n=new wn,i=new wn,s=new wn,o=new wn){this.planes=[e,t,n,i,s,o]}set(e,t,n,i,s,o){const a=this.planes;return a[0].copy(e),a[1].copy(t),a[2].copy(n),a[3].copy(i),a[4].copy(s),a[5].copy(o),this}copy(e){const t=this.planes;for(let n=0;n<6;n++)t[n].copy(e.planes[n]);return this}setFromProjectionMatrix(e){const t=this.planes,n=e.elements,i=n[0],s=n[1],o=n[2],a=n[3],c=n[4],h=n[5],u=n[6],f=n[7],d=n[8],p=n[9],v=n[10],m=n[11],g=n[12],E=n[13],b=n[14],C=n[15];return t[0].setComponents(a-i,f-c,m-d,C-g).normalize(),t[1].setComponents(a+i,f+c,m+d,C+g).normalize(),t[2].setComponents(a+s,f+h,m+p,C+E).normalize(),t[3].setComponents(a-s,f-h,m-p,C-E).normalize(),t[4].setComponents(a-o,f-u,m-v,C-b).normalize(),t[5].setComponents(a+o,f+u,m+v,C+b).normalize(),this}intersectsObject(e){const t=e.geometry;return t.boundingSphere===null&&t.computeBoundingSphere(),Mr.copy(t.boundingSphere).applyMatrix4(e.matrixWorld),this.intersectsSphere(Mr)}intersectsSprite(e){return Mr.center.set(0,0,0),Mr.radius=.7071067811865476,Mr.applyMatrix4(e.matrixWorld),this.intersectsSphere(Mr)}intersectsSphere(e){const t=this.planes,n=e.center,i=-e.radius;for(let s=0;s<6;s++)if(t[s].distanceToPoint(n)<i)return!1;return!0}intersectsBox(e){const t=this.planes;for(let n=0;n<6;n++){const i=t[n];if(po.x=i.normal.x>0?e.max.x:e.min.x,po.y=i.normal.y>0?e.max.y:e.min.y,po.z=i.normal.z>0?e.max.z:e.min.z,i.distanceToPoint(po)<0)return!1}return!0}containsPoint(e){const t=this.planes;for(let n=0;n<6;n++)if(t[n].distanceToPoint(e)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function Td(){let r=null,e=!1,t=null,n=null;function i(s,o){t(s,o),n=r.requestAnimationFrame(i)}return{start:function(){e!==!0&&t!==null&&(n=r.requestAnimationFrame(i),e=!0)},stop:function(){r.cancelAnimationFrame(n),e=!1},setAnimationLoop:function(s){t=s},setContext:function(s){r=s}}}function nm(r,e){const t=e.isWebGL2,n=new WeakMap;function i(h,u){const f=h.array,d=h.usage,p=r.createBuffer();r.bindBuffer(u,p),r.bufferData(u,f,d),h.onUploadCallback();let v;if(f instanceof Float32Array)v=r.FLOAT;else if(f instanceof Uint16Array)if(h.isFloat16BufferAttribute)if(t)v=r.HALF_FLOAT;else throw new Error("THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.");else v=r.UNSIGNED_SHORT;else if(f instanceof Int16Array)v=r.SHORT;else if(f instanceof Uint32Array)v=r.UNSIGNED_INT;else if(f instanceof Int32Array)v=r.INT;else if(f instanceof Int8Array)v=r.BYTE;else if(f instanceof Uint8Array)v=r.UNSIGNED_BYTE;else if(f instanceof Uint8ClampedArray)v=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+f);return{buffer:p,type:v,bytesPerElement:f.BYTES_PER_ELEMENT,version:h.version}}function s(h,u,f){const d=u.array,p=u.updateRange;r.bindBuffer(f,h),p.count===-1?r.bufferSubData(f,0,d):(t?r.bufferSubData(f,p.offset*d.BYTES_PER_ELEMENT,d,p.offset,p.count):r.bufferSubData(f,p.offset*d.BYTES_PER_ELEMENT,d.subarray(p.offset,p.offset+p.count)),p.count=-1)}function o(h){return h.isInterleavedBufferAttribute&&(h=h.data),n.get(h)}function a(h){h.isInterleavedBufferAttribute&&(h=h.data);const u=n.get(h);u&&(r.deleteBuffer(u.buffer),n.delete(h))}function c(h,u){if(h.isGLBufferAttribute){const d=n.get(h);(!d||d.version<h.version)&&n.set(h,{buffer:h.buffer,type:h.type,bytesPerElement:h.elementSize,version:h.version});return}h.isInterleavedBufferAttribute&&(h=h.data);const f=n.get(h);f===void 0?n.set(h,i(h,u)):f.version<h.version&&(s(f.buffer,h,u),f.version=h.version)}return{get:o,remove:a,update:c}}class $i extends Ue{constructor(e=1,t=1,n=1,i=1){super(),this.type="PlaneGeometry",this.parameters={width:e,height:t,widthSegments:n,heightSegments:i};const s=e/2,o=t/2,a=Math.floor(n),c=Math.floor(i),h=a+1,u=c+1,f=e/a,d=t/c,p=[],v=[],m=[],g=[];for(let E=0;E<u;E++){const b=E*d-o;for(let C=0;C<h;C++){const S=C*f-s;v.push(S,-b,0),m.push(0,0,1),g.push(C/a),g.push(1-E/c)}}for(let E=0;E<c;E++)for(let b=0;b<a;b++){const C=b+h*E,S=b+h*(E+1),A=b+1+h*(E+1),O=b+1+h*E;p.push(C,S,O),p.push(S,A,O)}this.setIndex(p),this.setAttribute("position",new Se(v,3)),this.setAttribute("normal",new Se(m,3)),this.setAttribute("uv",new Se(g,2))}static fromJSON(e){return new $i(e.width,e.height,e.widthSegments,e.heightSegments)}}var im=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vUv ).g;
#endif`,rm=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,sm=`#ifdef USE_ALPHATEST
	if ( diffuseColor.a < alphaTest ) discard;
#endif`,om=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,am=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,lm=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,cm="vec3 transformed = vec3( position );",hm=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,um=`vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 f0, const in float f90, const in float roughness ) {
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
	float D = D_GGX( alpha, dotNH );
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif`,dm=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vUv );
		vec2 dSTdy = dFdy( vUv );
		float Hll = bumpScale * texture2D( bumpMap, vUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );
		vec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,fm=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#pragma unroll_loop_start
	for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
		plane = clippingPlanes[ i ];
		if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
	}
	#pragma unroll_loop_end
	#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
		bool clipped = true;
		#pragma unroll_loop_start
		for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
		}
		#pragma unroll_loop_end
		if ( clipped ) discard;
	#endif
#endif`,pm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,mm=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,gm=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,vm=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,_m=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,ym=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	varying vec3 vColor;
#endif`,xm=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif`,Mm=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
struct GeometricContext {
	vec3 position;
	vec3 normal;
	vec3 viewDir;
#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal;
#endif
};
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
float linearToRelativeLuminance( const in vec3 color ) {
	vec3 weights = vec3( 0.2126, 0.7152, 0.0722 );
	return dot( weights, color.rgb );
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}`,Em=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		vec2 uv = getUV( direction, face ) * ( faceSize - 1.0 ) + 0.5;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define r0 1.0
	#define v0 0.339
	#define m0 - 2.0
	#define r1 0.8
	#define v1 0.276
	#define m1 - 1.0
	#define r4 0.4
	#define v4 0.046
	#define m4 2.0
	#define r5 0.305
	#define v5 0.016
	#define m5 3.0
	#define r6 0.21
	#define v6 0.0038
	#define m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= r1 ) {
			mip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;
		} else if ( roughness >= r4 ) {
			mip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;
		} else if ( roughness >= r5 ) {
			mip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;
		} else if ( roughness >= r6 ) {
			mip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,wm=`vec3 transformedNormal = objectNormal;
#ifdef USE_INSTANCING
	mat3 m = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );
	transformedNormal = m * transformedNormal;
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	vec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,bm=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,Tm=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );
#endif`,Sm=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,Am=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,Rm="gl_FragColor = linearToOutputTexel( gl_FragColor );",Cm=`vec4 LinearToLinear( in vec4 value ) {
	return value;
}
vec4 LinearTosRGB( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,Lm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,Pm=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,Im=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,Dm=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,Nm=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,Om=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,Fm=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,Um=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,Bm=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,Hm=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		return ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );
	#endif
}`,zm=`#ifdef USE_LIGHTMAP
	vec4 lightMapTexel = texture2D( lightMap, vUv2 );
	vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
	reflectedLight.indirectDiffuse += lightMapIrradiance;
#endif`,km=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,Gm=`vec3 diffuse = vec3( 1.0 );
GeometricContext geometry;
geometry.position = mvPosition.xyz;
geometry.normal = normalize( transformedNormal );
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );
GeometricContext backGeometry;
backGeometry.position = geometry.position;
backGeometry.normal = -geometry.normal;
backGeometry.viewDir = geometry.viewDir;
vLightFront = vec3( 0.0 );
vIndirectFront = vec3( 0.0 );
#ifdef DOUBLE_SIDED
	vLightBack = vec3( 0.0 );
	vIndirectBack = vec3( 0.0 );
#endif
IncidentLight directLight;
float dotNL;
vec3 directLightColor_Diffuse;
vIndirectFront += getAmbientLightIrradiance( ambientLightColor );
vIndirectFront += getLightProbeIrradiance( lightProbe, geometry.normal );
#ifdef DOUBLE_SIDED
	vIndirectBack += getAmbientLightIrradiance( ambientLightColor );
	vIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry.normal );
#endif
#if NUM_POINT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		getPointLightInfo( pointLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_SPOT_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		getSpotLightInfo( spotLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_DIR_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		getDirectionalLightInfo( directionalLights[ i ], geometry, directLight );
		dotNL = dot( geometry.normal, directLight.direction );
		directLightColor_Diffuse = directLight.color;
		vLightFront += saturate( dotNL ) * directLightColor_Diffuse;
		#ifdef DOUBLE_SIDED
			vLightBack += saturate( - dotNL ) * directLightColor_Diffuse;
		#endif
	}
	#pragma unroll_loop_end
#endif
#if NUM_HEMI_LIGHTS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
		vIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		#ifdef DOUBLE_SIDED
			vIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry.normal );
		#endif
	}
	#pragma unroll_loop_end
#endif`,Vm=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
uniform vec3 lightProbe[ 9 ];
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	#if defined ( PHYSICALLY_CORRECT_LIGHTS )
		float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
		if ( cutoffDistance > 0.0 ) {
			distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
		}
		return distanceFalloff;
	#else
		if ( cutoffDistance > 0.0 && decayExponent > 0.0 ) {
			return pow( saturate( - lightDistance / cutoffDistance + 1.0 ), decayExponent );
		}
		return 1.0;
	#endif
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometry.position;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometry.position;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,Wm=`#if defined( USE_ENVMAP )
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#if defined( ENVMAP_TYPE_CUBE_UV )
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
#endif`,Xm=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,qm=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon
#define Material_LightProbeLOD( material )	(0)`,Ym=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,Zm=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong
#define Material_LightProbeLOD( material )	(0)`,Km=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	#ifdef SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULARINTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vUv ).a;
		#endif
		#ifdef USE_SPECULARCOLORMAP
			specularColorFactor *= texture2D( specularColorMap, vUv ).rgb;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( ior - 1.0 ) / ( ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEENCOLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEENROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vUv ).a;
	#endif
#endif`,$m=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
};
vec3 clearcoatSpecular = vec3( 0.0 );
vec3 sheenSpecular = vec3( 0.0 );
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	vec3 FssEss = specularColor * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometry.normal;
		vec3 viewDir = geometry.viewDir;
		vec3 position = geometry.position;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(		0, 1,		0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometry.normal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecular += ccIrradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.clearcoatNormal, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * BRDF_Sheen( directLight.direction, geometry.viewDir, geometry.normal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometry.viewDir, geometry.normal, material.specularColor, material.specularF90, material.roughness );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecular += clearcoatRadiance * EnvironmentBRDF( geometry.clearcoatNormal, geometry.viewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecular += irradiance * material.sheenColor * IBLSheenBRDF( geometry.normal, geometry.viewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	computeMultiscattering( geometry.normal, geometry.viewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	vec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,jm=`
GeometricContext geometry;
geometry.position = - vViewPosition;
geometry.normal = normal;
geometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
#ifdef USE_CLEARCOAT
	geometry.clearcoatNormal = clearcoatNormal;
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, geometry, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	irradiance += getLightProbeIrradiance( lightProbe, geometry.normal );
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry.normal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,Jm=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometry.normal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	radiance += getIBLRadiance( geometry.viewDir, geometry.normal, material.roughness );
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,Qm=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );
#endif`,eg=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	gl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,tg=`#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,ng=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		varying float vFragDepth;
		varying float vIsPerspective;
	#else
		uniform float logDepthBufFC;
	#endif
#endif`,ig=`#ifdef USE_LOGDEPTHBUF
	#ifdef USE_LOGDEPTHBUF_EXT
		vFragDepth = 1.0 + gl_Position.w;
		vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
	#else
		if ( isPerspectiveMatrix( projectionMatrix ) ) {
			gl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;
			gl_Position.z *= gl_Position.w;
		}
	#endif
#endif`,rg=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,sg=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,og=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,ag=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	uniform mat3 uvTransform;
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,lg=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vUv );
	metalnessFactor *= texelMetalness.b;
#endif`,cg=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,hg=`#if defined( USE_MORPHCOLORS ) && defined( MORPHTARGETS_TEXTURE )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,ug=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		objectNormal += morphNormal0 * morphTargetInfluences[ 0 ];
		objectNormal += morphNormal1 * morphTargetInfluences[ 1 ];
		objectNormal += morphNormal2 * morphTargetInfluences[ 2 ];
		objectNormal += morphNormal3 * morphTargetInfluences[ 3 ];
	#endif
#endif`,dg=`#ifdef USE_MORPHTARGETS
	uniform float morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
		uniform sampler2DArray morphTargetsTexture;
		uniform ivec2 morphTargetsTextureSize;
		vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
			int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
			int y = texelIndex / morphTargetsTextureSize.x;
			int x = texelIndex - y * morphTargetsTextureSize.x;
			ivec3 morphUV = ivec3( x, y, morphTargetIndex );
			return texelFetch( morphTargetsTexture, morphUV, 0 );
		}
	#else
		#ifndef USE_MORPHNORMALS
			uniform float morphTargetInfluences[ 8 ];
		#else
			uniform float morphTargetInfluences[ 4 ];
		#endif
	#endif
#endif`,fg=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	#ifdef MORPHTARGETS_TEXTURE
		for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
			if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
		}
	#else
		transformed += morphTarget0 * morphTargetInfluences[ 0 ];
		transformed += morphTarget1 * morphTargetInfluences[ 1 ];
		transformed += morphTarget2 * morphTargetInfluences[ 2 ];
		transformed += morphTarget3 * morphTargetInfluences[ 3 ];
		#ifndef USE_MORPHNORMALS
			transformed += morphTarget4 * morphTargetInfluences[ 4 ];
			transformed += morphTarget5 * morphTargetInfluences[ 5 ];
			transformed += morphTarget6 * morphTargetInfluences[ 6 ];
			transformed += morphTarget7 * morphTargetInfluences[ 7 ];
		#endif
	#endif
#endif`,pg=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );
	vec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	#ifdef USE_TANGENT
		vec3 tangent = normalize( vTangent );
		vec3 bitangent = normalize( vBitangent );
		#ifdef DOUBLE_SIDED
			tangent = tangent * faceDirection;
			bitangent = bitangent * faceDirection;
		#endif
		#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )
			mat3 vTBN = mat3( tangent, bitangent, normal );
		#endif
	#endif
#endif
vec3 geometryNormal = normal;`,mg=`#ifdef OBJECTSPACE_NORMALMAP
	normal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( TANGENTSPACE_NORMALMAP )
	vec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	#ifdef USE_TANGENT
		normal = normalize( vTBN * mapN );
	#else
		normal = perturbNormal2Arb( - vViewPosition, normal, mapN, faceDirection );
	#endif
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,gg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,vg=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,_g=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,yg=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef OBJECTSPACE_NORMALMAP
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )
	vec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {
		vec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );
		vec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );
		vec2 st0 = dFdx( vUv.st );
		vec2 st1 = dFdy( vUv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );
		return normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );
	}
#endif`,xg=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = geometryNormal;
#endif`,Mg=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	#ifdef USE_TANGENT
		clearcoatNormal = normalize( vTBN * clearcoatMapN );
	#else
		clearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );
	#endif
#endif`,Eg=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif`,wg=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= transmissionAlpha + 0.1;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,bg=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;
const vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );
const vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );
const float ShiftRight8 = 1. / 256.;
vec4 packDepthToRGBA( const in float v ) {
	vec4 r = vec4( fract( v * PackFactors ), v );
	r.yzw -= r.xyz * ShiftRight8;	return r * PackUpscale;
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors );
}
vec4 pack2HalfToRGBA( vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {
	return linearClipZ * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * invClipZ - far );
}`,Tg=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,Sg=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,Ag=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,Rg=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,Cg=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vUv );
	roughnessFactor *= texelRoughness.g;
#endif`,Lg=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,Pg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );
		bool inFrustum = all( inFrustumVec );
		bvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );
		bool frustumTest = all( frustumTestVec );
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), 
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), 
							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
							f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), 
							texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
							f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return shadow;
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
		vec3 lightToPosition = shadowCoord.xyz;
		float dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );		dp += shadowBias;
		vec3 bd3D = normalize( lightToPosition );
		#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
			vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
			return (
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
				texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
			) * ( 1.0 / 9.0 );
		#else
			return texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
		#endif
	}
#endif`,Ig=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];
		varying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,Dg=`#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0
		vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		vec4 shadowWorldPosition;
	#endif
	#if NUM_DIR_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
		vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );
		vSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
		vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
	#endif
#endif`,Ng=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,Og=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,Fg=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	#ifdef BONE_TEXTURE
		uniform highp sampler2D boneTexture;
		uniform int boneTextureSize;
		mat4 getBoneMatrix( const in float i ) {
			float j = i * 4.0;
			float x = mod( j, float( boneTextureSize ) );
			float y = floor( j / float( boneTextureSize ) );
			float dx = 1.0 / float( boneTextureSize );
			float dy = 1.0 / float( boneTextureSize );
			y = dy * ( y + 0.5 );
			vec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );
			vec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );
			vec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );
			vec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );
			mat4 bone = mat4( v1, v2, v3, v4 );
			return bone;
		}
	#else
		uniform mat4 boneMatrices[ MAX_BONES ];
		mat4 getBoneMatrix( const in float i ) {
			mat4 bone = boneMatrices[ int(i) ];
			return bone;
		}
	#endif
#endif`,Ug=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,Bg=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,Hg=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,zg=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,kg=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,Gg=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return toneMappingExposure * color;
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 OptimizedCineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(	1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,	1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,	1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,Vg=`#ifdef USE_TRANSMISSION
	float transmissionAlpha = 1.0;
	float transmissionFactor = transmission;
	float thicknessFactor = thickness;
	#ifdef USE_TRANSMISSIONMAP
		transmissionFactor *= texture2D( transmissionMap, vUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		thicknessFactor *= texture2D( thicknessMap, vUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmission = getIBLVolumeRefraction(
		n, v, roughnessFactor, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,
		attenuationColor, attenuationDistance );
	totalDiffuse = mix( totalDiffuse, transmission.rgb, transmissionFactor );
	transmissionAlpha = mix( transmissionAlpha, transmission.a, transmissionFactor );
#endif`,Wg=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float framebufferLod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		#ifdef texture2DLodEXT
			return texture2DLodEXT( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#else
			return texture2D( transmissionSamplerMap, fragCoord.xy, framebufferLod );
		#endif
	}
	vec3 applyVolumeAttenuation( const in vec3 radiance, const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( attenuationDistance == 0.0 ) {
			return radiance;
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance * radiance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
		vec3 refractedRayExit = position + transmissionRay;
		vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
		vec2 refractionCoords = ndcPos.xy / ndcPos.w;
		refractionCoords += 1.0;
		refractionCoords /= 2.0;
		vec4 transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
		vec3 attenuatedColor = applyVolumeAttenuation( transmittedLight.rgb, length( transmissionRay ), attenuationColor, attenuationDistance );
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		return vec4( ( 1.0 - F ) * attenuatedColor * diffuseColor, transmittedLight.a );
	}
#endif`,Xg=`#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )
	varying vec2 vUv;
#endif`,qg=`#ifdef USE_UV
	#ifdef UVS_VERTEX_ONLY
		vec2 vUv;
	#else
		varying vec2 vUv;
	#endif
	uniform mat3 uvTransform;
#endif`,Yg=`#ifdef USE_UV
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
#endif`,Zg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	varying vec2 vUv2;
#endif`,Kg=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	attribute vec2 uv2;
	varying vec2 vUv2;
	uniform mat3 uv2Transform;
#endif`,$g=`#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )
	vUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;
#endif`,jg=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const Jg=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,Qg=`uniform sampler2D t2D;
varying vec2 vUv;
void main() {
	gl_FragColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		gl_FragColor = vec4( mix( pow( gl_FragColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), gl_FragColor.rgb * 0.0773993808, vec3( lessThanEqual( gl_FragColor.rgb, vec3( 0.04045 ) ) ) ), gl_FragColor.w );
	#endif
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,ev=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,tv=`#include <envmap_common_pars_fragment>
uniform float opacity;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	vec3 vReflect = vWorldDirection;
	#include <envmap_fragment>
	gl_FragColor = envColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,nv=`#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,iv=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#endif
}`,rv=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <skinbase_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,sv=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( 1.0 );
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,ov=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,av=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
}`,lv=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,cv=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,hv=`#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,uv=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vUv2 );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,dv=`#define LAMBERT
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <envmap_pars_vertex>
#include <bsdfs>
#include <lights_pars_begin>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <lights_lambert_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,fv=`uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
varying vec3 vLightFront;
varying vec3 vIndirectFront;
#ifdef DOUBLE_SIDED
	varying vec3 vLightBack;
	varying vec3 vIndirectBack;
#endif
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <fog_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <emissivemap_fragment>
	#ifdef DOUBLE_SIDED
		reflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;
	#else
		reflectedLight.indirectDiffuse += vIndirectFront;
	#endif
	#include <lightmap_fragment>
	reflectedLight.indirectDiffuse *= BRDF_Lambert( diffuseColor.rgb );
	#ifdef DOUBLE_SIDED
		reflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;
	#else
		reflectedLight.directDiffuse = vLightFront;
	#endif
	reflectedLight.directDiffuse *= BRDF_Lambert( diffuseColor.rgb ) * getShadowMask();
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,pv=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,mv=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,gv=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	vViewPosition = - mvPosition.xyz;
#endif
}`,vv=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), opacity );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,_v=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,yv=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <cube_uv_reflection_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,xv=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,Mv=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULARINTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
	#ifdef USE_SPECULARCOLORMAP
		uniform sampler2D specularColorMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEENCOLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEENROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <bsdfs>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecular;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + clearcoatSpecular * material.clearcoat;
	#endif
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,Ev=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <uv_pars_vertex>
#include <uv2_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <uv2_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,wv=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <uv2_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec4 diffuseColor = vec4( diffuse, opacity );
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,bv=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,Tv=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,Sv=`#include <common>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,Av=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Rv=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,Cv=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <output_fragment>
	#include <tonemapping_fragment>
	#include <encodings_fragment>
	#include <fog_fragment>
}`,Ke={alphamap_fragment:im,alphamap_pars_fragment:rm,alphatest_fragment:sm,alphatest_pars_fragment:om,aomap_fragment:am,aomap_pars_fragment:lm,begin_vertex:cm,beginnormal_vertex:hm,bsdfs:um,bumpmap_pars_fragment:dm,clipping_planes_fragment:fm,clipping_planes_pars_fragment:pm,clipping_planes_pars_vertex:mm,clipping_planes_vertex:gm,color_fragment:vm,color_pars_fragment:_m,color_pars_vertex:ym,color_vertex:xm,common:Mm,cube_uv_reflection_fragment:Em,defaultnormal_vertex:wm,displacementmap_pars_vertex:bm,displacementmap_vertex:Tm,emissivemap_fragment:Sm,emissivemap_pars_fragment:Am,encodings_fragment:Rm,encodings_pars_fragment:Cm,envmap_fragment:Lm,envmap_common_pars_fragment:Pm,envmap_pars_fragment:Im,envmap_pars_vertex:Dm,envmap_physical_pars_fragment:Wm,envmap_vertex:Nm,fog_vertex:Om,fog_pars_vertex:Fm,fog_fragment:Um,fog_pars_fragment:Bm,gradientmap_pars_fragment:Hm,lightmap_fragment:zm,lightmap_pars_fragment:km,lights_lambert_vertex:Gm,lights_pars_begin:Vm,lights_toon_fragment:Xm,lights_toon_pars_fragment:qm,lights_phong_fragment:Ym,lights_phong_pars_fragment:Zm,lights_physical_fragment:Km,lights_physical_pars_fragment:$m,lights_fragment_begin:jm,lights_fragment_maps:Jm,lights_fragment_end:Qm,logdepthbuf_fragment:eg,logdepthbuf_pars_fragment:tg,logdepthbuf_pars_vertex:ng,logdepthbuf_vertex:ig,map_fragment:rg,map_pars_fragment:sg,map_particle_fragment:og,map_particle_pars_fragment:ag,metalnessmap_fragment:lg,metalnessmap_pars_fragment:cg,morphcolor_vertex:hg,morphnormal_vertex:ug,morphtarget_pars_vertex:dg,morphtarget_vertex:fg,normal_fragment_begin:pg,normal_fragment_maps:mg,normal_pars_fragment:gg,normal_pars_vertex:vg,normal_vertex:_g,normalmap_pars_fragment:yg,clearcoat_normal_fragment_begin:xg,clearcoat_normal_fragment_maps:Mg,clearcoat_pars_fragment:Eg,output_fragment:wg,packing:bg,premultiplied_alpha_fragment:Tg,project_vertex:Sg,dithering_fragment:Ag,dithering_pars_fragment:Rg,roughnessmap_fragment:Cg,roughnessmap_pars_fragment:Lg,shadowmap_pars_fragment:Pg,shadowmap_pars_vertex:Ig,shadowmap_vertex:Dg,shadowmask_pars_fragment:Ng,skinbase_vertex:Og,skinning_pars_vertex:Fg,skinning_vertex:Ug,skinnormal_vertex:Bg,specularmap_fragment:Hg,specularmap_pars_fragment:zg,tonemapping_fragment:kg,tonemapping_pars_fragment:Gg,transmission_fragment:Vg,transmission_pars_fragment:Wg,uv_pars_fragment:Xg,uv_pars_vertex:qg,uv_vertex:Yg,uv2_pars_fragment:Zg,uv2_pars_vertex:Kg,uv2_vertex:$g,worldpos_vertex:jg,background_vert:Jg,background_frag:Qg,cube_vert:ev,cube_frag:tv,depth_vert:nv,depth_frag:iv,distanceRGBA_vert:rv,distanceRGBA_frag:sv,equirect_vert:ov,equirect_frag:av,linedashed_vert:lv,linedashed_frag:cv,meshbasic_vert:hv,meshbasic_frag:uv,meshlambert_vert:dv,meshlambert_frag:fv,meshmatcap_vert:pv,meshmatcap_frag:mv,meshnormal_vert:gv,meshnormal_frag:vv,meshphong_vert:_v,meshphong_frag:yv,meshphysical_vert:xv,meshphysical_frag:Mv,meshtoon_vert:Ev,meshtoon_frag:wv,points_vert:bv,points_frag:Tv,shadow_vert:Sv,shadow_frag:Av,sprite_vert:Rv,sprite_frag:Cv},_e={common:{diffuse:{value:new Me(16777215)},opacity:{value:1},map:{value:null},uvTransform:{value:new Lt},uv2Transform:{value:new Lt},alphaMap:{value:null},alphaTest:{value:0}},specularmap:{specularMap:{value:null}},envmap:{envMap:{value:null},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1}},emissivemap:{emissiveMap:{value:null}},bumpmap:{bumpMap:{value:null},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalScale:{value:new le(1,1)}},displacementmap:{displacementMap:{value:null},displacementScale:{value:1},displacementBias:{value:0}},roughnessmap:{roughnessMap:{value:null}},metalnessmap:{metalnessMap:{value:null}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new Me(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotShadowMap:{value:[]},spotShadowMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new Me(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Lt}},sprite:{diffuse:{value:new Me(16777215)},opacity:{value:1},center:{value:new le(.5,.5)},rotation:{value:0},map:{value:null},alphaMap:{value:null},alphaTest:{value:0},uvTransform:{value:new Lt}}},vn={basic:{uniforms:Ft([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.fog]),vertexShader:Ke.meshbasic_vert,fragmentShader:Ke.meshbasic_frag},lambert:{uniforms:Ft([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.fog,_e.lights,{emissive:{value:new Me(0)}}]),vertexShader:Ke.meshlambert_vert,fragmentShader:Ke.meshlambert_frag},phong:{uniforms:Ft([_e.common,_e.specularmap,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,_e.lights,{emissive:{value:new Me(0)},specular:{value:new Me(1118481)},shininess:{value:30}}]),vertexShader:Ke.meshphong_vert,fragmentShader:Ke.meshphong_frag},standard:{uniforms:Ft([_e.common,_e.envmap,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.roughnessmap,_e.metalnessmap,_e.fog,_e.lights,{emissive:{value:new Me(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Ke.meshphysical_vert,fragmentShader:Ke.meshphysical_frag},toon:{uniforms:Ft([_e.common,_e.aomap,_e.lightmap,_e.emissivemap,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.gradientmap,_e.fog,_e.lights,{emissive:{value:new Me(0)}}]),vertexShader:Ke.meshtoon_vert,fragmentShader:Ke.meshtoon_frag},matcap:{uniforms:Ft([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,_e.fog,{matcap:{value:null}}]),vertexShader:Ke.meshmatcap_vert,fragmentShader:Ke.meshmatcap_frag},points:{uniforms:Ft([_e.points,_e.fog]),vertexShader:Ke.points_vert,fragmentShader:Ke.points_frag},dashed:{uniforms:Ft([_e.common,_e.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Ke.linedashed_vert,fragmentShader:Ke.linedashed_frag},depth:{uniforms:Ft([_e.common,_e.displacementmap]),vertexShader:Ke.depth_vert,fragmentShader:Ke.depth_frag},normal:{uniforms:Ft([_e.common,_e.bumpmap,_e.normalmap,_e.displacementmap,{opacity:{value:1}}]),vertexShader:Ke.meshnormal_vert,fragmentShader:Ke.meshnormal_frag},sprite:{uniforms:Ft([_e.sprite,_e.fog]),vertexShader:Ke.sprite_vert,fragmentShader:Ke.sprite_frag},background:{uniforms:{uvTransform:{value:new Lt},t2D:{value:null}},vertexShader:Ke.background_vert,fragmentShader:Ke.background_frag},cube:{uniforms:Ft([_e.envmap,{opacity:{value:1}}]),vertexShader:Ke.cube_vert,fragmentShader:Ke.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Ke.equirect_vert,fragmentShader:Ke.equirect_frag},distanceRGBA:{uniforms:Ft([_e.common,_e.displacementmap,{referencePosition:{value:new D},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Ke.distanceRGBA_vert,fragmentShader:Ke.distanceRGBA_frag},shadow:{uniforms:Ft([_e.lights,_e.fog,{color:{value:new Me(0)},opacity:{value:1}}]),vertexShader:Ke.shadow_vert,fragmentShader:Ke.shadow_frag}};vn.physical={uniforms:Ft([vn.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatNormalScale:{value:new le(1,1)},clearcoatNormalMap:{value:null},sheen:{value:0},sheenColor:{value:new Me(0)},sheenColorMap:{value:null},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},transmission:{value:0},transmissionMap:{value:null},transmissionSamplerSize:{value:new le},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},attenuationDistance:{value:0},attenuationColor:{value:new Me(0)},specularIntensity:{value:1},specularIntensityMap:{value:null},specularColor:{value:new Me(1,1,1)},specularColorMap:{value:null}}]),vertexShader:Ke.meshphysical_vert,fragmentShader:Ke.meshphysical_frag};function Lv(r,e,t,n,i,s){const o=new Me(0);let a=i===!0?0:1,c,h,u=null,f=0,d=null;function p(m,g){let E=!1,b=g.isScene===!0?g.background:null;b&&b.isTexture&&(b=e.get(b));const C=r.xr,S=C.getSession&&C.getSession();S&&S.environmentBlendMode==="additive"&&(b=null),b===null?v(o,a):b&&b.isColor&&(v(b,1),E=!0),(r.autoClear||E)&&r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil),b&&(b.isCubeTexture||b.mapping===qr)?(h===void 0&&(h=new St(new Yn(1,1,1),new ln({name:"BackgroundCubeMaterial",uniforms:Nr(vn.cube.uniforms),vertexShader:vn.cube.vertexShader,fragmentShader:vn.cube.fragmentShader,side:jt,depthTest:!1,depthWrite:!1,fog:!1})),h.geometry.deleteAttribute("normal"),h.geometry.deleteAttribute("uv"),h.onBeforeRender=function(A,O,V){this.matrixWorld.copyPosition(V.matrixWorld)},Object.defineProperty(h.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(h)),h.material.uniforms.envMap.value=b,h.material.uniforms.flipEnvMap.value=b.isCubeTexture&&b.isRenderTargetTexture===!1?-1:1,(u!==b||f!==b.version||d!==r.toneMapping)&&(h.material.needsUpdate=!0,u=b,f=b.version,d=r.toneMapping),m.unshift(h,h.geometry,h.material,0,0,null)):b&&b.isTexture&&(c===void 0&&(c=new St(new $i(2,2),new ln({name:"BackgroundMaterial",uniforms:Nr(vn.background.uniforms),vertexShader:vn.background.vertexShader,fragmentShader:vn.background.fragmentShader,side:Yi,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),Object.defineProperty(c.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(c)),c.material.uniforms.t2D.value=b,b.matrixAutoUpdate===!0&&b.updateMatrix(),c.material.uniforms.uvTransform.value.copy(b.matrix),(u!==b||f!==b.version||d!==r.toneMapping)&&(c.material.needsUpdate=!0,u=b,f=b.version,d=r.toneMapping),m.unshift(c,c.geometry,c.material,0,0,null))}function v(m,g){t.buffers.color.setClear(m.r,m.g,m.b,g,s)}return{getClearColor:function(){return o},setClearColor:function(m,g=1){o.set(m),a=g,v(o,a)},getClearAlpha:function(){return a},setClearAlpha:function(m){a=m,v(o,a)},render:p}}function Pv(r,e,t,n){const i=r.getParameter(r.MAX_VERTEX_ATTRIBS),s=n.isWebGL2?null:e.get("OES_vertex_array_object"),o=n.isWebGL2||s!==null,a={},c=g(null);let h=c,u=!1;function f(z,N,R,P,F){let X=!1;if(o){const J=m(P,R,N);h!==J&&(h=J,p(h.object)),X=E(P,F),X&&b(P,F)}else{const J=N.wireframe===!0;(h.geometry!==P.id||h.program!==R.id||h.wireframe!==J)&&(h.geometry=P.id,h.program=R.id,h.wireframe=J,X=!0)}z.isInstancedMesh===!0&&(X=!0),F!==null&&t.update(F,r.ELEMENT_ARRAY_BUFFER),(X||u)&&(u=!1,U(z,N,R,P),F!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(F).buffer))}function d(){return n.isWebGL2?r.createVertexArray():s.createVertexArrayOES()}function p(z){return n.isWebGL2?r.bindVertexArray(z):s.bindVertexArrayOES(z)}function v(z){return n.isWebGL2?r.deleteVertexArray(z):s.deleteVertexArrayOES(z)}function m(z,N,R){const P=R.wireframe===!0;let F=a[z.id];F===void 0&&(F={},a[z.id]=F);let X=F[N.id];X===void 0&&(X={},F[N.id]=X);let J=X[P];return J===void 0&&(J=g(d()),X[P]=J),J}function g(z){const N=[],R=[],P=[];for(let F=0;F<i;F++)N[F]=0,R[F]=0,P[F]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:N,enabledAttributes:R,attributeDivisors:P,object:z,attributes:{},index:null}}function E(z,N){const R=h.attributes,P=z.attributes;let F=0;for(const X in P){const J=R[X],te=P[X];if(J===void 0||J.attribute!==te||J.data!==te.data)return!0;F++}return h.attributesNum!==F||h.index!==N}function b(z,N){const R={},P=z.attributes;let F=0;for(const X in P){const J=P[X],te={};te.attribute=J,J.data&&(te.data=J.data),R[X]=te,F++}h.attributes=R,h.attributesNum=F,h.index=N}function C(){const z=h.newAttributes;for(let N=0,R=z.length;N<R;N++)z[N]=0}function S(z){A(z,0)}function A(z,N){const R=h.newAttributes,P=h.enabledAttributes,F=h.attributeDivisors;R[z]=1,P[z]===0&&(r.enableVertexAttribArray(z),P[z]=1),F[z]!==N&&((n.isWebGL2?r:e.get("ANGLE_instanced_arrays"))[n.isWebGL2?"vertexAttribDivisor":"vertexAttribDivisorANGLE"](z,N),F[z]=N)}function O(){const z=h.newAttributes,N=h.enabledAttributes;for(let R=0,P=N.length;R<P;R++)N[R]!==z[R]&&(r.disableVertexAttribArray(R),N[R]=0)}function V(z,N,R,P,F,X){n.isWebGL2===!0&&(R===r.INT||R===r.UNSIGNED_INT)?r.vertexAttribIPointer(z,N,R,F,X):r.vertexAttribPointer(z,N,R,P,F,X)}function U(z,N,R,P){if(n.isWebGL2===!1&&(z.isInstancedMesh||P.isInstancedBufferGeometry)&&e.get("ANGLE_instanced_arrays")===null)return;C();const F=P.attributes,X=R.getAttributes(),J=N.defaultAttributeValues;for(const te in X){const oe=X[te];if(oe.location>=0){let pe=F[te];if(pe===void 0&&(te==="instanceMatrix"&&z.instanceMatrix&&(pe=z.instanceMatrix),te==="instanceColor"&&z.instanceColor&&(pe=z.instanceColor)),pe!==void 0){const Le=pe.normalized,Oe=pe.itemSize,K=t.get(pe);if(K===void 0)continue;const Qe=K.buffer,ze=K.type,Ve=K.bytesPerElement;if(pe.isInterleavedBufferAttribute){const de=pe.data,qe=de.stride,re=pe.offset;if(de.isInstancedInterleavedBuffer){for(let se=0;se<oe.locationSize;se++)A(oe.location+se,de.meshPerAttribute);z.isInstancedMesh!==!0&&P._maxInstanceCount===void 0&&(P._maxInstanceCount=de.meshPerAttribute*de.count)}else for(let se=0;se<oe.locationSize;se++)S(oe.location+se);r.bindBuffer(r.ARRAY_BUFFER,Qe);for(let se=0;se<oe.locationSize;se++)V(oe.location+se,Oe/oe.locationSize,ze,Le,qe*Ve,(re+Oe/oe.locationSize*se)*Ve)}else{if(pe.isInstancedBufferAttribute){for(let de=0;de<oe.locationSize;de++)A(oe.location+de,pe.meshPerAttribute);z.isInstancedMesh!==!0&&P._maxInstanceCount===void 0&&(P._maxInstanceCount=pe.meshPerAttribute*pe.count)}else for(let de=0;de<oe.locationSize;de++)S(oe.location+de);r.bindBuffer(r.ARRAY_BUFFER,Qe);for(let de=0;de<oe.locationSize;de++)V(oe.location+de,Oe/oe.locationSize,ze,Le,Oe*Ve,Oe/oe.locationSize*de*Ve)}}else if(J!==void 0){const Le=J[te];if(Le!==void 0)switch(Le.length){case 2:r.vertexAttrib2fv(oe.location,Le);break;case 3:r.vertexAttrib3fv(oe.location,Le);break;case 4:r.vertexAttrib4fv(oe.location,Le);break;default:r.vertexAttrib1fv(oe.location,Le)}}}}O()}function Q(){B();for(const z in a){const N=a[z];for(const R in N){const P=N[R];for(const F in P)v(P[F].object),delete P[F];delete N[R]}delete a[z]}}function Z(z){if(a[z.id]===void 0)return;const N=a[z.id];for(const R in N){const P=N[R];for(const F in P)v(P[F].object),delete P[F];delete N[R]}delete a[z.id]}function L(z){for(const N in a){const R=a[N];if(R[z.id]===void 0)continue;const P=R[z.id];for(const F in P)v(P[F].object),delete P[F];delete R[z.id]}}function B(){Y(),u=!0,h!==c&&(h=c,p(h.object))}function Y(){c.geometry=null,c.program=null,c.wireframe=!1}return{setup:f,reset:B,resetDefaultState:Y,dispose:Q,releaseStatesOfGeometry:Z,releaseStatesOfProgram:L,initAttributes:C,enableAttribute:S,disableUnusedAttributes:O}}function Iv(r,e,t,n){const i=n.isWebGL2;let s;function o(h){s=h}function a(h,u){r.drawArrays(s,h,u),t.update(u,s,1)}function c(h,u,f){if(f===0)return;let d,p;if(i)d=r,p="drawArraysInstanced";else if(d=e.get("ANGLE_instanced_arrays"),p="drawArraysInstancedANGLE",d===null){console.error("THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}d[p](s,h,u,f),t.update(u,s,f)}this.setMode=o,this.render=a,this.renderInstances=c}function Dv(r,e,t){let n;function i(){if(n!==void 0)return n;if(e.has("EXT_texture_filter_anisotropic")===!0){const V=e.get("EXT_texture_filter_anisotropic");n=r.getParameter(V.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function s(V){if(V==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";V="mediump"}return V==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}const o=typeof WebGL2RenderingContext!="undefined"&&r instanceof WebGL2RenderingContext||typeof WebGL2ComputeRenderingContext!="undefined"&&r instanceof WebGL2ComputeRenderingContext;let a=t.precision!==void 0?t.precision:"highp";const c=s(a);c!==a&&(console.warn("THREE.WebGLRenderer:",a,"not supported, using",c,"instead."),a=c);const h=o||e.has("WEBGL_draw_buffers"),u=t.logarithmicDepthBuffer===!0,f=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),d=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_TEXTURE_SIZE),v=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),m=r.getParameter(r.MAX_VERTEX_ATTRIBS),g=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),E=r.getParameter(r.MAX_VARYING_VECTORS),b=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),C=d>0,S=o||e.has("OES_texture_float"),A=C&&S,O=o?r.getParameter(r.MAX_SAMPLES):0;return{isWebGL2:o,drawBuffers:h,getMaxAnisotropy:i,getMaxPrecision:s,precision:a,logarithmicDepthBuffer:u,maxTextures:f,maxVertexTextures:d,maxTextureSize:p,maxCubemapSize:v,maxAttributes:m,maxVertexUniforms:g,maxVaryings:E,maxFragmentUniforms:b,vertexTextures:C,floatFragmentTextures:S,floatVertexTextures:A,maxSamples:O}}function Nv(r){const e=this;let t=null,n=0,i=!1,s=!1;const o=new wn,a=new Lt,c={value:null,needsUpdate:!1};this.uniform=c,this.numPlanes=0,this.numIntersection=0,this.init=function(f,d,p){const v=f.length!==0||d||n!==0||i;return i=d,t=u(f,p,0),n=f.length,v},this.beginShadows=function(){s=!0,u(null)},this.endShadows=function(){s=!1,h()},this.setState=function(f,d,p){const v=f.clippingPlanes,m=f.clipIntersection,g=f.clipShadows,E=r.get(f);if(!i||v===null||v.length===0||s&&!g)s?u(null):h();else{const b=s?0:n,C=b*4;let S=E.clippingState||null;c.value=S,S=u(v,d,C,p);for(let A=0;A!==C;++A)S[A]=t[A];E.clippingState=S,this.numIntersection=m?this.numPlanes:0,this.numPlanes+=b}};function h(){c.value!==t&&(c.value=t,c.needsUpdate=n>0),e.numPlanes=n,e.numIntersection=0}function u(f,d,p,v){const m=f!==null?f.length:0;let g=null;if(m!==0){if(g=c.value,v!==!0||g===null){const E=p+m*4,b=d.matrixWorldInverse;a.getNormalMatrix(b),(g===null||g.length<E)&&(g=new Float32Array(E));for(let C=0,S=p;C!==m;++C,S+=4)o.copy(f[C]).applyMatrix4(b,a),o.normal.toArray(g,S),g[S+3]=o.constant}c.value=g,c.needsUpdate=!0}return e.numPlanes=m,e.numIntersection=0,g}}function Ov(r){let e=new WeakMap;function t(o,a){return a===vs?o.mapping=di:a===_s&&(o.mapping=fi),o}function n(o){if(o&&o.isTexture&&o.isRenderTargetTexture===!1){const a=o.mapping;if(a===vs||a===_s)if(e.has(o)){const c=e.get(o).texture;return t(c,o.mapping)}else{const c=o.image;if(c&&c.height>0){const h=new oa(c.height/2);return h.fromEquirectangularTexture(r,o),e.set(o,h),o.addEventListener("dispose",i),t(h.texture,o.mapping)}else return null}}return o}function i(o){const a=o.target;a.removeEventListener("dispose",i);const c=e.get(a);c!==void 0&&(e.delete(a),c.dispose())}function s(){e=new WeakMap}return{get:n,dispose:s}}class Us extends Os{constructor(e=-1,t=1,n=1,i=-1,s=.1,o=2e3){super(),this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=e,this.right=t,this.top=n,this.bottom=i,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(e,t){return super.copy(e,t),this.left=e.left,this.right=e.right,this.top=e.top,this.bottom=e.bottom,this.near=e.near,this.far=e.far,this.zoom=e.zoom,this.view=e.view===null?null:Object.assign({},e.view),this}setViewOffset(e,t,n,i,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=e,this.view.fullHeight=t,this.view.offsetX=n,this.view.offsetY=i,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const e=(this.right-this.left)/(2*this.zoom),t=(this.top-this.bottom)/(2*this.zoom),n=(this.right+this.left)/2,i=(this.top+this.bottom)/2;let s=n-e,o=n+e,a=i+t,c=i-t;if(this.view!==null&&this.view.enabled){const h=(this.right-this.left)/this.view.fullWidth/this.zoom,u=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=h*this.view.offsetX,o=s+h*this.view.width,a-=u*this.view.offsetY,c=a-u*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,c,this.near,this.far),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(e){const t=super.toJSON(e);return t.object.zoom=this.zoom,t.object.left=this.left,t.object.right=this.right,t.object.top=this.top,t.object.bottom=this.bottom,t.object.near=this.near,t.object.far=this.far,this.view!==null&&(t.object.view=Object.assign({},this.view)),t}}Us.prototype.isOrthographicCamera=!0;const Cr=4,eh=[.125,.215,.35,.446,.526,.582],Fi=20,$a=new Us,th=new Me;let ja=null;const Ni=(1+Math.sqrt(5))/2,Er=1/Ni,nh=[new D(1,1,1),new D(-1,1,1),new D(1,1,-1),new D(-1,1,-1),new D(0,Ni,Er),new D(0,Ni,-Er),new D(Er,0,Ni),new D(-Er,0,Ni),new D(Ni,Er,0),new D(-Ni,Er,0)];class Hl{constructor(e){this._renderer=e,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(e,t=0,n=.1,i=100){ja=this._renderer.getRenderTarget(),this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(e,n,i,s),t>0&&this._blur(s,0,0,t),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(e,t=null){return this._fromTexture(e,t)}fromCubemap(e,t=null){return this._fromTexture(e,t)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=sh(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=rh(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(e){this._lodMax=Math.floor(Math.log2(e)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let e=0;e<this._lodPlanes.length;e++)this._lodPlanes[e].dispose()}_cleanup(e){this._renderer.setRenderTarget(ja),e.scissorTest=!1,mo(e,0,0,e.width,e.height)}_fromTexture(e,t){e.mapping===di||e.mapping===fi?this._setSize(e.image.length===0?16:e.image[0].width||e.image[0].image.width):this._setSize(e.image.width/4),ja=this._renderer.getRenderTarget();const n=t||this._allocateTargets();return this._textureToCubeUV(e,n),this._applyPMREM(n),this._cleanup(n),n}_allocateTargets(){const e=3*Math.max(this._cubeSize,112),t=4*this._cubeSize-32,n={magFilter:_t,minFilter:_t,generateMipmaps:!1,type:Gi,format:$t,encoding:An,depthBuffer:!1},i=ih(e,t,n);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=ih(e,t,n);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=Fv(s)),this._blurMaterial=Uv(s,e,t)}return i}_compileMaterial(e){const t=new St(this._lodPlanes[0],e);this._renderer.compile(t,$a)}_sceneToCubeUV(e,t,n,i){const a=new It(90,1,t,n),c=[1,-1,1,1,1,1],h=[1,1,1,-1,-1,-1],u=this._renderer,f=u.autoClear,d=u.toneMapping;u.getClearColor(th),u.toneMapping=bn,u.autoClear=!1;const p=new $n({name:"PMREM.Background",side:jt,depthWrite:!1,depthTest:!1}),v=new St(new Yn,p);let m=!1;const g=e.background;g?g.isColor&&(p.color.copy(g),e.background=null,m=!0):(p.color.copy(th),m=!0);for(let E=0;E<6;E++){const b=E%3;b===0?(a.up.set(0,c[E],0),a.lookAt(h[E],0,0)):b===1?(a.up.set(0,0,c[E]),a.lookAt(0,h[E],0)):(a.up.set(0,c[E],0),a.lookAt(0,0,h[E]));const C=this._cubeSize;mo(i,b*C,E>2?C:0,C,C),u.setRenderTarget(i),m&&u.render(v,a),u.render(e,a)}v.geometry.dispose(),v.material.dispose(),u.toneMapping=d,u.autoClear=f,e.background=g}_textureToCubeUV(e,t){const n=this._renderer,i=e.mapping===di||e.mapping===fi;i?(this._cubemapMaterial===null&&(this._cubemapMaterial=sh()),this._cubemapMaterial.uniforms.flipEnvMap.value=e.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=rh());const s=i?this._cubemapMaterial:this._equirectMaterial,o=new St(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=e;const c=this._cubeSize;mo(t,0,0,3*c,2*c),n.setRenderTarget(t),n.render(o,$a)}_applyPMREM(e){const t=this._renderer,n=t.autoClear;t.autoClear=!1;for(let i=1;i<this._lodPlanes.length;i++){const s=Math.sqrt(this._sigmas[i]*this._sigmas[i]-this._sigmas[i-1]*this._sigmas[i-1]),o=nh[(i-1)%nh.length];this._blur(e,i-1,i,s,o)}t.autoClear=n}_blur(e,t,n,i,s){const o=this._pingPongRenderTarget;this._halfBlur(e,o,t,n,i,"latitudinal",s),this._halfBlur(o,e,n,n,i,"longitudinal",s)}_halfBlur(e,t,n,i,s,o,a){const c=this._renderer,h=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const u=3,f=new St(this._lodPlanes[i],h),d=h.uniforms,p=this._sizeLods[n]-1,v=isFinite(s)?Math.PI/(2*p):2*Math.PI/(2*Fi-1),m=s/v,g=isFinite(s)?1+Math.floor(u*m):Fi;g>Fi&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Fi}`);const E=[];let b=0;for(let V=0;V<Fi;++V){const U=V/m,Q=Math.exp(-U*U/2);E.push(Q),V===0?b+=Q:V<g&&(b+=2*Q)}for(let V=0;V<E.length;V++)E[V]=E[V]/b;d.envMap.value=e.texture,d.samples.value=g,d.weights.value=E,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:C}=this;d.dTheta.value=v,d.mipInt.value=C-n;const S=this._sizeLods[i],A=3*S*(i>C-Cr?i-C+Cr:0),O=4*(this._cubeSize-S);mo(t,A,O,3*S,2*S),c.setRenderTarget(t),c.render(f,$a)}}function Fv(r){const e=[],t=[],n=[];let i=r;const s=r-Cr+1+eh.length;for(let o=0;o<s;o++){const a=Math.pow(2,i);t.push(a);let c=1/a;o>r-Cr?c=eh[o-r+Cr-1]:o===0&&(c=0),n.push(c);const h=1/(a-1),u=-h/2,f=1+h/2,d=[u,u,f,u,f,f,u,u,f,f,u,f],p=6,v=6,m=3,g=2,E=1,b=new Float32Array(m*v*p),C=new Float32Array(g*v*p),S=new Float32Array(E*v*p);for(let O=0;O<p;O++){const V=O%3*2/3-1,U=O>2?0:-1,Q=[V,U,0,V+2/3,U,0,V+2/3,U+1,0,V,U,0,V+2/3,U+1,0,V,U+1,0];b.set(Q,m*v*O),C.set(d,g*v*O);const Z=[O,O,O,O,O,O];S.set(Z,E*v*O)}const A=new Ue;A.setAttribute("position",new tt(b,m)),A.setAttribute("uv",new tt(C,g)),A.setAttribute("faceIndex",new tt(S,E)),e.push(A),i>Cr&&i--}return{lodPlanes:e,sizeLods:t,sigmas:n}}function ih(r,e,t){const n=new kt(r,e,t);return n.texture.mapping=qr,n.texture.name="PMREM.cubeUv",n.scissorTest=!0,n}function mo(r,e,t,n,i){r.viewport.set(e,t,n,i),r.scissor.set(e,t,n,i)}function Uv(r,e,t){const n=new Float32Array(Fi),i=new D(0,1,0);return new ln({name:"SphericalGaussianBlur",defines:{n:Fi,CUBEUV_TEXEL_WIDTH:1/e,CUBEUV_TEXEL_HEIGHT:1/t,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:n},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:i}},vertexShader:Ql(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:Xn,depthTest:!1,depthWrite:!1})}function rh(){return new ln({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Ql(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:Xn,depthTest:!1,depthWrite:!1})}function sh(){return new ln({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Ql(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:Xn,depthTest:!1,depthWrite:!1})}function Ql(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function Bv(r){let e=new WeakMap,t=null;function n(a){if(a&&a.isTexture){const c=a.mapping,h=c===vs||c===_s,u=c===di||c===fi;if(h||u)if(a.isRenderTargetTexture&&a.needsPMREMUpdate===!0){a.needsPMREMUpdate=!1;let f=e.get(a);return t===null&&(t=new Hl(r)),f=h?t.fromEquirectangular(a,f):t.fromCubemap(a,f),e.set(a,f),f.texture}else{if(e.has(a))return e.get(a).texture;{const f=a.image;if(h&&f&&f.height>0||u&&f&&i(f)){t===null&&(t=new Hl(r));const d=h?t.fromEquirectangular(a):t.fromCubemap(a);return e.set(a,d),a.addEventListener("dispose",s),d.texture}else return null}}}return a}function i(a){let c=0;const h=6;for(let u=0;u<h;u++)a[u]!==void 0&&c++;return c===h}function s(a){const c=a.target;c.removeEventListener("dispose",s);const h=e.get(c);h!==void 0&&(e.delete(c),h.dispose())}function o(){e=new WeakMap,t!==null&&(t.dispose(),t=null)}return{get:n,dispose:o}}function Hv(r){const e={};function t(n){if(e[n]!==void 0)return e[n];let i;switch(n){case"WEBGL_depth_texture":i=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":i=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":i=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":i=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:i=r.getExtension(n)}return e[n]=i,i}return{has:function(n){return t(n)!==null},init:function(n){n.isWebGL2?t("EXT_color_buffer_float"):(t("WEBGL_depth_texture"),t("OES_texture_float"),t("OES_texture_half_float"),t("OES_texture_half_float_linear"),t("OES_standard_derivatives"),t("OES_element_index_uint"),t("OES_vertex_array_object"),t("ANGLE_instanced_arrays")),t("OES_texture_float_linear"),t("EXT_color_buffer_half_float"),t("WEBGL_multisampled_render_to_texture")},get:function(n){const i=t(n);return i===null&&console.warn("THREE.WebGLRenderer: "+n+" extension not supported."),i}}}function zv(r,e,t,n){const i={},s=new WeakMap;function o(f){const d=f.target;d.index!==null&&e.remove(d.index);for(const v in d.attributes)e.remove(d.attributes[v]);d.removeEventListener("dispose",o),delete i[d.id];const p=s.get(d);p&&(e.remove(p),s.delete(d)),n.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,t.memory.geometries--}function a(f,d){return i[d.id]===!0||(d.addEventListener("dispose",o),i[d.id]=!0,t.memory.geometries++),d}function c(f){const d=f.attributes;for(const v in d)e.update(d[v],r.ARRAY_BUFFER);const p=f.morphAttributes;for(const v in p){const m=p[v];for(let g=0,E=m.length;g<E;g++)e.update(m[g],r.ARRAY_BUFFER)}}function h(f){const d=[],p=f.index,v=f.attributes.position;let m=0;if(p!==null){const b=p.array;m=p.version;for(let C=0,S=b.length;C<S;C+=3){const A=b[C+0],O=b[C+1],V=b[C+2];d.push(A,O,O,V,V,A)}}else{const b=v.array;m=v.version;for(let C=0,S=b.length/3-1;C<S;C+=3){const A=C+0,O=C+1,V=C+2;d.push(A,O,O,V,V,A)}}const g=new(dd(d)?ra:ia)(d,1);g.version=m;const E=s.get(f);E&&e.remove(E),s.set(f,g)}function u(f){const d=s.get(f);if(d){const p=f.index;p!==null&&d.version<p.version&&h(f)}else h(f);return s.get(f)}return{get:a,update:c,getWireframeAttribute:u}}function kv(r,e,t,n){const i=n.isWebGL2;let s;function o(d){s=d}let a,c;function h(d){a=d.type,c=d.bytesPerElement}function u(d,p){r.drawElements(s,p,a,d*c),t.update(p,s,1)}function f(d,p,v){if(v===0)return;let m,g;if(i)m=r,g="drawElementsInstanced";else if(m=e.get("ANGLE_instanced_arrays"),g="drawElementsInstancedANGLE",m===null){console.error("THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.");return}m[g](s,p,a,d*c,v),t.update(p,s,v)}this.setMode=o,this.setIndex=h,this.render=u,this.renderInstances=f}function Gv(r){const e={geometries:0,textures:0},t={frame:0,calls:0,triangles:0,points:0,lines:0};function n(s,o,a){switch(t.calls++,o){case r.TRIANGLES:t.triangles+=a*(s/3);break;case r.LINES:t.lines+=a*(s/2);break;case r.LINE_STRIP:t.lines+=a*(s-1);break;case r.LINE_LOOP:t.lines+=a*s;break;case r.POINTS:t.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function i(){t.frame++,t.calls=0,t.triangles=0,t.points=0,t.lines=0}return{memory:e,render:t,programs:null,autoReset:!0,reset:i,update:n}}function Vv(r,e){return r[0]-e[0]}function Wv(r,e){return Math.abs(e[1])-Math.abs(r[1])}function Ja(r,e){let t=1;const n=e.isInterleavedBufferAttribute?e.data.array:e.array;n instanceof Int8Array?t=127:n instanceof Int16Array?t=32767:n instanceof Int32Array?t=2147483647:console.error("THREE.WebGLMorphtargets: Unsupported morph attribute data type: ",n),r.divideScalar(t)}function Xv(r,e,t){const n={},i=new Float32Array(8),s=new WeakMap,o=new st,a=[];for(let h=0;h<8;h++)a[h]=[h,0];function c(h,u,f,d){const p=h.morphTargetInfluences;if(e.isWebGL2===!0){const m=u.morphAttributes.position||u.morphAttributes.normal||u.morphAttributes.color,g=m!==void 0?m.length:0;let E=s.get(u);if(E===void 0||E.count!==g){let R=function(){z.dispose(),s.delete(u),u.removeEventListener("dispose",R)};var v=R;E!==void 0&&E.texture.dispose();const S=u.morphAttributes.position!==void 0,A=u.morphAttributes.normal!==void 0,O=u.morphAttributes.color!==void 0,V=u.morphAttributes.position||[],U=u.morphAttributes.normal||[],Q=u.morphAttributes.color||[];let Z=0;S===!0&&(Z=1),A===!0&&(Z=2),O===!0&&(Z=3);let L=u.attributes.position.count*Z,B=1;L>e.maxTextureSize&&(B=Math.ceil(L/e.maxTextureSize),L=e.maxTextureSize);const Y=new Float32Array(L*B*4*g),z=new Yr(Y,L,B,g);z.type=Wn,z.needsUpdate=!0;const N=Z*4;for(let P=0;P<g;P++){const F=V[P],X=U[P],J=Q[P],te=L*B*4*P;for(let oe=0;oe<F.count;oe++){const pe=oe*N;S===!0&&(o.fromBufferAttribute(F,oe),F.normalized===!0&&Ja(o,F),Y[te+pe+0]=o.x,Y[te+pe+1]=o.y,Y[te+pe+2]=o.z,Y[te+pe+3]=0),A===!0&&(o.fromBufferAttribute(X,oe),X.normalized===!0&&Ja(o,X),Y[te+pe+4]=o.x,Y[te+pe+5]=o.y,Y[te+pe+6]=o.z,Y[te+pe+7]=0),O===!0&&(o.fromBufferAttribute(J,oe),J.normalized===!0&&Ja(o,J),Y[te+pe+8]=o.x,Y[te+pe+9]=o.y,Y[te+pe+10]=o.z,Y[te+pe+11]=J.itemSize===4?o.w:1)}}E={count:g,texture:z,size:new le(L,B)},s.set(u,E),u.addEventListener("dispose",R)}let b=0;for(let S=0;S<p.length;S++)b+=p[S];const C=u.morphTargetsRelative?1:1-b;d.getUniforms().setValue(r,"morphTargetBaseInfluence",C),d.getUniforms().setValue(r,"morphTargetInfluences",p),d.getUniforms().setValue(r,"morphTargetsTexture",E.texture,t),d.getUniforms().setValue(r,"morphTargetsTextureSize",E.size)}else{const m=p===void 0?0:p.length;let g=n[u.id];if(g===void 0||g.length!==m){g=[];for(let A=0;A<m;A++)g[A]=[A,0];n[u.id]=g}for(let A=0;A<m;A++){const O=g[A];O[0]=A,O[1]=p[A]}g.sort(Wv);for(let A=0;A<8;A++)A<m&&g[A][1]?(a[A][0]=g[A][0],a[A][1]=g[A][1]):(a[A][0]=Number.MAX_SAFE_INTEGER,a[A][1]=0);a.sort(Vv);const E=u.morphAttributes.position,b=u.morphAttributes.normal;let C=0;for(let A=0;A<8;A++){const O=a[A],V=O[0],U=O[1];V!==Number.MAX_SAFE_INTEGER&&U?(E&&u.getAttribute("morphTarget"+A)!==E[V]&&u.setAttribute("morphTarget"+A,E[V]),b&&u.getAttribute("morphNormal"+A)!==b[V]&&u.setAttribute("morphNormal"+A,b[V]),i[A]=U,C+=U):(E&&u.hasAttribute("morphTarget"+A)===!0&&u.deleteAttribute("morphTarget"+A),b&&u.hasAttribute("morphNormal"+A)===!0&&u.deleteAttribute("morphNormal"+A),i[A]=0)}const S=u.morphTargetsRelative?1:1-C;d.getUniforms().setValue(r,"morphTargetBaseInfluence",S),d.getUniforms().setValue(r,"morphTargetInfluences",i)}}return{update:c}}function qv(r,e,t,n){let i=new WeakMap;function s(c){const h=n.render.frame,u=c.geometry,f=e.get(c,u);return i.get(f)!==h&&(e.update(f),i.set(f,h)),c.isInstancedMesh&&(c.hasEventListener("dispose",a)===!1&&c.addEventListener("dispose",a),t.update(c.instanceMatrix,r.ARRAY_BUFFER),c.instanceColor!==null&&t.update(c.instanceColor,r.ARRAY_BUFFER)),f}function o(){i=new WeakMap}function a(c){const h=c.target;h.removeEventListener("dispose",a),t.remove(h.instanceMatrix),h.instanceColor!==null&&t.remove(h.instanceColor)}return{update:s,dispose:o}}const Sd=new At,Ad=new Yr,Rd=new Ns,Cd=new Zr,oh=[],ah=[],lh=new Float32Array(16),ch=new Float32Array(9),hh=new Float32Array(4);function Kr(r,e,t){const n=r[0];if(n<=0||n>0)return r;const i=e*t;let s=oh[i];if(s===void 0&&(s=new Float32Array(i),oh[i]=s),e!==0){n.toArray(s,0);for(let o=1,a=0;o!==e;++o)a+=t,r[o].toArray(s,a)}return s}function Gt(r,e){if(r.length!==e.length)return!1;for(let t=0,n=r.length;t<n;t++)if(r[t]!==e[t])return!1;return!0}function Ut(r,e){for(let t=0,n=e.length;t<n;t++)r[t]=e[t]}function aa(r,e){let t=ah[e];t===void 0&&(t=new Int32Array(e),ah[e]=t);for(let n=0;n!==e;++n)t[n]=r.allocateTextureUnit();return t}function Yv(r,e){const t=this.cache;t[0]!==e&&(r.uniform1f(this.addr,e),t[0]=e)}function Zv(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y)&&(r.uniform2f(this.addr,e.x,e.y),t[0]=e.x,t[1]=e.y);else{if(Gt(t,e))return;r.uniform2fv(this.addr,e),Ut(t,e)}}function Kv(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z)&&(r.uniform3f(this.addr,e.x,e.y,e.z),t[0]=e.x,t[1]=e.y,t[2]=e.z);else if(e.r!==void 0)(t[0]!==e.r||t[1]!==e.g||t[2]!==e.b)&&(r.uniform3f(this.addr,e.r,e.g,e.b),t[0]=e.r,t[1]=e.g,t[2]=e.b);else{if(Gt(t,e))return;r.uniform3fv(this.addr,e),Ut(t,e)}}function $v(r,e){const t=this.cache;if(e.x!==void 0)(t[0]!==e.x||t[1]!==e.y||t[2]!==e.z||t[3]!==e.w)&&(r.uniform4f(this.addr,e.x,e.y,e.z,e.w),t[0]=e.x,t[1]=e.y,t[2]=e.z,t[3]=e.w);else{if(Gt(t,e))return;r.uniform4fv(this.addr,e),Ut(t,e)}}function jv(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Gt(t,e))return;r.uniformMatrix2fv(this.addr,!1,e),Ut(t,e)}else{if(Gt(t,n))return;hh.set(n),r.uniformMatrix2fv(this.addr,!1,hh),Ut(t,n)}}function Jv(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Gt(t,e))return;r.uniformMatrix3fv(this.addr,!1,e),Ut(t,e)}else{if(Gt(t,n))return;ch.set(n),r.uniformMatrix3fv(this.addr,!1,ch),Ut(t,n)}}function Qv(r,e){const t=this.cache,n=e.elements;if(n===void 0){if(Gt(t,e))return;r.uniformMatrix4fv(this.addr,!1,e),Ut(t,e)}else{if(Gt(t,n))return;lh.set(n),r.uniformMatrix4fv(this.addr,!1,lh),Ut(t,n)}}function e_(r,e){const t=this.cache;t[0]!==e&&(r.uniform1i(this.addr,e),t[0]=e)}function t_(r,e){const t=this.cache;Gt(t,e)||(r.uniform2iv(this.addr,e),Ut(t,e))}function n_(r,e){const t=this.cache;Gt(t,e)||(r.uniform3iv(this.addr,e),Ut(t,e))}function i_(r,e){const t=this.cache;Gt(t,e)||(r.uniform4iv(this.addr,e),Ut(t,e))}function r_(r,e){const t=this.cache;t[0]!==e&&(r.uniform1ui(this.addr,e),t[0]=e)}function s_(r,e){const t=this.cache;Gt(t,e)||(r.uniform2uiv(this.addr,e),Ut(t,e))}function o_(r,e){const t=this.cache;Gt(t,e)||(r.uniform3uiv(this.addr,e),Ut(t,e))}function a_(r,e){const t=this.cache;Gt(t,e)||(r.uniform4uiv(this.addr,e),Ut(t,e))}function l_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2D(e||Sd,i)}function c_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture3D(e||Rd,i)}function h_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTextureCube(e||Cd,i)}function u_(r,e,t){const n=this.cache,i=t.allocateTextureUnit();n[0]!==i&&(r.uniform1i(this.addr,i),n[0]=i),t.setTexture2DArray(e||Ad,i)}function d_(r){switch(r){case 5126:return Yv;case 35664:return Zv;case 35665:return Kv;case 35666:return $v;case 35674:return jv;case 35675:return Jv;case 35676:return Qv;case 5124:case 35670:return e_;case 35667:case 35671:return t_;case 35668:case 35672:return n_;case 35669:case 35673:return i_;case 5125:return r_;case 36294:return s_;case 36295:return o_;case 36296:return a_;case 35678:case 36198:case 36298:case 36306:case 35682:return l_;case 35679:case 36299:case 36307:return c_;case 35680:case 36300:case 36308:case 36293:return h_;case 36289:case 36303:case 36311:case 36292:return u_}}function f_(r,e){r.uniform1fv(this.addr,e)}function p_(r,e){const t=Kr(e,this.size,2);r.uniform2fv(this.addr,t)}function m_(r,e){const t=Kr(e,this.size,3);r.uniform3fv(this.addr,t)}function g_(r,e){const t=Kr(e,this.size,4);r.uniform4fv(this.addr,t)}function v_(r,e){const t=Kr(e,this.size,4);r.uniformMatrix2fv(this.addr,!1,t)}function __(r,e){const t=Kr(e,this.size,9);r.uniformMatrix3fv(this.addr,!1,t)}function y_(r,e){const t=Kr(e,this.size,16);r.uniformMatrix4fv(this.addr,!1,t)}function x_(r,e){r.uniform1iv(this.addr,e)}function M_(r,e){r.uniform2iv(this.addr,e)}function E_(r,e){r.uniform3iv(this.addr,e)}function w_(r,e){r.uniform4iv(this.addr,e)}function b_(r,e){r.uniform1uiv(this.addr,e)}function T_(r,e){r.uniform2uiv(this.addr,e)}function S_(r,e){r.uniform3uiv(this.addr,e)}function A_(r,e){r.uniform4uiv(this.addr,e)}function R_(r,e,t){const n=e.length,i=aa(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2D(e[s]||Sd,i[s])}function C_(r,e,t){const n=e.length,i=aa(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture3D(e[s]||Rd,i[s])}function L_(r,e,t){const n=e.length,i=aa(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTextureCube(e[s]||Cd,i[s])}function P_(r,e,t){const n=e.length,i=aa(t,n);r.uniform1iv(this.addr,i);for(let s=0;s!==n;++s)t.setTexture2DArray(e[s]||Ad,i[s])}function I_(r){switch(r){case 5126:return f_;case 35664:return p_;case 35665:return m_;case 35666:return g_;case 35674:return v_;case 35675:return __;case 35676:return y_;case 5124:case 35670:return x_;case 35667:case 35671:return M_;case 35668:case 35672:return E_;case 35669:case 35673:return w_;case 5125:return b_;case 36294:return T_;case 36295:return S_;case 36296:return A_;case 35678:case 36198:case 36298:case 36306:case 35682:return R_;case 35679:case 36299:case 36307:return C_;case 35680:case 36300:case 36308:case 36293:return L_;case 36289:case 36303:case 36311:case 36292:return P_}}function D_(r,e,t){this.id=r,this.addr=t,this.cache=[],this.setValue=d_(e.type)}function Ld(r,e,t){this.id=r,this.addr=t,this.cache=[],this.size=e.size,this.setValue=I_(e.type)}Ld.prototype.updateCache=function(r){const e=this.cache;r instanceof Float32Array&&e.length!==r.length&&(this.cache=new Float32Array(r.length)),Ut(e,r)};function Pd(r){this.id=r,this.seq=[],this.map={}}Pd.prototype.setValue=function(r,e,t){const n=this.seq;for(let i=0,s=n.length;i!==s;++i){const o=n[i];o.setValue(r,e[o.id],t)}};const Qa=/(\w+)(\])?(\[|\.)?/g;function uh(r,e){r.seq.push(e),r.map[e.id]=e}function N_(r,e,t){const n=r.name,i=n.length;for(Qa.lastIndex=0;;){const s=Qa.exec(n),o=Qa.lastIndex;let a=s[1];const c=s[2]==="]",h=s[3];if(c&&(a=a|0),h===void 0||h==="["&&o+2===i){uh(t,h===void 0?new D_(a,r,e):new Ld(a,r,e));break}else{let f=t.map[a];f===void 0&&(f=new Pd(a),uh(t,f)),t=f}}}function ui(r,e){this.seq=[],this.map={};const t=r.getProgramParameter(e,r.ACTIVE_UNIFORMS);for(let n=0;n<t;++n){const i=r.getActiveUniform(e,n),s=r.getUniformLocation(e,i.name);N_(i,s,this)}}ui.prototype.setValue=function(r,e,t,n){const i=this.map[e];i!==void 0&&i.setValue(r,t,n)};ui.prototype.setOptional=function(r,e,t){const n=e[t];n!==void 0&&this.setValue(r,t,n)};ui.upload=function(r,e,t,n){for(let i=0,s=e.length;i!==s;++i){const o=e[i],a=t[o.id];a.needsUpdate!==!1&&o.setValue(r,a.value,n)}};ui.seqWithValue=function(r,e){const t=[];for(let n=0,i=r.length;n!==i;++n){const s=r[n];s.id in e&&t.push(s)}return t};function dh(r,e,t){const n=r.createShader(e);return r.shaderSource(n,t),r.compileShader(n),n}let O_=0;function F_(r,e){const t=r.split(`
`),n=[],i=Math.max(e-6,0),s=Math.min(e+6,t.length);for(let o=i;o<s;o++)n.push(o+1+": "+t[o]);return n.join(`
`)}function U_(r){switch(r){case An:return["Linear","( value )"];case dt:return["sRGB","( value )"];default:return console.warn("THREE.WebGLProgram: Unsupported encoding:",r),["Linear","( value )"]}}function fh(r,e,t){const n=r.getShaderParameter(e,r.COMPILE_STATUS),i=r.getShaderInfoLog(e).trim();if(n&&i==="")return"";const s=parseInt(/ERROR: 0:(\d+)/.exec(i)[1]);return t.toUpperCase()+`

`+i+`

`+F_(r.getShaderSource(e),s)}function B_(r,e){const t=U_(e);return"vec4 "+r+"( vec4 value ) { return LinearTo"+t[0]+t[1]+"; }"}function H_(r,e){let t;switch(e){case Fu:t="Linear";break;case Uu:t="Reinhard";break;case Bu:t="OptimizedCineon";break;case Hu:t="ACESFilmic";break;case zu:t="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",e),t="Linear"}return"vec3 "+r+"( vec3 color ) { return "+t+"ToneMapping( color ); }"}function z_(r){return[r.extensionDerivatives||!!r.envMapCubeUVHeight||r.bumpMap||r.tangentSpaceNormalMap||r.clearcoatNormalMap||r.flatShading||r.shaderID==="physical"?"#extension GL_OES_standard_derivatives : enable":"",(r.extensionFragDepth||r.logarithmicDepthBuffer)&&r.rendererExtensionFragDepth?"#extension GL_EXT_frag_depth : enable":"",r.extensionDrawBuffers&&r.rendererExtensionDrawBuffers?"#extension GL_EXT_draw_buffers : require":"",(r.extensionShaderTextureLOD||r.envMap||r.transmission)&&r.rendererExtensionShaderTextureLod?"#extension GL_EXT_shader_texture_lod : enable":""].filter(ds).join(`
`)}function k_(r){const e=[];for(const t in r){const n=r[t];n!==!1&&e.push("#define "+t+" "+n)}return e.join(`
`)}function G_(r,e){const t={},n=r.getProgramParameter(e,r.ACTIVE_ATTRIBUTES);for(let i=0;i<n;i++){const s=r.getActiveAttrib(e,i),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),t[o]={type:s.type,location:r.getAttribLocation(e,o),locationSize:a}}return t}function ds(r){return r!==""}function ph(r,e){return r.replace(/NUM_DIR_LIGHTS/g,e.numDirLights).replace(/NUM_SPOT_LIGHTS/g,e.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g,e.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,e.numPointLights).replace(/NUM_HEMI_LIGHTS/g,e.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,e.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g,e.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,e.numPointLightShadows)}function mh(r,e){return r.replace(/NUM_CLIPPING_PLANES/g,e.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,e.numClippingPlanes-e.numClipIntersection)}const V_=/^[ \t]*#include +<([\w\d./]+)>/gm;function zl(r){return r.replace(V_,W_)}function W_(r,e){const t=Ke[e];if(t===void 0)throw new Error("Can not resolve #include <"+e+">");return zl(t)}const X_=/#pragma unroll_loop[\s]+?for \( int i \= (\d+)\; i < (\d+)\; i \+\+ \) \{([\s\S]+?)(?=\})\}/g,q_=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function gh(r){return r.replace(q_,Id).replace(X_,Y_)}function Y_(r,e,t,n){return console.warn("WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead."),Id(r,e,t,n)}function Id(r,e,t,n){let i="";for(let s=parseInt(e);s<parseInt(t);s++)i+=n.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return i}function vh(r){let e="precision "+r.precision+` float;
precision `+r.precision+" int;";return r.precision==="highp"?e+=`
#define HIGH_PRECISION`:r.precision==="mediump"?e+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(e+=`
#define LOW_PRECISION`),e}function Z_(r){let e="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===ql?e="SHADOWMAP_TYPE_PCF":r.shadowMapType===pu?e="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Ar&&(e="SHADOWMAP_TYPE_VSM"),e}function K_(r){let e="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case di:case fi:e="ENVMAP_TYPE_CUBE";break;case qr:e="ENVMAP_TYPE_CUBE_UV";break}return e}function $_(r){let e="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case fi:e="ENVMAP_MODE_REFRACTION";break}return e}function j_(r){let e="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case Ds:e="ENVMAP_BLENDING_MULTIPLY";break;case Nu:e="ENVMAP_BLENDING_MIX";break;case Ou:e="ENVMAP_BLENDING_ADD";break}return e}function J_(r){const e=r.envMapCubeUVHeight;if(e===null)return null;const t=Math.log2(e/32+1)+3,n=1/e;return{texelWidth:1/(3*Math.max(Math.pow(2,t),7*16)),texelHeight:n,maxMip:t}}function Q_(r,e,t,n){const i=r.getContext(),s=t.defines;let o=t.vertexShader,a=t.fragmentShader;const c=Z_(t),h=K_(t),u=$_(t),f=j_(t),d=J_(t),p=t.isWebGL2?"":z_(t),v=k_(s),m=i.createProgram();let g,E,b=t.glslVersion?"#version "+t.glslVersion+`
`:"";t.isRawShaderMaterial?(g=[v].filter(ds).join(`
`),g.length>0&&(g+=`
`),E=[p,v].filter(ds).join(`
`),E.length>0&&(E+=`
`)):(g=[vh(t),"#define SHADER_NAME "+t.shaderName,v,t.instancing?"#define USE_INSTANCING":"",t.instancingColor?"#define USE_INSTANCING_COLOR":"",t.supportsVertexTextures?"#define VERTEX_TEXTURES":"","#define MAX_BONES "+t.maxBones,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+u:"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.displacementMap&&t.supportsVertexTextures?"#define USE_DISPLACEMENTMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.flatShading?"#define FLAT_SHADED":"",t.skinning?"#define USE_SKINNING":"",t.useVertexTexture?"#define BONE_TEXTURE":"",t.morphTargets?"#define USE_MORPHTARGETS":"",t.morphNormals&&t.flatShading===!1?"#define USE_MORPHNORMALS":"",t.morphColors&&t.isWebGL2?"#define USE_MORPHCOLORS":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE":"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_TEXTURE_STRIDE "+t.morphTextureStride:"",t.morphTargetsCount>0&&t.isWebGL2?"#define MORPHTARGETS_COUNT "+t.morphTargetsCount:"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.sizeAttenuation?"#define USE_SIZEATTENUATION":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#if ( defined( USE_MORPHTARGETS ) && ! defined( MORPHTARGETS_TEXTURE ) )","	attribute vec3 morphTarget0;","	attribute vec3 morphTarget1;","	attribute vec3 morphTarget2;","	attribute vec3 morphTarget3;","	#ifdef USE_MORPHNORMALS","		attribute vec3 morphNormal0;","		attribute vec3 morphNormal1;","		attribute vec3 morphNormal2;","		attribute vec3 morphNormal3;","	#else","		attribute vec3 morphTarget4;","		attribute vec3 morphTarget5;","		attribute vec3 morphTarget6;","		attribute vec3 morphTarget7;","	#endif","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ds).join(`
`),E=[p,vh(t),"#define SHADER_NAME "+t.shaderName,v,t.useFog&&t.fog?"#define USE_FOG":"",t.useFog&&t.fogExp2?"#define FOG_EXP2":"",t.map?"#define USE_MAP":"",t.matcap?"#define USE_MATCAP":"",t.envMap?"#define USE_ENVMAP":"",t.envMap?"#define "+h:"",t.envMap?"#define "+u:"",t.envMap?"#define "+f:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",t.lightMap?"#define USE_LIGHTMAP":"",t.aoMap?"#define USE_AOMAP":"",t.emissiveMap?"#define USE_EMISSIVEMAP":"",t.bumpMap?"#define USE_BUMPMAP":"",t.normalMap?"#define USE_NORMALMAP":"",t.normalMap&&t.objectSpaceNormalMap?"#define OBJECTSPACE_NORMALMAP":"",t.normalMap&&t.tangentSpaceNormalMap?"#define TANGENTSPACE_NORMALMAP":"",t.clearcoat?"#define USE_CLEARCOAT":"",t.clearcoatMap?"#define USE_CLEARCOATMAP":"",t.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",t.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",t.specularMap?"#define USE_SPECULARMAP":"",t.specularIntensityMap?"#define USE_SPECULARINTENSITYMAP":"",t.specularColorMap?"#define USE_SPECULARCOLORMAP":"",t.roughnessMap?"#define USE_ROUGHNESSMAP":"",t.metalnessMap?"#define USE_METALNESSMAP":"",t.alphaMap?"#define USE_ALPHAMAP":"",t.alphaTest?"#define USE_ALPHATEST":"",t.sheen?"#define USE_SHEEN":"",t.sheenColorMap?"#define USE_SHEENCOLORMAP":"",t.sheenRoughnessMap?"#define USE_SHEENROUGHNESSMAP":"",t.transmission?"#define USE_TRANSMISSION":"",t.transmissionMap?"#define USE_TRANSMISSIONMAP":"",t.thicknessMap?"#define USE_THICKNESSMAP":"",t.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",t.vertexTangents?"#define USE_TANGENT":"",t.vertexColors||t.instancingColor?"#define USE_COLOR":"",t.vertexAlphas?"#define USE_COLOR_ALPHA":"",t.vertexUvs?"#define USE_UV":"",t.uvsVertexOnly?"#define UVS_VERTEX_ONLY":"",t.gradientMap?"#define USE_GRADIENTMAP":"",t.flatShading?"#define FLAT_SHADED":"",t.doubleSided?"#define DOUBLE_SIDED":"",t.flipSided?"#define FLIP_SIDED":"",t.shadowMapEnabled?"#define USE_SHADOWMAP":"",t.shadowMapEnabled?"#define "+c:"",t.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",t.physicallyCorrectLights?"#define PHYSICALLY_CORRECT_LIGHTS":"",t.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"",t.logarithmicDepthBuffer&&t.rendererExtensionFragDepth?"#define USE_LOGDEPTHBUF_EXT":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",t.toneMapping!==bn?"#define TONE_MAPPING":"",t.toneMapping!==bn?Ke.tonemapping_pars_fragment:"",t.toneMapping!==bn?H_("toneMapping",t.toneMapping):"",t.dithering?"#define DITHERING":"",t.opaque?"#define OPAQUE":"",Ke.encodings_pars_fragment,B_("linearToOutputTexel",t.outputEncoding),t.depthPacking?"#define DEPTH_PACKING "+t.depthPacking:"",`
`].filter(ds).join(`
`)),o=zl(o),o=ph(o,t),o=mh(o,t),a=zl(a),a=ph(a,t),a=mh(a,t),o=gh(o),a=gh(a),t.isWebGL2&&t.isRawShaderMaterial!==!0&&(b=`#version 300 es
`,g=["precision mediump sampler2DArray;","#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,E=["#define varying in",t.glslVersion===Ul?"":"layout(location = 0) out highp vec4 pc_fragColor;",t.glslVersion===Ul?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+E);const C=b+g+o,S=b+E+a,A=dh(i,i.VERTEX_SHADER,C),O=dh(i,i.FRAGMENT_SHADER,S);if(i.attachShader(m,A),i.attachShader(m,O),t.index0AttributeName!==void 0?i.bindAttribLocation(m,0,t.index0AttributeName):t.morphTargets===!0&&i.bindAttribLocation(m,0,"position"),i.linkProgram(m),r.debug.checkShaderErrors){const Q=i.getProgramInfoLog(m).trim(),Z=i.getShaderInfoLog(A).trim(),L=i.getShaderInfoLog(O).trim();let B=!0,Y=!0;if(i.getProgramParameter(m,i.LINK_STATUS)===!1){B=!1;const z=fh(i,A,"vertex"),N=fh(i,O,"fragment");console.error("THREE.WebGLProgram: Shader Error "+i.getError()+" - VALIDATE_STATUS "+i.getProgramParameter(m,i.VALIDATE_STATUS)+`

Program Info Log: `+Q+`
`+z+`
`+N)}else Q!==""?console.warn("THREE.WebGLProgram: Program Info Log:",Q):(Z===""||L==="")&&(Y=!1);Y&&(this.diagnostics={runnable:B,programLog:Q,vertexShader:{log:Z,prefix:g},fragmentShader:{log:L,prefix:E}})}i.deleteShader(A),i.deleteShader(O);let V;this.getUniforms=function(){return V===void 0&&(V=new ui(i,m)),V};let U;return this.getAttributes=function(){return U===void 0&&(U=G_(i,m)),U},this.destroy=function(){n.releaseStatesOfProgram(this),i.deleteProgram(m),this.program=void 0},this.name=t.shaderName,this.id=O_++,this.cacheKey=e,this.usedTimes=1,this.program=m,this.vertexShader=A,this.fragmentShader=O,this}let e0=0;class t0{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(e){const t=e.vertexShader,n=e.fragmentShader,i=this._getShaderStage(t),s=this._getShaderStage(n),o=this._getShaderCacheForMaterial(e);return o.has(i)===!1&&(o.add(i),i.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(e){const t=this.materialCache.get(e);for(const n of t)n.usedTimes--,n.usedTimes===0&&this.shaderCache.delete(n.code);return this.materialCache.delete(e),this}getVertexShaderID(e){return this._getShaderStage(e.vertexShader).id}getFragmentShaderID(e){return this._getShaderStage(e.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(e){const t=this.materialCache;return t.has(e)===!1&&t.set(e,new Set),t.get(e)}_getShaderStage(e){const t=this.shaderCache;if(t.has(e)===!1){const n=new n0(e);t.set(e,n)}return t.get(e)}}class n0{constructor(e){this.id=e0++,this.code=e,this.usedTimes=0}}function i0(r,e,t,n,i,s,o){const a=new na,c=new t0,h=[],u=i.isWebGL2,f=i.logarithmicDepthBuffer,d=i.floatVertexTextures,p=i.maxVertexUniforms,v=i.vertexTextures;let m=i.precision;const g={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function E(L){const Y=L.skeleton.bones;if(d)return 1024;{const N=Math.floor((p-20)/4),R=Math.min(N,Y.length);return R<Y.length?(console.warn("THREE.WebGLRenderer: Skeleton has "+Y.length+" bones. This GPU supports "+R+"."),0):R}}function b(L,B,Y,z,N){const R=z.fog,P=N.geometry,F=L.isMeshStandardMaterial?z.environment:null,X=(L.isMeshStandardMaterial?t:e).get(L.envMap||F),J=!!X&&X.mapping===qr?X.image.height:null,te=g[L.type],oe=N.isSkinnedMesh?E(N):0;L.precision!==null&&(m=i.getMaxPrecision(L.precision),m!==L.precision&&console.warn("THREE.WebGLProgram.getParameters:",L.precision,"not supported, using",m,"instead."));const pe=P.morphAttributes.position||P.morphAttributes.normal||P.morphAttributes.color,Le=pe!==void 0?pe.length:0;let Oe=0;P.morphAttributes.position!==void 0&&(Oe=1),P.morphAttributes.normal!==void 0&&(Oe=2),P.morphAttributes.color!==void 0&&(Oe=3);let K,Qe,ze,Ve;if(te){const ue=vn[te];K=ue.vertexShader,Qe=ue.fragmentShader}else K=L.vertexShader,Qe=L.fragmentShader,c.update(L),ze=c.getVertexShaderID(L),Ve=c.getFragmentShaderID(L);const de=r.getRenderTarget(),qe=L.alphaTest>0,re=L.clearcoat>0;return{isWebGL2:u,shaderID:te,shaderName:L.type,vertexShader:K,fragmentShader:Qe,defines:L.defines,customVertexShaderID:ze,customFragmentShaderID:Ve,isRawShaderMaterial:L.isRawShaderMaterial===!0,glslVersion:L.glslVersion,precision:m,instancing:N.isInstancedMesh===!0,instancingColor:N.isInstancedMesh===!0&&N.instanceColor!==null,supportsVertexTextures:v,outputEncoding:de===null?r.outputEncoding:de.isXRRenderTarget===!0?de.texture.encoding:An,map:!!L.map,matcap:!!L.matcap,envMap:!!X,envMapMode:X&&X.mapping,envMapCubeUVHeight:J,lightMap:!!L.lightMap,aoMap:!!L.aoMap,emissiveMap:!!L.emissiveMap,bumpMap:!!L.bumpMap,normalMap:!!L.normalMap,objectSpaceNormalMap:L.normalMapType===ld,tangentSpaceNormalMap:L.normalMapType===rr,decodeVideoTexture:!!L.map&&L.map.isVideoTexture===!0&&L.map.encoding===dt,clearcoat:re,clearcoatMap:re&&!!L.clearcoatMap,clearcoatRoughnessMap:re&&!!L.clearcoatRoughnessMap,clearcoatNormalMap:re&&!!L.clearcoatNormalMap,displacementMap:!!L.displacementMap,roughnessMap:!!L.roughnessMap,metalnessMap:!!L.metalnessMap,specularMap:!!L.specularMap,specularIntensityMap:!!L.specularIntensityMap,specularColorMap:!!L.specularColorMap,opaque:L.transparent===!1&&L.blending===ki,alphaMap:!!L.alphaMap,alphaTest:qe,gradientMap:!!L.gradientMap,sheen:L.sheen>0,sheenColorMap:!!L.sheenColorMap,sheenRoughnessMap:!!L.sheenRoughnessMap,transmission:L.transmission>0,transmissionMap:!!L.transmissionMap,thicknessMap:!!L.thicknessMap,combine:L.combine,vertexTangents:!!L.normalMap&&!!P.attributes.tangent,vertexColors:L.vertexColors,vertexAlphas:L.vertexColors===!0&&!!P.attributes.color&&P.attributes.color.itemSize===4,vertexUvs:!!L.map||!!L.bumpMap||!!L.normalMap||!!L.specularMap||!!L.alphaMap||!!L.emissiveMap||!!L.roughnessMap||!!L.metalnessMap||!!L.clearcoatMap||!!L.clearcoatRoughnessMap||!!L.clearcoatNormalMap||!!L.displacementMap||!!L.transmissionMap||!!L.thicknessMap||!!L.specularIntensityMap||!!L.specularColorMap||!!L.sheenColorMap||!!L.sheenRoughnessMap,uvsVertexOnly:!(!!L.map||!!L.bumpMap||!!L.normalMap||!!L.specularMap||!!L.alphaMap||!!L.emissiveMap||!!L.roughnessMap||!!L.metalnessMap||!!L.clearcoatNormalMap||L.transmission>0||!!L.transmissionMap||!!L.thicknessMap||!!L.specularIntensityMap||!!L.specularColorMap||L.sheen>0||!!L.sheenColorMap||!!L.sheenRoughnessMap)&&!!L.displacementMap,fog:!!R,useFog:L.fog,fogExp2:R&&R.isFogExp2,flatShading:!!L.flatShading,sizeAttenuation:L.sizeAttenuation,logarithmicDepthBuffer:f,skinning:N.isSkinnedMesh===!0&&oe>0,maxBones:oe,useVertexTexture:d,morphTargets:P.morphAttributes.position!==void 0,morphNormals:P.morphAttributes.normal!==void 0,morphColors:P.morphAttributes.color!==void 0,morphTargetsCount:Le,morphTextureStride:Oe,numDirLights:B.directional.length,numPointLights:B.point.length,numSpotLights:B.spot.length,numRectAreaLights:B.rectArea.length,numHemiLights:B.hemi.length,numDirLightShadows:B.directionalShadowMap.length,numPointLightShadows:B.pointShadowMap.length,numSpotLightShadows:B.spotShadowMap.length,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:L.dithering,shadowMapEnabled:r.shadowMap.enabled&&Y.length>0,shadowMapType:r.shadowMap.type,toneMapping:L.toneMapped?r.toneMapping:bn,physicallyCorrectLights:r.physicallyCorrectLights,premultipliedAlpha:L.premultipliedAlpha,doubleSided:L.side===Zi,flipSided:L.side===jt,depthPacking:L.depthPacking!==void 0?L.depthPacking:!1,index0AttributeName:L.index0AttributeName,extensionDerivatives:L.extensions&&L.extensions.derivatives,extensionFragDepth:L.extensions&&L.extensions.fragDepth,extensionDrawBuffers:L.extensions&&L.extensions.drawBuffers,extensionShaderTextureLOD:L.extensions&&L.extensions.shaderTextureLOD,rendererExtensionFragDepth:u||n.has("EXT_frag_depth"),rendererExtensionDrawBuffers:u||n.has("WEBGL_draw_buffers"),rendererExtensionShaderTextureLod:u||n.has("EXT_shader_texture_lod"),customProgramCacheKey:L.customProgramCacheKey()}}function C(L){const B=[];if(L.shaderID?B.push(L.shaderID):(B.push(L.customVertexShaderID),B.push(L.customFragmentShaderID)),L.defines!==void 0)for(const Y in L.defines)B.push(Y),B.push(L.defines[Y]);return L.isRawShaderMaterial===!1&&(S(B,L),A(B,L),B.push(r.outputEncoding)),B.push(L.customProgramCacheKey),B.join()}function S(L,B){L.push(B.precision),L.push(B.outputEncoding),L.push(B.envMapMode),L.push(B.envMapCubeUVHeight),L.push(B.combine),L.push(B.vertexUvs),L.push(B.fogExp2),L.push(B.sizeAttenuation),L.push(B.maxBones),L.push(B.morphTargetsCount),L.push(B.morphAttributeCount),L.push(B.numDirLights),L.push(B.numPointLights),L.push(B.numSpotLights),L.push(B.numHemiLights),L.push(B.numRectAreaLights),L.push(B.numDirLightShadows),L.push(B.numPointLightShadows),L.push(B.numSpotLightShadows),L.push(B.shadowMapType),L.push(B.toneMapping),L.push(B.numClippingPlanes),L.push(B.numClipIntersection)}function A(L,B){a.disableAll(),B.isWebGL2&&a.enable(0),B.supportsVertexTextures&&a.enable(1),B.instancing&&a.enable(2),B.instancingColor&&a.enable(3),B.map&&a.enable(4),B.matcap&&a.enable(5),B.envMap&&a.enable(6),B.lightMap&&a.enable(7),B.aoMap&&a.enable(8),B.emissiveMap&&a.enable(9),B.bumpMap&&a.enable(10),B.normalMap&&a.enable(11),B.objectSpaceNormalMap&&a.enable(12),B.tangentSpaceNormalMap&&a.enable(13),B.clearcoat&&a.enable(14),B.clearcoatMap&&a.enable(15),B.clearcoatRoughnessMap&&a.enable(16),B.clearcoatNormalMap&&a.enable(17),B.displacementMap&&a.enable(18),B.specularMap&&a.enable(19),B.roughnessMap&&a.enable(20),B.metalnessMap&&a.enable(21),B.gradientMap&&a.enable(22),B.alphaMap&&a.enable(23),B.alphaTest&&a.enable(24),B.vertexColors&&a.enable(25),B.vertexAlphas&&a.enable(26),B.vertexUvs&&a.enable(27),B.vertexTangents&&a.enable(28),B.uvsVertexOnly&&a.enable(29),B.fog&&a.enable(30),L.push(a.mask),a.disableAll(),B.useFog&&a.enable(0),B.flatShading&&a.enable(1),B.logarithmicDepthBuffer&&a.enable(2),B.skinning&&a.enable(3),B.useVertexTexture&&a.enable(4),B.morphTargets&&a.enable(5),B.morphNormals&&a.enable(6),B.morphColors&&a.enable(7),B.premultipliedAlpha&&a.enable(8),B.shadowMapEnabled&&a.enable(9),B.physicallyCorrectLights&&a.enable(10),B.doubleSided&&a.enable(11),B.flipSided&&a.enable(12),B.depthPacking&&a.enable(13),B.dithering&&a.enable(14),B.specularIntensityMap&&a.enable(15),B.specularColorMap&&a.enable(16),B.transmission&&a.enable(17),B.transmissionMap&&a.enable(18),B.thicknessMap&&a.enable(19),B.sheen&&a.enable(20),B.sheenColorMap&&a.enable(21),B.sheenRoughnessMap&&a.enable(22),B.decodeVideoTexture&&a.enable(23),B.opaque&&a.enable(24),L.push(a.mask)}function O(L){const B=g[L.type];let Y;if(B){const z=vn[B];Y=bd.clone(z.uniforms)}else Y=L.uniforms;return Y}function V(L,B){let Y;for(let z=0,N=h.length;z<N;z++){const R=h[z];if(R.cacheKey===B){Y=R,++Y.usedTimes;break}}return Y===void 0&&(Y=new Q_(r,B,L,s),h.push(Y)),Y}function U(L){if(--L.usedTimes===0){const B=h.indexOf(L);h[B]=h[h.length-1],h.pop(),L.destroy()}}function Q(L){c.remove(L)}function Z(){c.dispose()}return{getParameters:b,getProgramCacheKey:C,getUniforms:O,acquireProgram:V,releaseProgram:U,releaseShaderCache:Q,programs:h,dispose:Z}}function r0(){let r=new WeakMap;function e(s){let o=r.get(s);return o===void 0&&(o={},r.set(s,o)),o}function t(s){r.delete(s)}function n(s,o,a){r.get(s)[o]=a}function i(){r=new WeakMap}return{get:e,remove:t,update:n,dispose:i}}function s0(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.material.id!==e.material.id?r.material.id-e.material.id:r.z!==e.z?r.z-e.z:r.id-e.id}function _h(r,e){return r.groupOrder!==e.groupOrder?r.groupOrder-e.groupOrder:r.renderOrder!==e.renderOrder?r.renderOrder-e.renderOrder:r.z!==e.z?e.z-r.z:r.id-e.id}function yh(){const r=[];let e=0;const t=[],n=[],i=[];function s(){e=0,t.length=0,n.length=0,i.length=0}function o(f,d,p,v,m,g){let E=r[e];return E===void 0?(E={id:f.id,object:f,geometry:d,material:p,groupOrder:v,renderOrder:f.renderOrder,z:m,group:g},r[e]=E):(E.id=f.id,E.object=f,E.geometry=d,E.material=p,E.groupOrder=v,E.renderOrder=f.renderOrder,E.z=m,E.group=g),e++,E}function a(f,d,p,v,m,g){const E=o(f,d,p,v,m,g);p.transmission>0?n.push(E):p.transparent===!0?i.push(E):t.push(E)}function c(f,d,p,v,m,g){const E=o(f,d,p,v,m,g);p.transmission>0?n.unshift(E):p.transparent===!0?i.unshift(E):t.unshift(E)}function h(f,d){t.length>1&&t.sort(f||s0),n.length>1&&n.sort(d||_h),i.length>1&&i.sort(d||_h)}function u(){for(let f=e,d=r.length;f<d;f++){const p=r[f];if(p.id===null)break;p.id=null,p.object=null,p.geometry=null,p.material=null,p.group=null}}return{opaque:t,transmissive:n,transparent:i,init:s,push:a,unshift:c,finish:u,sort:h}}function o0(){let r=new WeakMap;function e(n,i){let s;return r.has(n)===!1?(s=new yh,r.set(n,[s])):i>=r.get(n).length?(s=new yh,r.get(n).push(s)):s=r.get(n)[i],s}function t(){r=new WeakMap}return{get:e,dispose:t}}function a0(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={direction:new D,color:new Me};break;case"SpotLight":t={position:new D,direction:new D,color:new Me,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":t={position:new D,color:new Me,distance:0,decay:0};break;case"HemisphereLight":t={direction:new D,skyColor:new Me,groundColor:new Me};break;case"RectAreaLight":t={color:new Me,position:new D,halfWidth:new D,halfHeight:new D};break}return r[e.id]=t,t}}}function l0(){const r={};return{get:function(e){if(r[e.id]!==void 0)return r[e.id];let t;switch(e.type){case"DirectionalLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le};break;case"SpotLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le};break;case"PointLight":t={shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new le,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[e.id]=t,t}}}let c0=0;function h0(r,e){return(e.castShadow?1:0)-(r.castShadow?1:0)}function u0(r,e){const t=new a0,n=l0(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotShadow:[],spotShadowMap:[],spotShadowMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[]};for(let u=0;u<9;u++)i.probe.push(new D);const s=new D,o=new Ae,a=new Ae;function c(u,f){let d=0,p=0,v=0;for(let Q=0;Q<9;Q++)i.probe[Q].set(0,0,0);let m=0,g=0,E=0,b=0,C=0,S=0,A=0,O=0;u.sort(h0);const V=f!==!0?Math.PI:1;for(let Q=0,Z=u.length;Q<Z;Q++){const L=u[Q],B=L.color,Y=L.intensity,z=L.distance,N=L.shadow&&L.shadow.map?L.shadow.map.texture:null;if(L.isAmbientLight)d+=B.r*Y*V,p+=B.g*Y*V,v+=B.b*Y*V;else if(L.isLightProbe)for(let R=0;R<9;R++)i.probe[R].addScaledVector(L.sh.coefficients[R],Y);else if(L.isDirectionalLight){const R=t.get(L);if(R.color.copy(L.color).multiplyScalar(L.intensity*V),L.castShadow){const P=L.shadow,F=n.get(L);F.shadowBias=P.bias,F.shadowNormalBias=P.normalBias,F.shadowRadius=P.radius,F.shadowMapSize=P.mapSize,i.directionalShadow[m]=F,i.directionalShadowMap[m]=N,i.directionalShadowMatrix[m]=L.shadow.matrix,S++}i.directional[m]=R,m++}else if(L.isSpotLight){const R=t.get(L);if(R.position.setFromMatrixPosition(L.matrixWorld),R.color.copy(B).multiplyScalar(Y*V),R.distance=z,R.coneCos=Math.cos(L.angle),R.penumbraCos=Math.cos(L.angle*(1-L.penumbra)),R.decay=L.decay,L.castShadow){const P=L.shadow,F=n.get(L);F.shadowBias=P.bias,F.shadowNormalBias=P.normalBias,F.shadowRadius=P.radius,F.shadowMapSize=P.mapSize,i.spotShadow[E]=F,i.spotShadowMap[E]=N,i.spotShadowMatrix[E]=L.shadow.matrix,O++}i.spot[E]=R,E++}else if(L.isRectAreaLight){const R=t.get(L);R.color.copy(B).multiplyScalar(Y),R.halfWidth.set(L.width*.5,0,0),R.halfHeight.set(0,L.height*.5,0),i.rectArea[b]=R,b++}else if(L.isPointLight){const R=t.get(L);if(R.color.copy(L.color).multiplyScalar(L.intensity*V),R.distance=L.distance,R.decay=L.decay,L.castShadow){const P=L.shadow,F=n.get(L);F.shadowBias=P.bias,F.shadowNormalBias=P.normalBias,F.shadowRadius=P.radius,F.shadowMapSize=P.mapSize,F.shadowCameraNear=P.camera.near,F.shadowCameraFar=P.camera.far,i.pointShadow[g]=F,i.pointShadowMap[g]=N,i.pointShadowMatrix[g]=L.shadow.matrix,A++}i.point[g]=R,g++}else if(L.isHemisphereLight){const R=t.get(L);R.skyColor.copy(L.color).multiplyScalar(Y*V),R.groundColor.copy(L.groundColor).multiplyScalar(Y*V),i.hemi[C]=R,C++}}b>0&&(e.isWebGL2||r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=_e.LTC_FLOAT_1,i.rectAreaLTC2=_e.LTC_FLOAT_2):r.has("OES_texture_half_float_linear")===!0?(i.rectAreaLTC1=_e.LTC_HALF_1,i.rectAreaLTC2=_e.LTC_HALF_2):console.error("THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.")),i.ambient[0]=d,i.ambient[1]=p,i.ambient[2]=v;const U=i.hash;(U.directionalLength!==m||U.pointLength!==g||U.spotLength!==E||U.rectAreaLength!==b||U.hemiLength!==C||U.numDirectionalShadows!==S||U.numPointShadows!==A||U.numSpotShadows!==O)&&(i.directional.length=m,i.spot.length=E,i.rectArea.length=b,i.point.length=g,i.hemi.length=C,i.directionalShadow.length=S,i.directionalShadowMap.length=S,i.pointShadow.length=A,i.pointShadowMap.length=A,i.spotShadow.length=O,i.spotShadowMap.length=O,i.directionalShadowMatrix.length=S,i.pointShadowMatrix.length=A,i.spotShadowMatrix.length=O,U.directionalLength=m,U.pointLength=g,U.spotLength=E,U.rectAreaLength=b,U.hemiLength=C,U.numDirectionalShadows=S,U.numPointShadows=A,U.numSpotShadows=O,i.version=c0++)}function h(u,f){let d=0,p=0,v=0,m=0,g=0;const E=f.matrixWorldInverse;for(let b=0,C=u.length;b<C;b++){const S=u[b];if(S.isDirectionalLight){const A=i.directional[d];A.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),A.direction.sub(s),A.direction.transformDirection(E),d++}else if(S.isSpotLight){const A=i.spot[v];A.position.setFromMatrixPosition(S.matrixWorld),A.position.applyMatrix4(E),A.direction.setFromMatrixPosition(S.matrixWorld),s.setFromMatrixPosition(S.target.matrixWorld),A.direction.sub(s),A.direction.transformDirection(E),v++}else if(S.isRectAreaLight){const A=i.rectArea[m];A.position.setFromMatrixPosition(S.matrixWorld),A.position.applyMatrix4(E),a.identity(),o.copy(S.matrixWorld),o.premultiply(E),a.extractRotation(o),A.halfWidth.set(S.width*.5,0,0),A.halfHeight.set(0,S.height*.5,0),A.halfWidth.applyMatrix4(a),A.halfHeight.applyMatrix4(a),m++}else if(S.isPointLight){const A=i.point[p];A.position.setFromMatrixPosition(S.matrixWorld),A.position.applyMatrix4(E),p++}else if(S.isHemisphereLight){const A=i.hemi[g];A.direction.setFromMatrixPosition(S.matrixWorld),A.direction.transformDirection(E),A.direction.normalize(),g++}}}return{setup:c,setupView:h,state:i}}function xh(r,e){const t=new u0(r,e),n=[],i=[];function s(){n.length=0,i.length=0}function o(f){n.push(f)}function a(f){i.push(f)}function c(f){t.setup(n,f)}function h(f){t.setupView(n,f)}return{init:s,state:{lightsArray:n,shadowsArray:i,lights:t},setupLights:c,setupLightsView:h,pushLight:o,pushShadow:a}}function d0(r,e){let t=new WeakMap;function n(s,o=0){let a;return t.has(s)===!1?(a=new xh(r,e),t.set(s,[a])):o>=t.get(s).length?(a=new xh(r,e),t.get(s).push(a)):a=t.get(s)[o],a}function i(){t=new WeakMap}return{get:n,dispose:i}}class la extends Mt{constructor(e){super(),this.type="MeshDepthMaterial",this.depthPacking=od,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.depthPacking=e.depthPacking,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this}}la.prototype.isMeshDepthMaterial=!0;class ca extends Mt{constructor(e){super(),this.type="MeshDistanceMaterial",this.referencePosition=new D,this.nearDistance=1,this.farDistance=1e3,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.fog=!1,this.setValues(e)}copy(e){return super.copy(e),this.referencePosition.copy(e.referencePosition),this.nearDistance=e.nearDistance,this.farDistance=e.farDistance,this.map=e.map,this.alphaMap=e.alphaMap,this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this}}ca.prototype.isMeshDistanceMaterial=!0;const f0=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,p0=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function Dd(r,e,t){let n=new Fs;const i=new le,s=new le,o=new st,a=new la({depthPacking:ad}),c=new ca,h={},u=t.maxTextureSize,f={0:jt,1:Yi,2:Zi},d=new ln({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new le},radius:{value:4}},vertexShader:f0,fragmentShader:p0}),p=d.clone();p.defines.HORIZONTAL_PASS=1;const v=new Ue;v.setAttribute("position",new tt(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const m=new St(v,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ql,this.render=function(S,A,O){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||S.length===0)return;const V=r.getRenderTarget(),U=r.getActiveCubeFace(),Q=r.getActiveMipmapLevel(),Z=r.state;Z.setBlending(Xn),Z.buffers.color.setClear(1,1,1,1),Z.buffers.depth.setTest(!0),Z.setScissorTest(!1);for(let L=0,B=S.length;L<B;L++){const Y=S[L],z=Y.shadow;if(z===void 0){console.warn("THREE.WebGLShadowMap:",Y,"has no shadow.");continue}if(z.autoUpdate===!1&&z.needsUpdate===!1)continue;i.copy(z.mapSize);const N=z.getFrameExtents();if(i.multiply(N),s.copy(z.mapSize),(i.x>u||i.y>u)&&(i.x>u&&(s.x=Math.floor(u/N.x),i.x=s.x*N.x,z.mapSize.x=s.x),i.y>u&&(s.y=Math.floor(u/N.y),i.y=s.y*N.y,z.mapSize.y=s.y)),z.map===null&&!z.isPointLightShadow&&this.type===Ar&&(z.map=new kt(i.x,i.y),z.map.texture.name=Y.name+".shadowMap",z.mapPass=new kt(i.x,i.y),z.camera.updateProjectionMatrix()),z.map===null){const P={minFilter:Tt,magFilter:Tt,format:$t};z.map=new kt(i.x,i.y,P),z.map.texture.name=Y.name+".shadowMap",z.camera.updateProjectionMatrix()}r.setRenderTarget(z.map),r.clear();const R=z.getViewportCount();for(let P=0;P<R;P++){const F=z.getViewport(P);o.set(s.x*F.x,s.y*F.y,s.x*F.z,s.y*F.w),Z.viewport(o),z.updateMatrices(Y,P),n=z.getFrustum(),C(A,O,z.camera,Y,this.type)}!z.isPointLightShadow&&this.type===Ar&&E(z,O),z.needsUpdate=!1}g.needsUpdate=!1,r.setRenderTarget(V,U,Q)};function E(S,A){const O=e.update(m);d.defines.VSM_SAMPLES!==S.blurSamples&&(d.defines.VSM_SAMPLES=S.blurSamples,p.defines.VSM_SAMPLES=S.blurSamples,d.needsUpdate=!0,p.needsUpdate=!0),d.uniforms.shadow_pass.value=S.map.texture,d.uniforms.resolution.value=S.mapSize,d.uniforms.radius.value=S.radius,r.setRenderTarget(S.mapPass),r.clear(),r.renderBufferDirect(A,null,O,d,m,null),p.uniforms.shadow_pass.value=S.mapPass.texture,p.uniforms.resolution.value=S.mapSize,p.uniforms.radius.value=S.radius,r.setRenderTarget(S.map),r.clear(),r.renderBufferDirect(A,null,O,p,m,null)}function b(S,A,O,V,U,Q){let Z=null;const L=O.isPointLight===!0?S.customDistanceMaterial:S.customDepthMaterial;if(L!==void 0?Z=L:Z=O.isPointLight===!0?c:a,r.localClippingEnabled&&A.clipShadows===!0&&A.clippingPlanes.length!==0||A.displacementMap&&A.displacementScale!==0||A.alphaMap&&A.alphaTest>0){const B=Z.uuid,Y=A.uuid;let z=h[B];z===void 0&&(z={},h[B]=z);let N=z[Y];N===void 0&&(N=Z.clone(),z[Y]=N),Z=N}return Z.visible=A.visible,Z.wireframe=A.wireframe,Q===Ar?Z.side=A.shadowSide!==null?A.shadowSide:A.side:Z.side=A.shadowSide!==null?A.shadowSide:f[A.side],Z.alphaMap=A.alphaMap,Z.alphaTest=A.alphaTest,Z.clipShadows=A.clipShadows,Z.clippingPlanes=A.clippingPlanes,Z.clipIntersection=A.clipIntersection,Z.displacementMap=A.displacementMap,Z.displacementScale=A.displacementScale,Z.displacementBias=A.displacementBias,Z.wireframeLinewidth=A.wireframeLinewidth,Z.linewidth=A.linewidth,O.isPointLight===!0&&Z.isMeshDistanceMaterial===!0&&(Z.referencePosition.setFromMatrixPosition(O.matrixWorld),Z.nearDistance=V,Z.farDistance=U),Z}function C(S,A,O,V,U){if(S.visible===!1)return;if(S.layers.test(A.layers)&&(S.isMesh||S.isLine||S.isPoints)&&(S.castShadow||S.receiveShadow&&U===Ar)&&(!S.frustumCulled||n.intersectsObject(S))){S.modelViewMatrix.multiplyMatrices(O.matrixWorldInverse,S.matrixWorld);const L=e.update(S),B=S.material;if(Array.isArray(B)){const Y=L.groups;for(let z=0,N=Y.length;z<N;z++){const R=Y[z],P=B[R.materialIndex];if(P&&P.visible){const F=b(S,P,V,O.near,O.far,U);r.renderBufferDirect(O,null,L,F,S,R)}}}else if(B.visible){const Y=b(S,B,V,O.near,O.far,U);r.renderBufferDirect(O,null,L,Y,S,null)}}const Z=S.children;for(let L=0,B=Z.length;L<B;L++)C(Z[L],A,O,V,U)}}function m0(r,e,t){const n=t.isWebGL2;function i(){let q=!1;const ge=new st;let me=null;const Re=new st(0,0,0,0);return{setMask:function(Te){me!==Te&&!q&&(r.colorMask(Te,Te,Te,Te),me=Te)},setLocked:function(Te){q=Te},setClear:function(Te,Pe,fe,Ge,lt){lt===!0&&(Te*=Ge,Pe*=Ge,fe*=Ge),ge.set(Te,Pe,fe,Ge),Re.equals(ge)===!1&&(r.clearColor(Te,Pe,fe,Ge),Re.copy(ge))},reset:function(){q=!1,me=null,Re.set(-1,0,0,0)}}}function s(){let q=!1,ge=null,me=null,Re=null;return{setTest:function(Te){Te?Oe(r.DEPTH_TEST):K(r.DEPTH_TEST)},setMask:function(Te){ge!==Te&&!q&&(r.depthMask(Te),ge=Te)},setFunc:function(Te){if(me!==Te){if(Te)switch(Te){case Au:r.depthFunc(r.NEVER);break;case Ru:r.depthFunc(r.ALWAYS);break;case Cu:r.depthFunc(r.LESS);break;case Xo:r.depthFunc(r.LEQUAL);break;case Lu:r.depthFunc(r.EQUAL);break;case Pu:r.depthFunc(r.GEQUAL);break;case Iu:r.depthFunc(r.GREATER);break;case Du:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}else r.depthFunc(r.LEQUAL);me=Te}},setLocked:function(Te){q=Te},setClear:function(Te){Re!==Te&&(r.clearDepth(Te),Re=Te)},reset:function(){q=!1,ge=null,me=null,Re=null}}}function o(){let q=!1,ge=null,me=null,Re=null,Te=null,Pe=null,fe=null,Ge=null,lt=null;return{setTest:function($e){q||($e?Oe(r.STENCIL_TEST):K(r.STENCIL_TEST))},setMask:function($e){ge!==$e&&!q&&(r.stencilMask($e),ge=$e)},setFunc:function($e,Yt,Wt){(me!==$e||Re!==Yt||Te!==Wt)&&(r.stencilFunc($e,Yt,Wt),me=$e,Re=Yt,Te=Wt)},setOp:function($e,Yt,Wt){(Pe!==$e||fe!==Yt||Ge!==Wt)&&(r.stencilOp($e,Yt,Wt),Pe=$e,fe=Yt,Ge=Wt)},setLocked:function($e){q=$e},setClear:function($e){lt!==$e&&(r.clearStencil($e),lt=$e)},reset:function(){q=!1,ge=null,me=null,Re=null,Te=null,Pe=null,fe=null,Ge=null,lt=null}}}const a=new i,c=new s,h=new o;let u={},f={},d=new WeakMap,p=[],v=null,m=!1,g=null,E=null,b=null,C=null,S=null,A=null,O=null,V=!1,U=null,Q=null,Z=null,L=null,B=null;const Y=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let z=!1,N=0;const R=r.getParameter(r.VERSION);R.indexOf("WebGL")!==-1?(N=parseFloat(/^WebGL (\d)/.exec(R)[1]),z=N>=1):R.indexOf("OpenGL ES")!==-1&&(N=parseFloat(/^OpenGL ES (\d)/.exec(R)[1]),z=N>=2);let P=null,F={};const X=r.getParameter(r.SCISSOR_BOX),J=r.getParameter(r.VIEWPORT),te=new st().fromArray(X),oe=new st().fromArray(J);function pe(q,ge,me){const Re=new Uint8Array(4),Te=r.createTexture();r.bindTexture(q,Te),r.texParameteri(q,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(q,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let Pe=0;Pe<me;Pe++)r.texImage2D(ge+Pe,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,Re);return Te}const Le={};Le[r.TEXTURE_2D]=pe(r.TEXTURE_2D,r.TEXTURE_2D,1),Le[r.TEXTURE_CUBE_MAP]=pe(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),a.setClear(0,0,0,1),c.setClear(1),h.setClear(0),Oe(r.DEPTH_TEST),c.setFunc(Xo),ue(!1),be(hl),Oe(r.CULL_FACE),re(Xn);function Oe(q){u[q]!==!0&&(r.enable(q),u[q]=!0)}function K(q){u[q]!==!1&&(r.disable(q),u[q]=!1)}function Qe(q,ge){return f[q]!==ge?(r.bindFramebuffer(q,ge),f[q]=ge,n&&(q===r.DRAW_FRAMEBUFFER&&(f[r.FRAMEBUFFER]=ge),q===r.FRAMEBUFFER&&(f[r.DRAW_FRAMEBUFFER]=ge)),!0):!1}function ze(q,ge){let me=p,Re=!1;if(q)if(me=d.get(ge),me===void 0&&(me=[],d.set(ge,me)),q.isWebGLMultipleRenderTargets){const Te=q.texture;if(me.length!==Te.length||me[0]!==r.COLOR_ATTACHMENT0){for(let Pe=0,fe=Te.length;Pe<fe;Pe++)me[Pe]=r.COLOR_ATTACHMENT0+Pe;me.length=Te.length,Re=!0}}else me[0]!==r.COLOR_ATTACHMENT0&&(me[0]=r.COLOR_ATTACHMENT0,Re=!0);else me[0]!==r.BACK&&(me[0]=r.BACK,Re=!0);Re&&(t.isWebGL2?r.drawBuffers(me):e.get("WEBGL_draw_buffers").drawBuffersWEBGL(me))}function Ve(q){return v!==q?(r.useProgram(q),v=q,!0):!1}const de={[Oi]:r.FUNC_ADD,[gu]:r.FUNC_SUBTRACT,[vu]:r.FUNC_REVERSE_SUBTRACT};if(n)de[pl]=r.MIN,de[ml]=r.MAX;else{const q=e.get("EXT_blend_minmax");q!==null&&(de[pl]=q.MIN_EXT,de[ml]=q.MAX_EXT)}const qe={[_u]:r.ZERO,[yu]:r.ONE,[xu]:r.SRC_COLOR,[Zl]:r.SRC_ALPHA,[Su]:r.SRC_ALPHA_SATURATE,[bu]:r.DST_COLOR,[Eu]:r.DST_ALPHA,[Mu]:r.ONE_MINUS_SRC_COLOR,[Kl]:r.ONE_MINUS_SRC_ALPHA,[Tu]:r.ONE_MINUS_DST_COLOR,[wu]:r.ONE_MINUS_DST_ALPHA};function re(q,ge,me,Re,Te,Pe,fe,Ge){if(q===Xn){m===!0&&(K(r.BLEND),m=!1);return}if(m===!1&&(Oe(r.BLEND),m=!0),q!==mu){if(q!==g||Ge!==V){if((E!==Oi||S!==Oi)&&(r.blendEquation(r.FUNC_ADD),E=Oi,S=Oi),Ge)switch(q){case ki:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case ul:r.blendFunc(r.ONE,r.ONE);break;case dl:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case fl:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",q);break}else switch(q){case ki:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case ul:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case dl:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case fl:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",q);break}b=null,C=null,A=null,O=null,g=q,V=Ge}return}Te=Te||ge,Pe=Pe||me,fe=fe||Re,(ge!==E||Te!==S)&&(r.blendEquationSeparate(de[ge],de[Te]),E=ge,S=Te),(me!==b||Re!==C||Pe!==A||fe!==O)&&(r.blendFuncSeparate(qe[me],qe[Re],qe[Pe],qe[fe]),b=me,C=Re,A=Pe,O=fe),g=q,V=null}function se(q,ge){q.side===Zi?K(r.CULL_FACE):Oe(r.CULL_FACE);let me=q.side===jt;ge&&(me=!me),ue(me),q.blending===ki&&q.transparent===!1?re(Xn):re(q.blending,q.blendEquation,q.blendSrc,q.blendDst,q.blendEquationAlpha,q.blendSrcAlpha,q.blendDstAlpha,q.premultipliedAlpha),c.setFunc(q.depthFunc),c.setTest(q.depthTest),c.setMask(q.depthWrite),a.setMask(q.colorWrite);const Re=q.stencilWrite;h.setTest(Re),Re&&(h.setMask(q.stencilWriteMask),h.setFunc(q.stencilFunc,q.stencilRef,q.stencilFuncMask),h.setOp(q.stencilFail,q.stencilZFail,q.stencilZPass)),We(q.polygonOffset,q.polygonOffsetFactor,q.polygonOffsetUnits),q.alphaToCoverage===!0?Oe(r.SAMPLE_ALPHA_TO_COVERAGE):K(r.SAMPLE_ALPHA_TO_COVERAGE)}function ue(q){U!==q&&(q?r.frontFace(r.CW):r.frontFace(r.CCW),U=q)}function be(q){q!==du?(Oe(r.CULL_FACE),q!==Q&&(q===hl?r.cullFace(r.BACK):q===fu?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):K(r.CULL_FACE),Q=q}function ye(q){q!==Z&&(z&&r.lineWidth(q),Z=q)}function We(q,ge,me){q?(Oe(r.POLYGON_OFFSET_FILL),(L!==ge||B!==me)&&(r.polygonOffset(ge,me),L=ge,B=me)):K(r.POLYGON_OFFSET_FILL)}function Fe(q){q?Oe(r.SCISSOR_TEST):K(r.SCISSOR_TEST)}function Ne(q){q===void 0&&(q=r.TEXTURE0+Y-1),P!==q&&(r.activeTexture(q),P=q)}function ht(q,ge){P===null&&Ne();let me=F[P];me===void 0&&(me={type:void 0,texture:void 0},F[P]=me),(me.type!==q||me.texture!==ge)&&(r.bindTexture(q,ge||Le[q]),me.type=q,me.texture=ge)}function rt(){const q=F[P];q!==void 0&&q.type!==void 0&&(r.bindTexture(q.type,null),q.type=void 0,q.texture=void 0)}function G(){try{r.compressedTexImage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function I(){try{r.texSubImage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function ne(){try{r.texSubImage3D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function ce(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function xe(){try{r.texStorage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function we(){try{r.texStorage3D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function Ie(){try{r.texImage2D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function ie(){try{r.texImage3D.apply(r,arguments)}catch(q){console.error("THREE.WebGLState:",q)}}function Ce(q){te.equals(q)===!1&&(r.scissor(q.x,q.y,q.z,q.w),te.copy(q))}function Xe(q){oe.equals(q)===!1&&(r.viewport(q.x,q.y,q.z,q.w),oe.copy(q))}function Ee(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),n===!0&&(r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null)),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),u={},P=null,F={},f={},d=new WeakMap,p=[],v=null,m=!1,g=null,E=null,b=null,C=null,S=null,A=null,O=null,V=!1,U=null,Q=null,Z=null,L=null,B=null,te.set(0,0,r.canvas.width,r.canvas.height),oe.set(0,0,r.canvas.width,r.canvas.height),a.reset(),c.reset(),h.reset()}return{buffers:{color:a,depth:c,stencil:h},enable:Oe,disable:K,bindFramebuffer:Qe,drawBuffers:ze,useProgram:Ve,setBlending:re,setMaterial:se,setFlipSided:ue,setCullFace:be,setLineWidth:ye,setPolygonOffset:We,setScissorTest:Fe,activeTexture:Ne,bindTexture:ht,unbindTexture:rt,compressedTexImage2D:G,texImage2D:Ie,texImage3D:ie,texStorage2D:xe,texStorage3D:we,texSubImage2D:I,texSubImage3D:ne,compressedTexSubImage2D:ce,scissor:Ce,viewport:Xe,reset:Ee}}function g0(r,e,t,n,i,s,o){const a=i.isWebGL2,c=i.maxTextures,h=i.maxCubemapSize,u=i.maxTextureSize,f=i.maxSamples,d=e.has("WEBGL_multisampled_render_to_texture")?e.get("WEBGL_multisampled_render_to_texture"):null,p=/OculusBrowser/g.test(navigator.userAgent),v=new WeakMap;let m;const g=new WeakMap;let E=!1;try{E=typeof OffscreenCanvas!="undefined"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function b(G,I){return E?new OffscreenCanvas(G,I):Ts("canvas")}function C(G,I,ne,ce){let xe=1;if((G.width>ce||G.height>ce)&&(xe=ce/Math.max(G.width,G.height)),xe<1||I===!0)if(typeof HTMLImageElement!="undefined"&&G instanceof HTMLImageElement||typeof HTMLCanvasElement!="undefined"&&G instanceof HTMLCanvasElement||typeof ImageBitmap!="undefined"&&G instanceof ImageBitmap){const we=I?Ko:Math.floor,Ie=we(xe*G.width),ie=we(xe*G.height);m===void 0&&(m=b(Ie,ie));const Ce=ne?b(Ie,ie):m;return Ce.width=Ie,Ce.height=ie,Ce.getContext("2d").drawImage(G,0,0,Ie,ie),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+G.width+"x"+G.height+") to ("+Ie+"x"+ie+")."),Ce}else return"data"in G&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+G.width+"x"+G.height+")."),G;return G}function S(G){return Bl(G.width)&&Bl(G.height)}function A(G){return a?!1:G.wrapS!==zt||G.wrapT!==zt||G.minFilter!==Tt&&G.minFilter!==_t}function O(G,I){return G.generateMipmaps&&I&&G.minFilter!==Tt&&G.minFilter!==_t}function V(G){r.generateMipmap(G)}function U(G,I,ne,ce,xe=!1){if(a===!1)return I;if(G!==null){if(r[G]!==void 0)return r[G];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+G+"'")}let we=I;return I===r.RED&&(ne===r.FLOAT&&(we=r.R32F),ne===r.HALF_FLOAT&&(we=r.R16F),ne===r.UNSIGNED_BYTE&&(we=r.R8)),I===r.RG&&(ne===r.FLOAT&&(we=r.RG32F),ne===r.HALF_FLOAT&&(we=r.RG16F),ne===r.UNSIGNED_BYTE&&(we=r.RG8)),I===r.RGBA&&(ne===r.FLOAT&&(we=r.RGBA32F),ne===r.HALF_FLOAT&&(we=r.RGBA16F),ne===r.UNSIGNED_BYTE&&(we=ce===dt&&xe===!1?r.SRGB8_ALPHA8:r.RGBA8),ne===r.UNSIGNED_SHORT_4_4_4_4&&(we=r.RGBA4),ne===r.UNSIGNED_SHORT_5_5_5_1&&(we=r.RGB5_A1)),(we===r.R16F||we===r.R32F||we===r.RG16F||we===r.RG32F||we===r.RGBA16F||we===r.RGBA32F)&&e.get("EXT_color_buffer_float"),we}function Q(G,I,ne){return O(G,ne)===!0||G.isFramebufferTexture&&G.minFilter!==Tt&&G.minFilter!==_t?Math.log2(Math.max(I.width,I.height))+1:G.mipmaps!==void 0&&G.mipmaps.length>0?G.mipmaps.length:G.isCompressedTexture&&Array.isArray(G.image)?I.mipmaps.length:1}function Z(G){return G===Tt||G===qo||G===Yo?r.NEAREST:r.LINEAR}function L(G){const I=G.target;I.removeEventListener("dispose",L),Y(I),I.isVideoTexture&&v.delete(I)}function B(G){const I=G.target;I.removeEventListener("dispose",B),N(I)}function Y(G){const I=n.get(G);if(I.__webglInit===void 0)return;const ne=G.source,ce=g.get(ne);if(ce){const xe=ce[I.__cacheKey];xe.usedTimes--,xe.usedTimes===0&&z(G),Object.keys(ce).length===0&&g.delete(ne)}n.remove(G)}function z(G){const I=n.get(G);r.deleteTexture(I.__webglTexture);const ne=G.source,ce=g.get(ne);delete ce[I.__cacheKey],o.memory.textures--}function N(G){const I=G.texture,ne=n.get(G),ce=n.get(I);if(ce.__webglTexture!==void 0&&(r.deleteTexture(ce.__webglTexture),o.memory.textures--),G.depthTexture&&G.depthTexture.dispose(),G.isWebGLCubeRenderTarget)for(let xe=0;xe<6;xe++)r.deleteFramebuffer(ne.__webglFramebuffer[xe]),ne.__webglDepthbuffer&&r.deleteRenderbuffer(ne.__webglDepthbuffer[xe]);else r.deleteFramebuffer(ne.__webglFramebuffer),ne.__webglDepthbuffer&&r.deleteRenderbuffer(ne.__webglDepthbuffer),ne.__webglMultisampledFramebuffer&&r.deleteFramebuffer(ne.__webglMultisampledFramebuffer),ne.__webglColorRenderbuffer&&r.deleteRenderbuffer(ne.__webglColorRenderbuffer),ne.__webglDepthRenderbuffer&&r.deleteRenderbuffer(ne.__webglDepthRenderbuffer);if(G.isWebGLMultipleRenderTargets)for(let xe=0,we=I.length;xe<we;xe++){const Ie=n.get(I[xe]);Ie.__webglTexture&&(r.deleteTexture(Ie.__webglTexture),o.memory.textures--),n.remove(I[xe])}n.remove(I),n.remove(G)}let R=0;function P(){R=0}function F(){const G=R;return G>=c&&console.warn("THREE.WebGLTextures: Trying to use "+G+" texture units while this GPU supports only "+c),R+=1,G}function X(G){const I=[];return I.push(G.wrapS),I.push(G.wrapT),I.push(G.magFilter),I.push(G.minFilter),I.push(G.anisotropy),I.push(G.internalFormat),I.push(G.format),I.push(G.type),I.push(G.generateMipmaps),I.push(G.premultiplyAlpha),I.push(G.flipY),I.push(G.unpackAlignment),I.push(G.encoding),I.join()}function J(G,I){const ne=n.get(G);if(G.isVideoTexture&&ht(G),G.isRenderTargetTexture===!1&&G.version>0&&ne.__version!==G.version){const ce=G.image;if(ce===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(ce.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{ze(ne,G,I);return}}t.activeTexture(r.TEXTURE0+I),t.bindTexture(r.TEXTURE_2D,ne.__webglTexture)}function te(G,I){const ne=n.get(G);if(G.version>0&&ne.__version!==G.version){ze(ne,G,I);return}t.activeTexture(r.TEXTURE0+I),t.bindTexture(r.TEXTURE_2D_ARRAY,ne.__webglTexture)}function oe(G,I){const ne=n.get(G);if(G.version>0&&ne.__version!==G.version){ze(ne,G,I);return}t.activeTexture(r.TEXTURE0+I),t.bindTexture(r.TEXTURE_3D,ne.__webglTexture)}function pe(G,I){const ne=n.get(G);if(G.version>0&&ne.__version!==G.version){Ve(ne,G,I);return}t.activeTexture(r.TEXTURE0+I),t.bindTexture(r.TEXTURE_CUBE_MAP,ne.__webglTexture)}const Le={[ys]:r.REPEAT,[zt]:r.CLAMP_TO_EDGE,[xs]:r.MIRRORED_REPEAT},Oe={[Tt]:r.NEAREST,[qo]:r.NEAREST_MIPMAP_NEAREST,[Yo]:r.NEAREST_MIPMAP_LINEAR,[_t]:r.LINEAR,[$l]:r.LINEAR_MIPMAP_NEAREST,[ir]:r.LINEAR_MIPMAP_LINEAR};function K(G,I,ne){if(ne?(r.texParameteri(G,r.TEXTURE_WRAP_S,Le[I.wrapS]),r.texParameteri(G,r.TEXTURE_WRAP_T,Le[I.wrapT]),(G===r.TEXTURE_3D||G===r.TEXTURE_2D_ARRAY)&&r.texParameteri(G,r.TEXTURE_WRAP_R,Le[I.wrapR]),r.texParameteri(G,r.TEXTURE_MAG_FILTER,Oe[I.magFilter]),r.texParameteri(G,r.TEXTURE_MIN_FILTER,Oe[I.minFilter])):(r.texParameteri(G,r.TEXTURE_WRAP_S,r.CLAMP_TO_EDGE),r.texParameteri(G,r.TEXTURE_WRAP_T,r.CLAMP_TO_EDGE),(G===r.TEXTURE_3D||G===r.TEXTURE_2D_ARRAY)&&r.texParameteri(G,r.TEXTURE_WRAP_R,r.CLAMP_TO_EDGE),(I.wrapS!==zt||I.wrapT!==zt)&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping."),r.texParameteri(G,r.TEXTURE_MAG_FILTER,Z(I.magFilter)),r.texParameteri(G,r.TEXTURE_MIN_FILTER,Z(I.minFilter)),I.minFilter!==Tt&&I.minFilter!==_t&&console.warn("THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.")),e.has("EXT_texture_filter_anisotropic")===!0){const ce=e.get("EXT_texture_filter_anisotropic");if(I.type===Wn&&e.has("OES_texture_float_linear")===!1||a===!1&&I.type===Gi&&e.has("OES_texture_half_float_linear")===!1)return;(I.anisotropy>1||n.get(I).__currentAnisotropy)&&(r.texParameterf(G,ce.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(I.anisotropy,i.getMaxAnisotropy())),n.get(I).__currentAnisotropy=I.anisotropy)}}function Qe(G,I){let ne=!1;G.__webglInit===void 0&&(G.__webglInit=!0,I.addEventListener("dispose",L));const ce=I.source;let xe=g.get(ce);xe===void 0&&(xe={},g.set(ce,xe));const we=X(I);if(we!==G.__cacheKey){xe[we]===void 0&&(xe[we]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,ne=!0),xe[we].usedTimes++;const Ie=xe[G.__cacheKey];Ie!==void 0&&(xe[G.__cacheKey].usedTimes--,Ie.usedTimes===0&&z(I)),G.__cacheKey=we,G.__webglTexture=xe[we].texture}return ne}function ze(G,I,ne){let ce=r.TEXTURE_2D;I.isDataArrayTexture&&(ce=r.TEXTURE_2D_ARRAY),I.isData3DTexture&&(ce=r.TEXTURE_3D);const xe=Qe(G,I),we=I.source;if(t.activeTexture(r.TEXTURE0+ne),t.bindTexture(ce,G.__webglTexture),we.version!==we.__currentVersion||xe===!0){r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,I.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,I.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const Ie=A(I)&&S(I.image)===!1;let ie=C(I.image,Ie,!1,u);ie=rt(I,ie);const Ce=S(ie)||a,Xe=s.convert(I.format,I.encoding);let Ee=s.convert(I.type),q=U(I.internalFormat,Xe,Ee,I.encoding,I.isVideoTexture);K(ce,I,Ce);let ge;const me=I.mipmaps,Re=a&&I.isVideoTexture!==!0,Te=G.__version===void 0,Pe=Q(I,ie,Ce);if(I.isDepthTexture)q=r.DEPTH_COMPONENT,a?I.type===Wn?q=r.DEPTH_COMPONENT32F:I.type===fs?q=r.DEPTH_COMPONENT24:I.type===Vi?q=r.DEPTH24_STENCIL8:q=r.DEPTH_COMPONENT16:I.type===Wn&&console.error("WebGLRenderer: Floating point depth texture requires WebGL2."),I.format===hi&&q===r.DEPTH_COMPONENT&&I.type!==Pr&&I.type!==fs&&(console.warn("THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture."),I.type=Pr,Ee=s.convert(I.type)),I.format===Ki&&q===r.DEPTH_COMPONENT&&(q=r.DEPTH_STENCIL,I.type!==Vi&&(console.warn("THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture."),I.type=Vi,Ee=s.convert(I.type))),Re&&Te?t.texStorage2D(r.TEXTURE_2D,1,q,ie.width,ie.height):t.texImage2D(r.TEXTURE_2D,0,q,ie.width,ie.height,0,Xe,Ee,null);else if(I.isDataTexture)if(me.length>0&&Ce){Re&&Te&&t.texStorage2D(r.TEXTURE_2D,Pe,q,me[0].width,me[0].height);for(let fe=0,Ge=me.length;fe<Ge;fe++)ge=me[fe],Re?t.texSubImage2D(r.TEXTURE_2D,fe,0,0,ge.width,ge.height,Xe,Ee,ge.data):t.texImage2D(r.TEXTURE_2D,fe,q,ge.width,ge.height,0,Xe,Ee,ge.data);I.generateMipmaps=!1}else Re?(Te&&t.texStorage2D(r.TEXTURE_2D,Pe,q,ie.width,ie.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,ie.width,ie.height,Xe,Ee,ie.data)):t.texImage2D(r.TEXTURE_2D,0,q,ie.width,ie.height,0,Xe,Ee,ie.data);else if(I.isCompressedTexture){Re&&Te&&t.texStorage2D(r.TEXTURE_2D,Pe,q,me[0].width,me[0].height);for(let fe=0,Ge=me.length;fe<Ge;fe++)ge=me[fe],I.format!==$t?Xe!==null?Re?t.compressedTexSubImage2D(r.TEXTURE_2D,fe,0,0,ge.width,ge.height,Xe,ge.data):t.compressedTexImage2D(r.TEXTURE_2D,fe,q,ge.width,ge.height,0,ge.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Re?t.texSubImage2D(r.TEXTURE_2D,fe,0,0,ge.width,ge.height,Xe,Ee,ge.data):t.texImage2D(r.TEXTURE_2D,fe,q,ge.width,ge.height,0,Xe,Ee,ge.data)}else if(I.isDataArrayTexture)Re?(Te&&t.texStorage3D(r.TEXTURE_2D_ARRAY,Pe,q,ie.width,ie.height,ie.depth),t.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,ie.width,ie.height,ie.depth,Xe,Ee,ie.data)):t.texImage3D(r.TEXTURE_2D_ARRAY,0,q,ie.width,ie.height,ie.depth,0,Xe,Ee,ie.data);else if(I.isData3DTexture)Re?(Te&&t.texStorage3D(r.TEXTURE_3D,Pe,q,ie.width,ie.height,ie.depth),t.texSubImage3D(r.TEXTURE_3D,0,0,0,0,ie.width,ie.height,ie.depth,Xe,Ee,ie.data)):t.texImage3D(r.TEXTURE_3D,0,q,ie.width,ie.height,ie.depth,0,Xe,Ee,ie.data);else if(I.isFramebufferTexture)Re&&Te?t.texStorage2D(r.TEXTURE_2D,Pe,q,ie.width,ie.height):t.texImage2D(r.TEXTURE_2D,0,q,ie.width,ie.height,0,Xe,Ee,null);else if(me.length>0&&Ce){Re&&Te&&t.texStorage2D(r.TEXTURE_2D,Pe,q,me[0].width,me[0].height);for(let fe=0,Ge=me.length;fe<Ge;fe++)ge=me[fe],Re?t.texSubImage2D(r.TEXTURE_2D,fe,0,0,Xe,Ee,ge):t.texImage2D(r.TEXTURE_2D,fe,q,Xe,Ee,ge);I.generateMipmaps=!1}else Re?(Te&&t.texStorage2D(r.TEXTURE_2D,Pe,q,ie.width,ie.height),t.texSubImage2D(r.TEXTURE_2D,0,0,0,Xe,Ee,ie)):t.texImage2D(r.TEXTURE_2D,0,q,Xe,Ee,ie);O(I,Ce)&&V(ce),we.__currentVersion=we.version,I.onUpdate&&I.onUpdate(I)}G.__version=I.version}function Ve(G,I,ne){if(I.image.length!==6)return;const ce=Qe(G,I),xe=I.source;if(t.activeTexture(r.TEXTURE0+ne),t.bindTexture(r.TEXTURE_CUBE_MAP,G.__webglTexture),xe.version!==xe.__currentVersion||ce===!0){r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,I.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,I.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,I.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,r.NONE);const we=I.isCompressedTexture||I.image[0].isCompressedTexture,Ie=I.image[0]&&I.image[0].isDataTexture,ie=[];for(let fe=0;fe<6;fe++)!we&&!Ie?ie[fe]=C(I.image[fe],!1,!0,h):ie[fe]=Ie?I.image[fe].image:I.image[fe],ie[fe]=rt(I,ie[fe]);const Ce=ie[0],Xe=S(Ce)||a,Ee=s.convert(I.format,I.encoding),q=s.convert(I.type),ge=U(I.internalFormat,Ee,q,I.encoding),me=a&&I.isVideoTexture!==!0,Re=G.__version===void 0;let Te=Q(I,Ce,Xe);K(r.TEXTURE_CUBE_MAP,I,Xe);let Pe;if(we){me&&Re&&t.texStorage2D(r.TEXTURE_CUBE_MAP,Te,ge,Ce.width,Ce.height);for(let fe=0;fe<6;fe++){Pe=ie[fe].mipmaps;for(let Ge=0;Ge<Pe.length;Ge++){const lt=Pe[Ge];I.format!==$t?Ee!==null?me?t.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge,0,0,lt.width,lt.height,Ee,lt.data):t.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge,ge,lt.width,lt.height,0,lt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge,0,0,lt.width,lt.height,Ee,q,lt.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge,ge,lt.width,lt.height,0,Ee,q,lt.data)}}}else{Pe=I.mipmaps,me&&Re&&(Pe.length>0&&Te++,t.texStorage2D(r.TEXTURE_CUBE_MAP,Te,ge,ie[0].width,ie[0].height));for(let fe=0;fe<6;fe++)if(Ie){me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,0,0,ie[fe].width,ie[fe].height,Ee,q,ie[fe].data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,ge,ie[fe].width,ie[fe].height,0,Ee,q,ie[fe].data);for(let Ge=0;Ge<Pe.length;Ge++){const $e=Pe[Ge].image[fe].image;me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge+1,0,0,$e.width,$e.height,Ee,q,$e.data):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge+1,ge,$e.width,$e.height,0,Ee,q,$e.data)}}else{me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,0,0,Ee,q,ie[fe]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,0,ge,Ee,q,ie[fe]);for(let Ge=0;Ge<Pe.length;Ge++){const lt=Pe[Ge];me?t.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge+1,0,0,Ee,q,lt.image[fe]):t.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+fe,Ge+1,ge,Ee,q,lt.image[fe])}}}O(I,Xe)&&V(r.TEXTURE_CUBE_MAP),xe.__currentVersion=xe.version,I.onUpdate&&I.onUpdate(I)}G.__version=I.version}function de(G,I,ne,ce,xe){const we=s.convert(ne.format,ne.encoding),Ie=s.convert(ne.type),ie=U(ne.internalFormat,we,Ie,ne.encoding);n.get(I).__hasExternalTextures||(xe===r.TEXTURE_3D||xe===r.TEXTURE_2D_ARRAY?t.texImage3D(xe,0,ie,I.width,I.height,I.depth,0,we,Ie,null):t.texImage2D(xe,0,ie,I.width,I.height,0,we,Ie,null)),t.bindFramebuffer(r.FRAMEBUFFER,G),Ne(I)?d.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,ce,xe,n.get(ne).__webglTexture,0,Fe(I)):r.framebufferTexture2D(r.FRAMEBUFFER,ce,xe,n.get(ne).__webglTexture,0),t.bindFramebuffer(r.FRAMEBUFFER,null)}function qe(G,I,ne){if(r.bindRenderbuffer(r.RENDERBUFFER,G),I.depthBuffer&&!I.stencilBuffer){let ce=r.DEPTH_COMPONENT16;if(ne||Ne(I)){const xe=I.depthTexture;xe&&xe.isDepthTexture&&(xe.type===Wn?ce=r.DEPTH_COMPONENT32F:xe.type===fs&&(ce=r.DEPTH_COMPONENT24));const we=Fe(I);Ne(I)?d.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,we,ce,I.width,I.height):r.renderbufferStorageMultisample(r.RENDERBUFFER,we,ce,I.width,I.height)}else r.renderbufferStorage(r.RENDERBUFFER,ce,I.width,I.height);r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.RENDERBUFFER,G)}else if(I.depthBuffer&&I.stencilBuffer){const ce=Fe(I);ne&&Ne(I)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ce,r.DEPTH24_STENCIL8,I.width,I.height):Ne(I)?d.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ce,r.DEPTH24_STENCIL8,I.width,I.height):r.renderbufferStorage(r.RENDERBUFFER,r.DEPTH_STENCIL,I.width,I.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.RENDERBUFFER,G)}else{const ce=I.isWebGLMultipleRenderTargets===!0?I.texture[0]:I.texture,xe=s.convert(ce.format,ce.encoding),we=s.convert(ce.type),Ie=U(ce.internalFormat,xe,we,ce.encoding),ie=Fe(I);ne&&Ne(I)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,ie,Ie,I.width,I.height):Ne(I)?d.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,ie,Ie,I.width,I.height):r.renderbufferStorage(r.RENDERBUFFER,Ie,I.width,I.height)}r.bindRenderbuffer(r.RENDERBUFFER,null)}function re(G,I){if(I&&I.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(t.bindFramebuffer(r.FRAMEBUFFER,G),!(I.depthTexture&&I.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!n.get(I.depthTexture).__webglTexture||I.depthTexture.image.width!==I.width||I.depthTexture.image.height!==I.height)&&(I.depthTexture.image.width=I.width,I.depthTexture.image.height=I.height,I.depthTexture.needsUpdate=!0),J(I.depthTexture,0);const ce=n.get(I.depthTexture).__webglTexture,xe=Fe(I);if(I.depthTexture.format===hi)Ne(I)?d.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ce,0,xe):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,ce,0);else if(I.depthTexture.format===Ki)Ne(I)?d.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ce,0,xe):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,ce,0);else throw new Error("Unknown depthTexture format")}function se(G){const I=n.get(G),ne=G.isWebGLCubeRenderTarget===!0;if(G.depthTexture&&!I.__autoAllocateDepthBuffer){if(ne)throw new Error("target.depthTexture not supported in Cube render targets");re(I.__webglFramebuffer,G)}else if(ne){I.__webglDepthbuffer=[];for(let ce=0;ce<6;ce++)t.bindFramebuffer(r.FRAMEBUFFER,I.__webglFramebuffer[ce]),I.__webglDepthbuffer[ce]=r.createRenderbuffer(),qe(I.__webglDepthbuffer[ce],G,!1)}else t.bindFramebuffer(r.FRAMEBUFFER,I.__webglFramebuffer),I.__webglDepthbuffer=r.createRenderbuffer(),qe(I.__webglDepthbuffer,G,!1);t.bindFramebuffer(r.FRAMEBUFFER,null)}function ue(G,I,ne){const ce=n.get(G);I!==void 0&&de(ce.__webglFramebuffer,G,G.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D),ne!==void 0&&se(G)}function be(G){const I=G.texture,ne=n.get(G),ce=n.get(I);G.addEventListener("dispose",B),G.isWebGLMultipleRenderTargets!==!0&&(ce.__webglTexture===void 0&&(ce.__webglTexture=r.createTexture()),ce.__version=I.version,o.memory.textures++);const xe=G.isWebGLCubeRenderTarget===!0,we=G.isWebGLMultipleRenderTargets===!0,Ie=S(G)||a;if(xe){ne.__webglFramebuffer=[];for(let ie=0;ie<6;ie++)ne.__webglFramebuffer[ie]=r.createFramebuffer()}else if(ne.__webglFramebuffer=r.createFramebuffer(),we)if(i.drawBuffers){const ie=G.texture;for(let Ce=0,Xe=ie.length;Ce<Xe;Ce++){const Ee=n.get(ie[Ce]);Ee.__webglTexture===void 0&&(Ee.__webglTexture=r.createTexture(),o.memory.textures++)}}else console.warn("THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.");else if(a&&G.samples>0&&Ne(G)===!1){ne.__webglMultisampledFramebuffer=r.createFramebuffer(),ne.__webglColorRenderbuffer=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,ne.__webglColorRenderbuffer);const ie=s.convert(I.format,I.encoding),Ce=s.convert(I.type),Xe=U(I.internalFormat,ie,Ce,I.encoding),Ee=Fe(G);r.renderbufferStorageMultisample(r.RENDERBUFFER,Ee,Xe,G.width,G.height),t.bindFramebuffer(r.FRAMEBUFFER,ne.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,ne.__webglColorRenderbuffer),r.bindRenderbuffer(r.RENDERBUFFER,null),G.depthBuffer&&(ne.__webglDepthRenderbuffer=r.createRenderbuffer(),qe(ne.__webglDepthRenderbuffer,G,!0)),t.bindFramebuffer(r.FRAMEBUFFER,null)}if(xe){t.bindTexture(r.TEXTURE_CUBE_MAP,ce.__webglTexture),K(r.TEXTURE_CUBE_MAP,I,Ie);for(let ie=0;ie<6;ie++)de(ne.__webglFramebuffer[ie],G,I,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+ie);O(I,Ie)&&V(r.TEXTURE_CUBE_MAP),t.unbindTexture()}else if(we){const ie=G.texture;for(let Ce=0,Xe=ie.length;Ce<Xe;Ce++){const Ee=ie[Ce],q=n.get(Ee);t.bindTexture(r.TEXTURE_2D,q.__webglTexture),K(r.TEXTURE_2D,Ee,Ie),de(ne.__webglFramebuffer,G,Ee,r.COLOR_ATTACHMENT0+Ce,r.TEXTURE_2D),O(Ee,Ie)&&V(r.TEXTURE_2D)}t.unbindTexture()}else{let ie=r.TEXTURE_2D;(G.isWebGL3DRenderTarget||G.isWebGLArrayRenderTarget)&&(a?ie=G.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY:console.error("THREE.WebGLTextures: THREE.Data3DTexture and THREE.DataArrayTexture only supported with WebGL2.")),t.bindTexture(ie,ce.__webglTexture),K(ie,I,Ie),de(ne.__webglFramebuffer,G,I,r.COLOR_ATTACHMENT0,ie),O(I,Ie)&&V(ie),t.unbindTexture()}G.depthBuffer&&se(G)}function ye(G){const I=S(G)||a,ne=G.isWebGLMultipleRenderTargets===!0?G.texture:[G.texture];for(let ce=0,xe=ne.length;ce<xe;ce++){const we=ne[ce];if(O(we,I)){const Ie=G.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,ie=n.get(we).__webglTexture;t.bindTexture(Ie,ie),V(Ie),t.unbindTexture()}}}function We(G){if(a&&G.samples>0&&Ne(G)===!1){const I=G.width,ne=G.height;let ce=r.COLOR_BUFFER_BIT;const xe=[r.COLOR_ATTACHMENT0],we=G.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;G.depthBuffer&&xe.push(we);const Ie=n.get(G),ie=Ie.__ignoreDepthValues!==void 0?Ie.__ignoreDepthValues:!1;ie===!1&&(G.depthBuffer&&(ce|=r.DEPTH_BUFFER_BIT),G.stencilBuffer&&(ce|=r.STENCIL_BUFFER_BIT)),t.bindFramebuffer(r.READ_FRAMEBUFFER,Ie.__webglMultisampledFramebuffer),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ie.__webglFramebuffer),ie===!0&&(r.invalidateFramebuffer(r.READ_FRAMEBUFFER,[we]),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[we])),r.blitFramebuffer(0,0,I,ne,0,0,I,ne,ce,r.NEAREST),p&&r.invalidateFramebuffer(r.READ_FRAMEBUFFER,xe),t.bindFramebuffer(r.READ_FRAMEBUFFER,null),t.bindFramebuffer(r.DRAW_FRAMEBUFFER,Ie.__webglMultisampledFramebuffer)}}function Fe(G){return Math.min(f,G.samples)}function Ne(G){const I=n.get(G);return a&&G.samples>0&&e.has("WEBGL_multisampled_render_to_texture")===!0&&I.__useRenderToTexture!==!1}function ht(G){const I=o.render.frame;v.get(G)!==I&&(v.set(G,I),G.update())}function rt(G,I){const ne=G.encoding,ce=G.format,xe=G.type;return G.isCompressedTexture===!0||G.isVideoTexture===!0||G.format===Zo||ne!==An&&(ne===dt?a===!1?e.has("EXT_sRGB")===!0&&ce===$t?(G.format=Zo,G.minFilter=_t,G.generateMipmaps=!1):I=yi.sRGBToLinear(I):(ce!==$t||xe!==pi)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture encoding:",ne)),I}this.allocateTextureUnit=F,this.resetTextureUnits=P,this.setTexture2D=J,this.setTexture2DArray=te,this.setTexture3D=oe,this.setTextureCube=pe,this.rebindTextures=ue,this.setupRenderTarget=be,this.updateRenderTargetMipmap=ye,this.updateMultisampleRenderTarget=We,this.setupDepthRenderbuffer=se,this.setupFrameBufferTexture=de,this.useMultisampledRTT=Ne}function Nd(r,e,t){const n=t.isWebGL2;function i(s,o=null){let a;if(s===pi)return r.UNSIGNED_BYTE;if(s===Wu)return r.UNSIGNED_SHORT_4_4_4_4;if(s===Xu)return r.UNSIGNED_SHORT_5_5_5_1;if(s===ku)return r.BYTE;if(s===Gu)return r.SHORT;if(s===Pr)return r.UNSIGNED_SHORT;if(s===Vu)return r.INT;if(s===fs)return r.UNSIGNED_INT;if(s===Wn)return r.FLOAT;if(s===Gi)return n?r.HALF_FLOAT:(a=e.get("OES_texture_half_float"),a!==null?a.HALF_FLOAT_OES:null);if(s===qu)return r.ALPHA;if(s===$t)return r.RGBA;if(s===Zu)return r.LUMINANCE;if(s===Ku)return r.LUMINANCE_ALPHA;if(s===hi)return r.DEPTH_COMPONENT;if(s===Ki)return r.DEPTH_STENCIL;if(s===$u)return r.RED;if(s===Yu)return console.warn("THREE.WebGLRenderer: THREE.RGBFormat has been removed. Use THREE.RGBAFormat instead. https://github.com/mrdoob/three.js/pull/23228"),r.RGBA;if(s===Zo)return a=e.get("EXT_sRGB"),a!==null?a.SRGB_ALPHA_EXT:null;if(s===ju)return r.RED_INTEGER;if(s===Ju)return r.RG;if(s===Qu)return r.RG_INTEGER;if(s===ed)return r.RGBA_INTEGER;if(s===Uo||s===Bo||s===Ho||s===zo)if(o===dt)if(a=e.get("WEBGL_compressed_texture_s3tc_srgb"),a!==null){if(s===Uo)return a.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(s===Bo)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(s===Ho)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(s===zo)return a.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(a=e.get("WEBGL_compressed_texture_s3tc"),a!==null){if(s===Uo)return a.COMPRESSED_RGB_S3TC_DXT1_EXT;if(s===Bo)return a.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(s===Ho)return a.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(s===zo)return a.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(s===gl||s===vl||s===_l||s===yl)if(a=e.get("WEBGL_compressed_texture_pvrtc"),a!==null){if(s===gl)return a.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(s===vl)return a.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(s===_l)return a.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(s===yl)return a.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(s===td)return a=e.get("WEBGL_compressed_texture_etc1"),a!==null?a.COMPRESSED_RGB_ETC1_WEBGL:null;if(s===xl||s===Ml)if(a=e.get("WEBGL_compressed_texture_etc"),a!==null){if(s===xl)return o===dt?a.COMPRESSED_SRGB8_ETC2:a.COMPRESSED_RGB8_ETC2;if(s===Ml)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:a.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(s===El||s===wl||s===bl||s===Tl||s===Sl||s===Al||s===Rl||s===Cl||s===Ll||s===Pl||s===Il||s===Dl||s===Nl||s===Ol)if(a=e.get("WEBGL_compressed_texture_astc"),a!==null){if(s===El)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:a.COMPRESSED_RGBA_ASTC_4x4_KHR;if(s===wl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:a.COMPRESSED_RGBA_ASTC_5x4_KHR;if(s===bl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:a.COMPRESSED_RGBA_ASTC_5x5_KHR;if(s===Tl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:a.COMPRESSED_RGBA_ASTC_6x5_KHR;if(s===Sl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:a.COMPRESSED_RGBA_ASTC_6x6_KHR;if(s===Al)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:a.COMPRESSED_RGBA_ASTC_8x5_KHR;if(s===Rl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:a.COMPRESSED_RGBA_ASTC_8x6_KHR;if(s===Cl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:a.COMPRESSED_RGBA_ASTC_8x8_KHR;if(s===Ll)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:a.COMPRESSED_RGBA_ASTC_10x5_KHR;if(s===Pl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:a.COMPRESSED_RGBA_ASTC_10x6_KHR;if(s===Il)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:a.COMPRESSED_RGBA_ASTC_10x8_KHR;if(s===Dl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:a.COMPRESSED_RGBA_ASTC_10x10_KHR;if(s===Nl)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:a.COMPRESSED_RGBA_ASTC_12x10_KHR;if(s===Ol)return o===dt?a.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:a.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(s===Fl)if(a=e.get("EXT_texture_compression_bptc"),a!==null){if(s===Fl)return o===dt?a.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:a.COMPRESSED_RGBA_BPTC_UNORM_EXT}else return null;if(s===Vi)return n?r.UNSIGNED_INT_24_8:(a=e.get("WEBGL_depth_texture"),a!==null?a.UNSIGNED_INT_24_8_WEBGL:null)}return{convert:i}}class ec extends It{constructor(e=[]){super(),this.cameras=e}}ec.prototype.isArrayCamera=!0;class zi extends Je{constructor(){super(),this.type="Group"}}zi.prototype.isGroup=!0;const v0={type:"move"};class el{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new zi,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new zi,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new D,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new D),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new zi,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new D,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new D),this._grip}dispatchEvent(e){return this._targetRay!==null&&this._targetRay.dispatchEvent(e),this._grip!==null&&this._grip.dispatchEvent(e),this._hand!==null&&this._hand.dispatchEvent(e),this}disconnect(e){return this.dispatchEvent({type:"disconnected",data:e}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(e,t,n){let i=null,s=null,o=null;const a=this._targetRay,c=this._grip,h=this._hand;if(e&&t.session.visibilityState!=="visible-blurred")if(a!==null&&(i=t.getPose(e.targetRaySpace,n),i!==null&&(a.matrix.fromArray(i.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),i.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(i.linearVelocity)):a.hasLinearVelocity=!1,i.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(i.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(v0))),h&&e.hand){o=!0;for(const m of e.hand.values()){const g=t.getJointPose(m,n);if(h.joints[m.jointName]===void 0){const b=new zi;b.matrixAutoUpdate=!1,b.visible=!1,h.joints[m.jointName]=b,h.add(b)}const E=h.joints[m.jointName];g!==null&&(E.matrix.fromArray(g.transform.matrix),E.matrix.decompose(E.position,E.rotation,E.scale),E.jointRadius=g.radius),E.visible=g!==null}const u=h.joints["index-finger-tip"],f=h.joints["thumb-tip"],d=u.position.distanceTo(f.position),p=.02,v=.005;h.inputState.pinching&&d>p+v?(h.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:e.handedness,target:this})):!h.inputState.pinching&&d<=p-v&&(h.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:e.handedness,target:this}))}else c!==null&&e.gripSpace&&(s=t.getPose(e.gripSpace,n),s!==null&&(c.matrix.fromArray(s.transform.matrix),c.matrix.decompose(c.position,c.rotation,c.scale),s.linearVelocity?(c.hasLinearVelocity=!0,c.linearVelocity.copy(s.linearVelocity)):c.hasLinearVelocity=!1,s.angularVelocity?(c.hasAngularVelocity=!0,c.angularVelocity.copy(s.angularVelocity)):c.hasAngularVelocity=!1));return a!==null&&(a.visible=i!==null),c!==null&&(c.visible=s!==null),h!==null&&(h.visible=o!==null),this}}class tc extends At{constructor(e,t,n,i,s,o,a,c,h,u){if(u=u!==void 0?u:hi,u!==hi&&u!==Ki)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");n===void 0&&u===hi&&(n=Pr),n===void 0&&u===Ki&&(n=Vi),super(null,i,s,o,a,c,u,n,h),this.image={width:e,height:t},this.magFilter=a!==void 0?a:Tt,this.minFilter=c!==void 0?c:Tt,this.flipY=!1,this.generateMipmaps=!1}}tc.prototype.isDepthTexture=!0;class _0 extends _i{constructor(e,t){super();const n=this;let i=null,s=1,o=null,a="local-floor",c=null,h=null,u=null,f=null,d=null;const p=t.getContextAttributes();let v=null,m=null;const g=[],E=new Map,b=new It;b.layers.enable(1),b.viewport=new st;const C=new It;C.layers.enable(2),C.viewport=new st;const S=[b,C],A=new ec;A.layers.enable(1),A.layers.enable(2);let O=null,V=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(F){let X=g[F];return X===void 0&&(X=new el,g[F]=X),X.getTargetRaySpace()},this.getControllerGrip=function(F){let X=g[F];return X===void 0&&(X=new el,g[F]=X),X.getGripSpace()},this.getHand=function(F){let X=g[F];return X===void 0&&(X=new el,g[F]=X),X.getHandSpace()};function U(F){const X=E.get(F.inputSource);X&&X.dispatchEvent({type:F.type,data:F.inputSource})}function Q(){E.forEach(function(F,X){F.disconnect(X)}),E.clear(),O=null,V=null,e.setRenderTarget(v),f=null,u=null,h=null,i=null,m=null,P.stop(),n.isPresenting=!1,n.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(F){s=F,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(F){a=F,n.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return o},this.getBaseLayer=function(){return u!==null?u:f},this.getBinding=function(){return h},this.getFrame=function(){return d},this.getSession=function(){return i},this.setSession=async function(F){if(i=F,i!==null){if(v=e.getRenderTarget(),i.addEventListener("select",U),i.addEventListener("selectstart",U),i.addEventListener("selectend",U),i.addEventListener("squeeze",U),i.addEventListener("squeezestart",U),i.addEventListener("squeezeend",U),i.addEventListener("end",Q),i.addEventListener("inputsourceschange",Z),p.xrCompatible!==!0&&await t.makeXRCompatible(),i.renderState.layers===void 0||e.capabilities.isWebGL2===!1){const X={antialias:i.renderState.layers===void 0?p.antialias:!0,alpha:p.alpha,depth:p.depth,stencil:p.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(i,t,X),i.updateRenderState({baseLayer:f}),m=new kt(f.framebufferWidth,f.framebufferHeight,{format:$t,type:pi,encoding:e.outputEncoding})}else{let X=null,J=null,te=null;p.depth&&(te=p.stencil?t.DEPTH24_STENCIL8:t.DEPTH_COMPONENT24,X=p.stencil?Ki:hi,J=p.stencil?Vi:Pr);const oe={colorFormat:e.outputEncoding===dt?t.SRGB8_ALPHA8:t.RGBA8,depthFormat:te,scaleFactor:s};h=new XRWebGLBinding(i,t),u=h.createProjectionLayer(oe),i.updateRenderState({layers:[u]}),m=new kt(u.textureWidth,u.textureHeight,{format:$t,type:pi,depthTexture:new tc(u.textureWidth,u.textureHeight,J,void 0,void 0,void 0,void 0,void 0,void 0,X),stencilBuffer:p.stencil,encoding:e.outputEncoding,samples:p.antialias?4:0});const pe=e.properties.get(m);pe.__ignoreDepthValues=u.ignoreDepthValues}m.isXRRenderTarget=!0,this.setFoveation(1),o=await i.requestReferenceSpace(a),P.setContext(i),P.start(),n.isPresenting=!0,n.dispatchEvent({type:"sessionstart"})}};function Z(F){const X=i.inputSources;for(let J=0;J<g.length;J++)E.set(X[J],g[J]);for(let J=0;J<F.removed.length;J++){const te=F.removed[J],oe=E.get(te);oe&&(oe.dispatchEvent({type:"disconnected",data:te}),E.delete(te))}for(let J=0;J<F.added.length;J++){const te=F.added[J],oe=E.get(te);oe&&oe.dispatchEvent({type:"connected",data:te})}}const L=new D,B=new D;function Y(F,X,J){L.setFromMatrixPosition(X.matrixWorld),B.setFromMatrixPosition(J.matrixWorld);const te=L.distanceTo(B),oe=X.projectionMatrix.elements,pe=J.projectionMatrix.elements,Le=oe[14]/(oe[10]-1),Oe=oe[14]/(oe[10]+1),K=(oe[9]+1)/oe[5],Qe=(oe[9]-1)/oe[5],ze=(oe[8]-1)/oe[0],Ve=(pe[8]+1)/pe[0],de=Le*ze,qe=Le*Ve,re=te/(-ze+Ve),se=re*-ze;X.matrixWorld.decompose(F.position,F.quaternion,F.scale),F.translateX(se),F.translateZ(re),F.matrixWorld.compose(F.position,F.quaternion,F.scale),F.matrixWorldInverse.copy(F.matrixWorld).invert();const ue=Le+re,be=Oe+re,ye=de-se,We=qe+(te-se),Fe=K*Oe/be*ue,Ne=Qe*Oe/be*ue;F.projectionMatrix.makePerspective(ye,We,Fe,Ne,ue,be)}function z(F,X){X===null?F.matrixWorld.copy(F.matrix):F.matrixWorld.multiplyMatrices(X.matrixWorld,F.matrix),F.matrixWorldInverse.copy(F.matrixWorld).invert()}this.updateCamera=function(F){if(i===null)return;A.near=C.near=b.near=F.near,A.far=C.far=b.far=F.far,(O!==A.near||V!==A.far)&&(i.updateRenderState({depthNear:A.near,depthFar:A.far}),O=A.near,V=A.far);const X=F.parent,J=A.cameras;z(A,X);for(let oe=0;oe<J.length;oe++)z(J[oe],X);A.matrixWorld.decompose(A.position,A.quaternion,A.scale),F.position.copy(A.position),F.quaternion.copy(A.quaternion),F.scale.copy(A.scale),F.matrix.copy(A.matrix),F.matrixWorld.copy(A.matrixWorld);const te=F.children;for(let oe=0,pe=te.length;oe<pe;oe++)te[oe].updateMatrixWorld(!0);J.length===2?Y(A,b,C):A.projectionMatrix.copy(b.projectionMatrix)},this.getCamera=function(){return A},this.getFoveation=function(){if(u!==null)return u.fixedFoveation;if(f!==null)return f.fixedFoveation},this.setFoveation=function(F){u!==null&&(u.fixedFoveation=F),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=F)};let N=null;function R(F,X){if(c=X.getViewerPose(o),d=X,c!==null){const te=c.views;f!==null&&(e.setRenderTargetFramebuffer(m,f.framebuffer),e.setRenderTarget(m));let oe=!1;te.length!==A.cameras.length&&(A.cameras.length=0,oe=!0);for(let pe=0;pe<te.length;pe++){const Le=te[pe];let Oe=null;if(f!==null)Oe=f.getViewport(Le);else{const Qe=h.getViewSubImage(u,Le);Oe=Qe.viewport,pe===0&&(e.setRenderTargetTextures(m,Qe.colorTexture,u.ignoreDepthValues?void 0:Qe.depthStencilTexture),e.setRenderTarget(m))}const K=S[pe];K.matrix.fromArray(Le.transform.matrix),K.projectionMatrix.fromArray(Le.projectionMatrix),K.viewport.set(Oe.x,Oe.y,Oe.width,Oe.height),pe===0&&A.matrix.copy(K.matrix),oe===!0&&A.cameras.push(K)}}const J=i.inputSources;for(let te=0;te<g.length;te++){const oe=g[te],pe=J[te];oe.update(pe,X,o)}N&&N(F,X),d=null}const P=new Td;P.setAnimationLoop(R),this.setAnimationLoop=function(F){N=F},this.dispose=function(){}}}function y0(r,e){function t(m,g){m.fogColor.value.copy(g.color),g.isFog?(m.fogNear.value=g.near,m.fogFar.value=g.far):g.isFogExp2&&(m.fogDensity.value=g.density)}function n(m,g,E,b,C){g.isMeshBasicMaterial||g.isMeshLambertMaterial?i(m,g):g.isMeshToonMaterial?(i(m,g),u(m,g)):g.isMeshPhongMaterial?(i(m,g),h(m,g)):g.isMeshStandardMaterial?(i(m,g),f(m,g),g.isMeshPhysicalMaterial&&d(m,g,C)):g.isMeshMatcapMaterial?(i(m,g),p(m,g)):g.isMeshDepthMaterial?i(m,g):g.isMeshDistanceMaterial?(i(m,g),v(m,g)):g.isMeshNormalMaterial?i(m,g):g.isLineBasicMaterial?(s(m,g),g.isLineDashedMaterial&&o(m,g)):g.isPointsMaterial?a(m,g,E,b):g.isSpriteMaterial?c(m,g):g.isShadowMaterial?(m.color.value.copy(g.color),m.opacity.value=g.opacity):g.isShaderMaterial&&(g.uniformsNeedUpdate=!1)}function i(m,g){m.opacity.value=g.opacity,g.color&&m.diffuse.value.copy(g.color),g.emissive&&m.emissive.value.copy(g.emissive).multiplyScalar(g.emissiveIntensity),g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.bumpMap&&(m.bumpMap.value=g.bumpMap,m.bumpScale.value=g.bumpScale,g.side===jt&&(m.bumpScale.value*=-1)),g.displacementMap&&(m.displacementMap.value=g.displacementMap,m.displacementScale.value=g.displacementScale,m.displacementBias.value=g.displacementBias),g.emissiveMap&&(m.emissiveMap.value=g.emissiveMap),g.normalMap&&(m.normalMap.value=g.normalMap,m.normalScale.value.copy(g.normalScale),g.side===jt&&m.normalScale.value.negate()),g.specularMap&&(m.specularMap.value=g.specularMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);const E=e.get(g).envMap;if(E&&(m.envMap.value=E,m.flipEnvMap.value=E.isCubeTexture&&E.isRenderTargetTexture===!1?-1:1,m.reflectivity.value=g.reflectivity,m.ior.value=g.ior,m.refractionRatio.value=g.refractionRatio),g.lightMap){m.lightMap.value=g.lightMap;const S=r.physicallyCorrectLights!==!0?Math.PI:1;m.lightMapIntensity.value=g.lightMapIntensity*S}g.aoMap&&(m.aoMap.value=g.aoMap,m.aoMapIntensity.value=g.aoMapIntensity);let b;g.map?b=g.map:g.specularMap?b=g.specularMap:g.displacementMap?b=g.displacementMap:g.normalMap?b=g.normalMap:g.bumpMap?b=g.bumpMap:g.roughnessMap?b=g.roughnessMap:g.metalnessMap?b=g.metalnessMap:g.alphaMap?b=g.alphaMap:g.emissiveMap?b=g.emissiveMap:g.clearcoatMap?b=g.clearcoatMap:g.clearcoatNormalMap?b=g.clearcoatNormalMap:g.clearcoatRoughnessMap?b=g.clearcoatRoughnessMap:g.specularIntensityMap?b=g.specularIntensityMap:g.specularColorMap?b=g.specularColorMap:g.transmissionMap?b=g.transmissionMap:g.thicknessMap?b=g.thicknessMap:g.sheenColorMap?b=g.sheenColorMap:g.sheenRoughnessMap&&(b=g.sheenRoughnessMap),b!==void 0&&(b.isWebGLRenderTarget&&(b=b.texture),b.matrixAutoUpdate===!0&&b.updateMatrix(),m.uvTransform.value.copy(b.matrix));let C;g.aoMap?C=g.aoMap:g.lightMap&&(C=g.lightMap),C!==void 0&&(C.isWebGLRenderTarget&&(C=C.texture),C.matrixAutoUpdate===!0&&C.updateMatrix(),m.uv2Transform.value.copy(C.matrix))}function s(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity}function o(m,g){m.dashSize.value=g.dashSize,m.totalSize.value=g.dashSize+g.gapSize,m.scale.value=g.scale}function a(m,g,E,b){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.size.value=g.size*E,m.scale.value=b*.5,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let C;g.map?C=g.map:g.alphaMap&&(C=g.alphaMap),C!==void 0&&(C.matrixAutoUpdate===!0&&C.updateMatrix(),m.uvTransform.value.copy(C.matrix))}function c(m,g){m.diffuse.value.copy(g.color),m.opacity.value=g.opacity,m.rotation.value=g.rotation,g.map&&(m.map.value=g.map),g.alphaMap&&(m.alphaMap.value=g.alphaMap),g.alphaTest>0&&(m.alphaTest.value=g.alphaTest);let E;g.map?E=g.map:g.alphaMap&&(E=g.alphaMap),E!==void 0&&(E.matrixAutoUpdate===!0&&E.updateMatrix(),m.uvTransform.value.copy(E.matrix))}function h(m,g){m.specular.value.copy(g.specular),m.shininess.value=Math.max(g.shininess,1e-4)}function u(m,g){g.gradientMap&&(m.gradientMap.value=g.gradientMap)}function f(m,g){m.roughness.value=g.roughness,m.metalness.value=g.metalness,g.roughnessMap&&(m.roughnessMap.value=g.roughnessMap),g.metalnessMap&&(m.metalnessMap.value=g.metalnessMap),e.get(g).envMap&&(m.envMapIntensity.value=g.envMapIntensity)}function d(m,g,E){m.ior.value=g.ior,g.sheen>0&&(m.sheenColor.value.copy(g.sheenColor).multiplyScalar(g.sheen),m.sheenRoughness.value=g.sheenRoughness,g.sheenColorMap&&(m.sheenColorMap.value=g.sheenColorMap),g.sheenRoughnessMap&&(m.sheenRoughnessMap.value=g.sheenRoughnessMap)),g.clearcoat>0&&(m.clearcoat.value=g.clearcoat,m.clearcoatRoughness.value=g.clearcoatRoughness,g.clearcoatMap&&(m.clearcoatMap.value=g.clearcoatMap),g.clearcoatRoughnessMap&&(m.clearcoatRoughnessMap.value=g.clearcoatRoughnessMap),g.clearcoatNormalMap&&(m.clearcoatNormalScale.value.copy(g.clearcoatNormalScale),m.clearcoatNormalMap.value=g.clearcoatNormalMap,g.side===jt&&m.clearcoatNormalScale.value.negate())),g.transmission>0&&(m.transmission.value=g.transmission,m.transmissionSamplerMap.value=E.texture,m.transmissionSamplerSize.value.set(E.width,E.height),g.transmissionMap&&(m.transmissionMap.value=g.transmissionMap),m.thickness.value=g.thickness,g.thicknessMap&&(m.thicknessMap.value=g.thicknessMap),m.attenuationDistance.value=g.attenuationDistance,m.attenuationColor.value.copy(g.attenuationColor)),m.specularIntensity.value=g.specularIntensity,m.specularColor.value.copy(g.specularColor),g.specularIntensityMap&&(m.specularIntensityMap.value=g.specularIntensityMap),g.specularColorMap&&(m.specularColorMap.value=g.specularColorMap)}function p(m,g){g.matcap&&(m.matcap.value=g.matcap)}function v(m,g){m.referencePosition.value.copy(g.referencePosition),m.nearDistance.value=g.nearDistance,m.farDistance.value=g.farDistance}return{refreshFogUniforms:t,refreshMaterialUniforms:n}}function x0(){const r=Ts("canvas");return r.style.display="block",r}function at(r={}){const e=r.canvas!==void 0?r.canvas:x0(),t=r.context!==void 0?r.context:null,n=r.depth!==void 0?r.depth:!0,i=r.stencil!==void 0?r.stencil:!0,s=r.antialias!==void 0?r.antialias:!1,o=r.premultipliedAlpha!==void 0?r.premultipliedAlpha:!0,a=r.preserveDrawingBuffer!==void 0?r.preserveDrawingBuffer:!1,c=r.powerPreference!==void 0?r.powerPreference:"default",h=r.failIfMajorPerformanceCaveat!==void 0?r.failIfMajorPerformanceCaveat:!1;let u;r.context!==void 0?u=t.getContextAttributes().alpha:u=r.alpha!==void 0?r.alpha:!1;let f=null,d=null;const p=[],v=[];this.domElement=e,this.debug={checkShaderErrors:!0},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this.outputEncoding=An,this.physicallyCorrectLights=!1,this.toneMapping=bn,this.toneMappingExposure=1;const m=this;let g=!1,E=0,b=0,C=null,S=-1,A=null;const O=new st,V=new st;let U=null,Q=e.width,Z=e.height,L=1,B=null,Y=null;const z=new st(0,0,Q,Z),N=new st(0,0,Q,Z);let R=!1;const P=new Fs;let F=!1,X=!1,J=null;const te=new Ae,oe=new le,pe=new D,Le={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};function Oe(){return C===null?L:1}let K=t;function Qe(H,$){for(let ee=0;ee<H.length;ee++){const j=H[ee],ae=e.getContext(j,$);if(ae!==null)return ae}return null}try{const H={alpha:!0,depth:n,stencil:i,antialias:s,premultipliedAlpha:o,preserveDrawingBuffer:a,powerPreference:c,failIfMajorPerformanceCaveat:h};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${Qo}`),e.addEventListener("webglcontextlost",q,!1),e.addEventListener("webglcontextrestored",ge,!1),K===null){const $=["webgl2","webgl","experimental-webgl"];if(m.isWebGL1Renderer===!0&&$.shift(),K=Qe($,H),K===null)throw Qe($)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}K.getShaderPrecisionFormat===void 0&&(K.getShaderPrecisionFormat=function(){return{rangeMin:1,rangeMax:1,precision:1}})}catch(H){throw console.error("THREE.WebGLRenderer: "+H.message),H}let ze,Ve,de,qe,re,se,ue,be,ye,We,Fe,Ne,ht,rt,G,I,ne,ce,xe,we,Ie,ie,Ce;function Xe(){ze=new Hv(K),Ve=new Dv(K,ze,r),ze.init(Ve),ie=new Nd(K,ze,Ve),de=new m0(K,ze,Ve),qe=new Gv(K),re=new r0,se=new g0(K,ze,de,re,Ve,ie,qe),ue=new Ov(m),be=new Bv(m),ye=new nm(K,Ve),Ce=new Pv(K,ze,ye,Ve),We=new zv(K,ye,qe,Ce),Fe=new qv(K,We,ye,qe),xe=new Xv(K,Ve,se),I=new Nv(re),Ne=new i0(m,ue,be,ze,Ve,Ce,I),ht=new y0(m,re),rt=new o0,G=new d0(ze,Ve),ce=new Lv(m,ue,de,Fe,u,o),ne=new Dd(m,Fe,Ve),we=new Iv(K,ze,qe,Ve),Ie=new kv(K,ze,qe,Ve),qe.programs=Ne.programs,m.capabilities=Ve,m.extensions=ze,m.properties=re,m.renderLists=rt,m.shadowMap=ne,m.state=de,m.info=qe}Xe();const Ee=new _0(m,K);this.xr=Ee,this.getContext=function(){return K},this.getContextAttributes=function(){return K.getContextAttributes()},this.forceContextLoss=function(){const H=ze.get("WEBGL_lose_context");H&&H.loseContext()},this.forceContextRestore=function(){const H=ze.get("WEBGL_lose_context");H&&H.restoreContext()},this.getPixelRatio=function(){return L},this.setPixelRatio=function(H){H!==void 0&&(L=H,this.setSize(Q,Z,!1))},this.getSize=function(H){return H.set(Q,Z)},this.setSize=function(H,$,ee){if(Ee.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Q=H,Z=$,e.width=Math.floor(H*L),e.height=Math.floor($*L),ee!==!1&&(e.style.width=H+"px",e.style.height=$+"px"),this.setViewport(0,0,H,$)},this.getDrawingBufferSize=function(H){return H.set(Q*L,Z*L).floor()},this.setDrawingBufferSize=function(H,$,ee){Q=H,Z=$,L=ee,e.width=Math.floor(H*ee),e.height=Math.floor($*ee),this.setViewport(0,0,H,$)},this.getCurrentViewport=function(H){return H.copy(O)},this.getViewport=function(H){return H.copy(z)},this.setViewport=function(H,$,ee,j){H.isVector4?z.set(H.x,H.y,H.z,H.w):z.set(H,$,ee,j),de.viewport(O.copy(z).multiplyScalar(L).floor())},this.getScissor=function(H){return H.copy(N)},this.setScissor=function(H,$,ee,j){H.isVector4?N.set(H.x,H.y,H.z,H.w):N.set(H,$,ee,j),de.scissor(V.copy(N).multiplyScalar(L).floor())},this.getScissorTest=function(){return R},this.setScissorTest=function(H){de.setScissorTest(R=H)},this.setOpaqueSort=function(H){B=H},this.setTransparentSort=function(H){Y=H},this.getClearColor=function(H){return H.copy(ce.getClearColor())},this.setClearColor=function(){ce.setClearColor.apply(ce,arguments)},this.getClearAlpha=function(){return ce.getClearAlpha()},this.setClearAlpha=function(){ce.setClearAlpha.apply(ce,arguments)},this.clear=function(H=!0,$=!0,ee=!0){let j=0;H&&(j|=K.COLOR_BUFFER_BIT),$&&(j|=K.DEPTH_BUFFER_BIT),ee&&(j|=K.STENCIL_BUFFER_BIT),K.clear(j)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",q,!1),e.removeEventListener("webglcontextrestored",ge,!1),rt.dispose(),G.dispose(),re.dispose(),ue.dispose(),be.dispose(),Fe.dispose(),Ce.dispose(),Ne.dispose(),Ee.dispose(),Ee.removeEventListener("sessionstart",Ge),Ee.removeEventListener("sessionend",lt),J&&(J.dispose(),J=null),$e.stop()};function q(H){H.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),g=!0}function ge(){console.log("THREE.WebGLRenderer: Context Restored."),g=!1;const H=qe.autoReset,$=ne.enabled,ee=ne.autoUpdate,j=ne.needsUpdate,ae=ne.type;Xe(),qe.autoReset=H,ne.enabled=$,ne.autoUpdate=ee,ne.needsUpdate=j,ne.type=ae}function me(H){const $=H.target;$.removeEventListener("dispose",me),Re($)}function Re(H){Te(H),re.remove(H)}function Te(H){const $=re.get(H).programs;$!==void 0&&($.forEach(function(ee){Ne.releaseProgram(ee)}),H.isShaderMaterial&&Ne.releaseShaderCache(H))}this.renderBufferDirect=function(H,$,ee,j,ae,He){$===null&&($=Le);const ke=ae.isMesh&&ae.matrixWorld.determinant()<0,Ye=In(H,$,ee,j,ae);de.setMaterial(j,ke);let Be=ee.index;const it=ee.attributes.position;if(Be===null){if(it===void 0||it.count===0)return}else if(Be.count===0)return;let Ze=1;j.wireframe===!0&&(Be=We.getWireframeAttribute(ee),Ze=2),Ce.setup(ae,j,Ye,ee,Be);let je,ot=we;Be!==null&&(je=ye.get(Be),ot=Ie,ot.setIndex(je));const Dn=Be!==null?Be.count:it.count,xn=ee.drawRange.start*Ze,Jn=ee.drawRange.count*Ze,nn=He!==null?He.start*Ze:0,et=He!==null?He.count*Ze:1/0,Nn=Math.max(xn,nn),ct=Math.min(Dn,xn+Jn,nn+et)-1,rn=Math.max(0,ct-Nn+1);if(rn!==0){if(ae.isMesh)j.wireframe===!0?(de.setLineWidth(j.wireframeLinewidth*Oe()),ot.setMode(K.LINES)):ot.setMode(K.TRIANGLES);else if(ae.isLine){let sn=j.linewidth;sn===void 0&&(sn=1),de.setLineWidth(sn*Oe()),ae.isLineSegments?ot.setMode(K.LINES):ae.isLineLoop?ot.setMode(K.LINE_LOOP):ot.setMode(K.LINE_STRIP)}else ae.isPoints?ot.setMode(K.POINTS):ae.isSprite&&ot.setMode(K.TRIANGLES);if(ae.isInstancedMesh)ot.renderInstances(Nn,rn,ae.count);else if(ee.isInstancedBufferGeometry){const sn=Math.min(ee.instanceCount,ee._maxInstanceCount);ot.renderInstances(Nn,rn,sn)}else ot.render(Nn,rn)}},this.compile=function(H,$){d=G.get(H),d.init(),v.push(d),H.traverseVisible(function(ee){ee.isLight&&ee.layers.test($.layers)&&(d.pushLight(ee),ee.castShadow&&d.pushShadow(ee))}),d.setupLights(m.physicallyCorrectLights),H.traverse(function(ee){const j=ee.material;if(j)if(Array.isArray(j))for(let ae=0;ae<j.length;ae++){const He=j[ae];wi(He,H,ee)}else wi(j,H,ee)}),v.pop(),d=null};let Pe=null;function fe(H){Pe&&Pe(H)}function Ge(){$e.stop()}function lt(){$e.start()}const $e=new Td;$e.setAnimationLoop(fe),typeof self!="undefined"&&$e.setContext(self),this.setAnimationLoop=function(H){Pe=H,Ee.setAnimationLoop(H),H===null?$e.stop():$e.start()},Ee.addEventListener("sessionstart",Ge),Ee.addEventListener("sessionend",lt),this.render=function(H,$){if($!==void 0&&$.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(g===!0)return;H.autoUpdate===!0&&H.updateMatrixWorld(),$.parent===null&&$.updateMatrixWorld(),Ee.enabled===!0&&Ee.isPresenting===!0&&(Ee.cameraAutoUpdate===!0&&Ee.updateCamera($),$=Ee.getCamera()),H.isScene===!0&&H.onBeforeRender(m,H,$,C),d=G.get(H,v.length),d.init(),v.push(d),te.multiplyMatrices($.projectionMatrix,$.matrixWorldInverse),P.setFromProjectionMatrix(te),X=this.localClippingEnabled,F=I.init(this.clippingPlanes,X,$),f=rt.get(H,p.length),f.init(),p.push(f),Yt(H,$,0,m.sortObjects),f.finish(),m.sortObjects===!0&&f.sort(B,Y),F===!0&&I.beginShadows();const ee=d.state.shadowsArray;if(ne.render(ee,H,$),F===!0&&I.endShadows(),this.info.autoReset===!0&&this.info.reset(),ce.render(f,H),d.setupLights(m.physicallyCorrectLights),$.isArrayCamera){const j=$.cameras;for(let ae=0,He=j.length;ae<He;ae++){const ke=j[ae];Wt(f,H,ke,ke.viewport)}}else Wt(f,H,$);C!==null&&(se.updateMultisampleRenderTarget(C),se.updateRenderTargetMipmap(C)),H.isScene===!0&&H.onAfterRender(m,H,$),Ce.resetDefaultState(),S=-1,A=null,v.pop(),v.length>0?d=v[v.length-1]:d=null,p.pop(),p.length>0?f=p[p.length-1]:f=null};function Yt(H,$,ee,j){if(H.visible===!1)return;if(H.layers.test($.layers)){if(H.isGroup)ee=H.renderOrder;else if(H.isLOD)H.autoUpdate===!0&&H.update($);else if(H.isLight)d.pushLight(H),H.castShadow&&d.pushShadow(H);else if(H.isSprite){if(!H.frustumCulled||P.intersectsSprite(H)){j&&pe.setFromMatrixPosition(H.matrixWorld).applyMatrix4(te);const ke=Fe.update(H),Ye=H.material;Ye.visible&&f.push(H,ke,Ye,ee,pe.z,null)}}else if((H.isMesh||H.isLine||H.isPoints)&&(H.isSkinnedMesh&&H.skeleton.frame!==qe.render.frame&&(H.skeleton.update(),H.skeleton.frame=qe.render.frame),!H.frustumCulled||P.intersectsObject(H))){j&&pe.setFromMatrixPosition(H.matrixWorld).applyMatrix4(te);const ke=Fe.update(H),Ye=H.material;if(Array.isArray(Ye)){const Be=ke.groups;for(let it=0,Ze=Be.length;it<Ze;it++){const je=Be[it],ot=Ye[je.materialIndex];ot&&ot.visible&&f.push(H,ke,ot,ee,pe.z,je)}}else Ye.visible&&f.push(H,ke,Ye,ee,pe.z,null)}}const He=H.children;for(let ke=0,Ye=He.length;ke<Ye;ke++)Yt(He[ke],$,ee,j)}function Wt(H,$,ee,j){const ae=H.opaque,He=H.transmissive,ke=H.transparent;d.setupLightsView(ee),He.length>0&&tn(ae,$,ee),j&&de.viewport(O.copy(j)),ae.length>0&&jn(ae,$,ee),He.length>0&&jn(He,$,ee),ke.length>0&&jn(ke,$,ee),de.buffers.depth.setTest(!0),de.buffers.depth.setMask(!0),de.buffers.color.setMask(!0),de.setPolygonOffset(!1)}function tn(H,$,ee){const j=Ve.isWebGL2;J===null&&(J=new kt(1,1,{generateMipmaps:!0,type:ie.convert(Gi)!==null?Gi:pi,minFilter:ir,samples:j&&s===!0?4:0})),m.getDrawingBufferSize(oe),j?J.setSize(oe.x,oe.y):J.setSize(Ko(oe.x),Ko(oe.y));const ae=m.getRenderTarget();m.setRenderTarget(J),m.clear();const He=m.toneMapping;m.toneMapping=bn,jn(H,$,ee),m.toneMapping=He,se.updateMultisampleRenderTarget(J),se.updateRenderTargetMipmap(J),m.setRenderTarget(ae)}function jn(H,$,ee){const j=$.isScene===!0?$.overrideMaterial:null;for(let ae=0,He=H.length;ae<He;ae++){const ke=H[ae],Ye=ke.object,Be=ke.geometry,it=j===null?ke.material:j,Ze=ke.group;Ye.layers.test(ee.layers)&&Ws(Ye,$,ee,Be,it,Ze)}}function Ws(H,$,ee,j,ae,He){H.onBeforeRender(m,$,ee,j,ae,He),H.modelViewMatrix.multiplyMatrices(ee.matrixWorldInverse,H.matrixWorld),H.normalMatrix.getNormalMatrix(H.modelViewMatrix),ae.onBeforeRender(m,$,ee,j,H,He),ae.transparent===!0&&ae.side===Zi?(ae.side=jt,ae.needsUpdate=!0,m.renderBufferDirect(ee,$,j,ae,H,He),ae.side=Yi,ae.needsUpdate=!0,m.renderBufferDirect(ee,$,j,ae,H,He),ae.side=Zi):m.renderBufferDirect(ee,$,j,ae,H,He),H.onAfterRender(m,$,ee,j,ae,He)}function wi(H,$,ee){$.isScene!==!0&&($=Le);const j=re.get(H),ae=d.state.lights,He=d.state.shadowsArray,ke=ae.state.version,Ye=Ne.getParameters(H,ae.state,He,$,ee),Be=Ne.getProgramCacheKey(Ye);let it=j.programs;j.environment=H.isMeshStandardMaterial?$.environment:null,j.fog=$.fog,j.envMap=(H.isMeshStandardMaterial?be:ue).get(H.envMap||j.environment),it===void 0&&(H.addEventListener("dispose",me),it=new Map,j.programs=it);let Ze=it.get(Be);if(Ze!==void 0){if(j.currentProgram===Ze&&j.lightsStateVersion===ke)return Pn(H,Ye),Ze}else Ye.uniforms=Ne.getUniforms(H),H.onBuild(ee,Ye,m),H.onBeforeCompile(Ye,m),Ze=Ne.acquireProgram(Ye,Be),it.set(Be,Ze),j.uniforms=Ye.uniforms;const je=j.uniforms;(!H.isShaderMaterial&&!H.isRawShaderMaterial||H.clipping===!0)&&(je.clippingPlanes=I.uniform),Pn(H,Ye),j.needsLights=bi(H),j.lightsStateVersion=ke,j.needsLights&&(je.ambientLightColor.value=ae.state.ambient,je.lightProbe.value=ae.state.probe,je.directionalLights.value=ae.state.directional,je.directionalLightShadows.value=ae.state.directionalShadow,je.spotLights.value=ae.state.spot,je.spotLightShadows.value=ae.state.spotShadow,je.rectAreaLights.value=ae.state.rectArea,je.ltc_1.value=ae.state.rectAreaLTC1,je.ltc_2.value=ae.state.rectAreaLTC2,je.pointLights.value=ae.state.point,je.pointLightShadows.value=ae.state.pointShadow,je.hemisphereLights.value=ae.state.hemi,je.directionalShadowMap.value=ae.state.directionalShadowMap,je.directionalShadowMatrix.value=ae.state.directionalShadowMatrix,je.spotShadowMap.value=ae.state.spotShadowMap,je.spotShadowMatrix.value=ae.state.spotShadowMatrix,je.pointShadowMap.value=ae.state.pointShadowMap,je.pointShadowMatrix.value=ae.state.pointShadowMatrix);const ot=Ze.getUniforms(),Dn=ui.seqWithValue(ot.seq,je);return j.currentProgram=Ze,j.uniformsList=Dn,Ze}function Pn(H,$){const ee=re.get(H);ee.outputEncoding=$.outputEncoding,ee.instancing=$.instancing,ee.skinning=$.skinning,ee.morphTargets=$.morphTargets,ee.morphNormals=$.morphNormals,ee.morphColors=$.morphColors,ee.morphTargetsCount=$.morphTargetsCount,ee.numClippingPlanes=$.numClippingPlanes,ee.numIntersection=$.numClipIntersection,ee.vertexAlphas=$.vertexAlphas,ee.vertexTangents=$.vertexTangents,ee.toneMapping=$.toneMapping}function In(H,$,ee,j,ae){$.isScene!==!0&&($=Le),se.resetTextureUnits();const He=$.fog,ke=j.isMeshStandardMaterial?$.environment:null,Ye=C===null?m.outputEncoding:C.isXRRenderTarget===!0?C.texture.encoding:An,Be=(j.isMeshStandardMaterial?be:ue).get(j.envMap||ke),it=j.vertexColors===!0&&!!ee.attributes.color&&ee.attributes.color.itemSize===4,Ze=!!j.normalMap&&!!ee.attributes.tangent,je=!!ee.morphAttributes.position,ot=!!ee.morphAttributes.normal,Dn=!!ee.morphAttributes.color,xn=j.toneMapped?m.toneMapping:bn,Jn=ee.morphAttributes.position||ee.morphAttributes.normal||ee.morphAttributes.color,nn=Jn!==void 0?Jn.length:0,et=re.get(j),Nn=d.state.lights;if(F===!0&&(X===!0||H!==A)){const Bt=H===A&&j.id===S;I.setState(j,H,Bt)}let ct=!1;j.version===et.__version?(et.needsLights&&et.lightsStateVersion!==Nn.state.version||et.outputEncoding!==Ye||ae.isInstancedMesh&&et.instancing===!1||!ae.isInstancedMesh&&et.instancing===!0||ae.isSkinnedMesh&&et.skinning===!1||!ae.isSkinnedMesh&&et.skinning===!0||et.envMap!==Be||j.fog&&et.fog!==He||et.numClippingPlanes!==void 0&&(et.numClippingPlanes!==I.numPlanes||et.numIntersection!==I.numIntersection)||et.vertexAlphas!==it||et.vertexTangents!==Ze||et.morphTargets!==je||et.morphNormals!==ot||et.morphColors!==Dn||et.toneMapping!==xn||Ve.isWebGL2===!0&&et.morphTargetsCount!==nn)&&(ct=!0):(ct=!0,et.__version=j.version);let rn=et.currentProgram;ct===!0&&(rn=wi(j,$,ae));let sn=!1,Mn=!1,On=!1;const Et=rn.getUniforms(),Fn=et.uniforms;if(de.useProgram(rn.program)&&(sn=!0,Mn=!0,On=!0),j.id!==S&&(S=j.id,Mn=!0),sn||A!==H){if(Et.setValue(K,"projectionMatrix",H.projectionMatrix),Ve.logarithmicDepthBuffer&&Et.setValue(K,"logDepthBufFC",2/(Math.log(H.far+1)/Math.LN2)),A!==H&&(A=H,Mn=!0,On=!0),j.isShaderMaterial||j.isMeshPhongMaterial||j.isMeshToonMaterial||j.isMeshStandardMaterial||j.envMap){const Bt=Et.map.cameraPosition;Bt!==void 0&&Bt.setValue(K,pe.setFromMatrixPosition(H.matrixWorld))}(j.isMeshPhongMaterial||j.isMeshToonMaterial||j.isMeshLambertMaterial||j.isMeshBasicMaterial||j.isMeshStandardMaterial||j.isShaderMaterial)&&Et.setValue(K,"isOrthographic",H.isOrthographicCamera===!0),(j.isMeshPhongMaterial||j.isMeshToonMaterial||j.isMeshLambertMaterial||j.isMeshBasicMaterial||j.isMeshStandardMaterial||j.isShaderMaterial||j.isShadowMaterial||ae.isSkinnedMesh)&&Et.setValue(K,"viewMatrix",H.matrixWorldInverse)}if(ae.isSkinnedMesh){Et.setOptional(K,ae,"bindMatrix"),Et.setOptional(K,ae,"bindMatrixInverse");const Bt=ae.skeleton;Bt&&(Ve.floatVertexTextures?(Bt.boneTexture===null&&Bt.computeBoneTexture(),Et.setValue(K,"boneTexture",Bt.boneTexture,se),Et.setValue(K,"boneTextureSize",Bt.boneTextureSize)):Et.setOptional(K,Bt,"boneMatrices"))}const Ti=ee.morphAttributes;return(Ti.position!==void 0||Ti.normal!==void 0||Ti.color!==void 0&&Ve.isWebGL2===!0)&&xe.update(ae,ee,j,rn),(Mn||et.receiveShadow!==ae.receiveShadow)&&(et.receiveShadow=ae.receiveShadow,Et.setValue(K,"receiveShadow",ae.receiveShadow)),Mn&&(Et.setValue(K,"toneMappingExposure",m.toneMappingExposure),et.needsLights&&Xs(Fn,On),He&&j.fog&&ht.refreshFogUniforms(Fn,He),ht.refreshMaterialUniforms(Fn,j,L,Z,J),ui.upload(K,et.uniformsList,Fn,se)),j.isShaderMaterial&&j.uniformsNeedUpdate===!0&&(ui.upload(K,et.uniformsList,Fn,se),j.uniformsNeedUpdate=!1),j.isSpriteMaterial&&Et.setValue(K,"center",ae.center),Et.setValue(K,"modelViewMatrix",ae.modelViewMatrix),Et.setValue(K,"normalMatrix",ae.normalMatrix),Et.setValue(K,"modelMatrix",ae.matrixWorld),rn}function Xs(H,$){H.ambientLightColor.needsUpdate=$,H.lightProbe.needsUpdate=$,H.directionalLights.needsUpdate=$,H.directionalLightShadows.needsUpdate=$,H.pointLights.needsUpdate=$,H.pointLightShadows.needsUpdate=$,H.spotLights.needsUpdate=$,H.spotLightShadows.needsUpdate=$,H.rectAreaLights.needsUpdate=$,H.hemisphereLights.needsUpdate=$}function bi(H){return H.isMeshLambertMaterial||H.isMeshToonMaterial||H.isMeshPhongMaterial||H.isMeshStandardMaterial||H.isShadowMaterial||H.isShaderMaterial&&H.lights===!0}this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return C},this.setRenderTargetTextures=function(H,$,ee){re.get(H.texture).__webglTexture=$,re.get(H.depthTexture).__webglTexture=ee;const j=re.get(H);j.__hasExternalTextures=!0,j.__hasExternalTextures&&(j.__autoAllocateDepthBuffer=ee===void 0,j.__autoAllocateDepthBuffer||ze.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),j.__useRenderToTexture=!1))},this.setRenderTargetFramebuffer=function(H,$){const ee=re.get(H);ee.__webglFramebuffer=$,ee.__useDefaultFramebuffer=$===void 0},this.setRenderTarget=function(H,$=0,ee=0){C=H,E=$,b=ee;let j=!0;if(H){const Be=re.get(H);Be.__useDefaultFramebuffer!==void 0?(de.bindFramebuffer(K.FRAMEBUFFER,null),j=!1):Be.__webglFramebuffer===void 0?se.setupRenderTarget(H):Be.__hasExternalTextures&&se.rebindTextures(H,re.get(H.texture).__webglTexture,re.get(H.depthTexture).__webglTexture)}let ae=null,He=!1,ke=!1;if(H){const Be=H.texture;(Be.isData3DTexture||Be.isDataArrayTexture)&&(ke=!0);const it=re.get(H).__webglFramebuffer;H.isWebGLCubeRenderTarget?(ae=it[$],He=!0):Ve.isWebGL2&&H.samples>0&&se.useMultisampledRTT(H)===!1?ae=re.get(H).__webglMultisampledFramebuffer:ae=it,O.copy(H.viewport),V.copy(H.scissor),U=H.scissorTest}else O.copy(z).multiplyScalar(L).floor(),V.copy(N).multiplyScalar(L).floor(),U=R;if(de.bindFramebuffer(K.FRAMEBUFFER,ae)&&Ve.drawBuffers&&j&&de.drawBuffers(H,ae),de.viewport(O),de.scissor(V),de.setScissorTest(U),He){const Be=re.get(H.texture);K.framebufferTexture2D(K.FRAMEBUFFER,K.COLOR_ATTACHMENT0,K.TEXTURE_CUBE_MAP_POSITIVE_X+$,Be.__webglTexture,ee)}else if(ke){const Be=re.get(H.texture),it=$||0;K.framebufferTextureLayer(K.FRAMEBUFFER,K.COLOR_ATTACHMENT0,Be.__webglTexture,ee||0,it)}S=-1},this.readRenderTargetPixels=function(H,$,ee,j,ae,He,ke){if(!(H&&H.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ye=re.get(H).__webglFramebuffer;if(H.isWebGLCubeRenderTarget&&ke!==void 0&&(Ye=Ye[ke]),Ye){de.bindFramebuffer(K.FRAMEBUFFER,Ye);try{const Be=H.texture,it=Be.format,Ze=Be.type;if(it!==$t&&ie.convert(it)!==K.getParameter(K.IMPLEMENTATION_COLOR_READ_FORMAT)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}const je=Ze===Gi&&(ze.has("EXT_color_buffer_half_float")||Ve.isWebGL2&&ze.has("EXT_color_buffer_float"));if(Ze!==pi&&ie.convert(Ze)!==K.getParameter(K.IMPLEMENTATION_COLOR_READ_TYPE)&&!(Ze===Wn&&(Ve.isWebGL2||ze.has("OES_texture_float")||ze.has("WEBGL_color_buffer_float")))&&!je){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}$>=0&&$<=H.width-j&&ee>=0&&ee<=H.height-ae&&K.readPixels($,ee,j,ae,ie.convert(it),ie.convert(Ze),He)}finally{const Be=C!==null?re.get(C).__webglFramebuffer:null;de.bindFramebuffer(K.FRAMEBUFFER,Be)}}},this.copyFramebufferToTexture=function(H,$,ee=0){if($.isFramebufferTexture!==!0){console.error("THREE.WebGLRenderer: copyFramebufferToTexture() can only be used with FramebufferTexture.");return}const j=Math.pow(2,-ee),ae=Math.floor($.image.width*j),He=Math.floor($.image.height*j);se.setTexture2D($,0),K.copyTexSubImage2D(K.TEXTURE_2D,ee,0,0,H.x,H.y,ae,He),de.unbindTexture()},this.copyTextureToTexture=function(H,$,ee,j=0){const ae=$.image.width,He=$.image.height,ke=ie.convert(ee.format),Ye=ie.convert(ee.type);se.setTexture2D(ee,0),K.pixelStorei(K.UNPACK_FLIP_Y_WEBGL,ee.flipY),K.pixelStorei(K.UNPACK_PREMULTIPLY_ALPHA_WEBGL,ee.premultiplyAlpha),K.pixelStorei(K.UNPACK_ALIGNMENT,ee.unpackAlignment),$.isDataTexture?K.texSubImage2D(K.TEXTURE_2D,j,H.x,H.y,ae,He,ke,Ye,$.image.data):$.isCompressedTexture?K.compressedTexSubImage2D(K.TEXTURE_2D,j,H.x,H.y,$.mipmaps[0].width,$.mipmaps[0].height,ke,$.mipmaps[0].data):K.texSubImage2D(K.TEXTURE_2D,j,H.x,H.y,ke,Ye,$.image),j===0&&ee.generateMipmaps&&K.generateMipmap(K.TEXTURE_2D),de.unbindTexture()},this.copyTextureToTexture3D=function(H,$,ee,j,ae=0){if(m.isWebGL1Renderer){console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.");return}const He=H.max.x-H.min.x+1,ke=H.max.y-H.min.y+1,Ye=H.max.z-H.min.z+1,Be=ie.convert(j.format),it=ie.convert(j.type);let Ze;if(j.isData3DTexture)se.setTexture3D(j,0),Ze=K.TEXTURE_3D;else if(j.isDataArrayTexture)se.setTexture2DArray(j,0),Ze=K.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}K.pixelStorei(K.UNPACK_FLIP_Y_WEBGL,j.flipY),K.pixelStorei(K.UNPACK_PREMULTIPLY_ALPHA_WEBGL,j.premultiplyAlpha),K.pixelStorei(K.UNPACK_ALIGNMENT,j.unpackAlignment);const je=K.getParameter(K.UNPACK_ROW_LENGTH),ot=K.getParameter(K.UNPACK_IMAGE_HEIGHT),Dn=K.getParameter(K.UNPACK_SKIP_PIXELS),xn=K.getParameter(K.UNPACK_SKIP_ROWS),Jn=K.getParameter(K.UNPACK_SKIP_IMAGES),nn=ee.isCompressedTexture?ee.mipmaps[0]:ee.image;K.pixelStorei(K.UNPACK_ROW_LENGTH,nn.width),K.pixelStorei(K.UNPACK_IMAGE_HEIGHT,nn.height),K.pixelStorei(K.UNPACK_SKIP_PIXELS,H.min.x),K.pixelStorei(K.UNPACK_SKIP_ROWS,H.min.y),K.pixelStorei(K.UNPACK_SKIP_IMAGES,H.min.z),ee.isDataTexture||ee.isData3DTexture?K.texSubImage3D(Ze,ae,$.x,$.y,$.z,He,ke,Ye,Be,it,nn.data):ee.isCompressedTexture?(console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: untested support for compressed srcTexture."),K.compressedTexSubImage3D(Ze,ae,$.x,$.y,$.z,He,ke,Ye,Be,nn.data)):K.texSubImage3D(Ze,ae,$.x,$.y,$.z,He,ke,Ye,Be,it,nn),K.pixelStorei(K.UNPACK_ROW_LENGTH,je),K.pixelStorei(K.UNPACK_IMAGE_HEIGHT,ot),K.pixelStorei(K.UNPACK_SKIP_PIXELS,Dn),K.pixelStorei(K.UNPACK_SKIP_ROWS,xn),K.pixelStorei(K.UNPACK_SKIP_IMAGES,Jn),ae===0&&j.generateMipmaps&&K.generateMipmap(Ze),de.unbindTexture()},this.initTexture=function(H){se.setTexture2D(H,0),de.unbindTexture()},this.resetState=function(){E=0,b=0,C=null,de.reset(),Ce.reset()},typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}at.prototype.isWebGLRenderer=!0;class Od extends at{}Od.prototype.isWebGL1Renderer=!0;class Bs{constructor(e,t=25e-5){this.name="",this.color=new Me(e),this.density=t}clone(){return new Bs(this.color,this.density)}toJSON(){return{type:"FogExp2",color:this.color.getHex(),density:this.density}}}Bs.prototype.isFogExp2=!0;class Hs{constructor(e,t=1,n=1e3){this.name="",this.color=new Me(e),this.near=t,this.far=n}clone(){return new Hs(this.color,this.near,this.far)}toJSON(){return{type:"Fog",color:this.color.getHex(),near:this.near,far:this.far}}}Hs.prototype.isFog=!0;class ha extends Je{constructor(){super(),this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.overrideMaterial=null,this.autoUpdate=!0,typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(e,t){return super.copy(e,t),e.background!==null&&(this.background=e.background.clone()),e.environment!==null&&(this.environment=e.environment.clone()),e.fog!==null&&(this.fog=e.fog.clone()),e.overrideMaterial!==null&&(this.overrideMaterial=e.overrideMaterial.clone()),this.autoUpdate=e.autoUpdate,this.matrixAutoUpdate=e.matrixAutoUpdate,this}toJSON(e){const t=super.toJSON(e);return this.fog!==null&&(t.object.fog=this.fog.toJSON()),t}}ha.prototype.isScene=!0;class sr{constructor(e,t){this.array=e,this.stride=t,this.count=e!==void 0?e.length/t:0,this.usage=Ir,this.updateRange={offset:0,count:-1},this.version=0,this.uuid=Jt()}onUploadCallback(){}set needsUpdate(e){e===!0&&this.version++}setUsage(e){return this.usage=e,this}copy(e){return this.array=new e.array.constructor(e.array),this.count=e.count,this.stride=e.stride,this.usage=e.usage,this}copyAt(e,t,n){e*=this.stride,n*=t.stride;for(let i=0,s=this.stride;i<s;i++)this.array[e+i]=t.array[n+i];return this}set(e,t=0){return this.array.set(e,t),this}clone(e){e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Jt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const t=new this.array.constructor(e.arrayBuffers[this.array.buffer._uuid]),n=new this.constructor(t,this.stride);return n.setUsage(this.usage),n}onUpload(e){return this.onUploadCallback=e,this}toJSON(e){return e.arrayBuffers===void 0&&(e.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Jt()),e.arrayBuffers[this.array.buffer._uuid]===void 0&&(e.arrayBuffers[this.array.buffer._uuid]=Array.prototype.slice.call(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}sr.prototype.isInterleavedBuffer=!0;const Ht=new D;class mi{constructor(e,t,n,i=!1){this.name="",this.data=e,this.itemSize=t,this.offset=n,this.normalized=i===!0}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(e){this.data.needsUpdate=e}applyMatrix4(e){for(let t=0,n=this.data.count;t<n;t++)Ht.fromBufferAttribute(this,t),Ht.applyMatrix4(e),this.setXYZ(t,Ht.x,Ht.y,Ht.z);return this}applyNormalMatrix(e){for(let t=0,n=this.count;t<n;t++)Ht.fromBufferAttribute(this,t),Ht.applyNormalMatrix(e),this.setXYZ(t,Ht.x,Ht.y,Ht.z);return this}transformDirection(e){for(let t=0,n=this.count;t<n;t++)Ht.fromBufferAttribute(this,t),Ht.transformDirection(e),this.setXYZ(t,Ht.x,Ht.y,Ht.z);return this}setX(e,t){return this.data.array[e*this.data.stride+this.offset]=t,this}setY(e,t){return this.data.array[e*this.data.stride+this.offset+1]=t,this}setZ(e,t){return this.data.array[e*this.data.stride+this.offset+2]=t,this}setW(e,t){return this.data.array[e*this.data.stride+this.offset+3]=t,this}getX(e){return this.data.array[e*this.data.stride+this.offset]}getY(e){return this.data.array[e*this.data.stride+this.offset+1]}getZ(e){return this.data.array[e*this.data.stride+this.offset+2]}getW(e){return this.data.array[e*this.data.stride+this.offset+3]}setXY(e,t,n){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this}setXYZ(e,t,n,i){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this}setXYZW(e,t,n,i,s){return e=e*this.data.stride+this.offset,this.data.array[e+0]=t,this.data.array[e+1]=n,this.data.array[e+2]=i,this.data.array[e+3]=s,this}clone(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return new tt(new this.array.constructor(t),this.itemSize,this.normalized)}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.clone(e)),new mi(e.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(e){if(e===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.");const t=[];for(let n=0;n<this.count;n++){const i=n*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)t.push(this.data.array[i+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:t,normalized:this.normalized}}else return e.interleavedBuffers===void 0&&(e.interleavedBuffers={}),e.interleavedBuffers[this.data.uuid]===void 0&&(e.interleavedBuffers[this.data.uuid]=this.data.toJSON(e)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}mi.prototype.isInterleavedBufferAttribute=!0;class ua extends Mt{constructor(e){super(),this.type="SpriteMaterial",this.color=new Me(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.rotation=e.rotation,this.sizeAttenuation=e.sizeAttenuation,this}}ua.prototype.isSpriteMaterial=!0;let wr;const as=new D,br=new D,Tr=new D,Sr=new le,ls=new le,Fd=new Ae,go=new D,cs=new D,vo=new D,Mh=new le,tl=new le,Eh=new le;class da extends Je{constructor(e){if(super(),this.type="Sprite",wr===void 0){wr=new Ue;const t=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),n=new sr(t,5);wr.setIndex([0,1,2,0,2,3]),wr.setAttribute("position",new mi(n,3,0,!1)),wr.setAttribute("uv",new mi(n,2,3,!1))}this.geometry=wr,this.material=e!==void 0?e:new ua,this.center=new le(.5,.5)}raycast(e,t){e.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),br.setFromMatrixScale(this.matrixWorld),Fd.copy(e.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(e.camera.matrixWorldInverse,this.matrixWorld),Tr.setFromMatrixPosition(this.modelViewMatrix),e.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&br.multiplyScalar(-Tr.z);const n=this.material.rotation;let i,s;n!==0&&(s=Math.cos(n),i=Math.sin(n));const o=this.center;_o(go.set(-.5,-.5,0),Tr,o,br,i,s),_o(cs.set(.5,-.5,0),Tr,o,br,i,s),_o(vo.set(.5,.5,0),Tr,o,br,i,s),Mh.set(0,0),tl.set(1,0),Eh.set(1,1);let a=e.ray.intersectTriangle(go,cs,vo,!1,as);if(a===null&&(_o(cs.set(-.5,.5,0),Tr,o,br,i,s),tl.set(0,1),a=e.ray.intersectTriangle(go,vo,cs,!1,as),a===null))return;const c=e.ray.origin.distanceTo(as);c<e.near||c>e.far||t.push({distance:c,point:as.clone(),uv:xt.getUV(as,go,cs,vo,Mh,tl,Eh,new le),face:null,object:this})}copy(e){return super.copy(e),e.center!==void 0&&this.center.copy(e.center),this.material=e.material,this}}da.prototype.isSprite=!0;function _o(r,e,t,n,i,s){Sr.subVectors(r,t).addScalar(.5).multiply(n),i!==void 0?(ls.x=s*Sr.x-i*Sr.y,ls.y=i*Sr.x+s*Sr.y):ls.copy(Sr),r.copy(e),r.x+=ls.x,r.y+=ls.y,r.applyMatrix4(Fd)}const yo=new D,wh=new D;class Ud extends Je{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(e){super.copy(e,!1);const t=e.levels;for(let n=0,i=t.length;n<i;n++){const s=t[n];this.addLevel(s.object.clone(),s.distance)}return this.autoUpdate=e.autoUpdate,this}addLevel(e,t=0){t=Math.abs(t);const n=this.levels;let i;for(i=0;i<n.length&&!(t<n[i].distance);i++);return n.splice(i,0,{distance:t,object:e}),this.add(e),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(e){const t=this.levels;if(t.length>0){let n,i;for(n=1,i=t.length;n<i&&!(e<t[n].distance);n++);return t[n-1].object}return null}raycast(e,t){if(this.levels.length>0){yo.setFromMatrixPosition(this.matrixWorld);const i=e.ray.origin.distanceTo(yo);this.getObjectForDistance(i).raycast(e,t)}}update(e){const t=this.levels;if(t.length>1){yo.setFromMatrixPosition(e.matrixWorld),wh.setFromMatrixPosition(this.matrixWorld);const n=yo.distanceTo(wh)/e.zoom;t[0].object.visible=!0;let i,s;for(i=1,s=t.length;i<s&&n>=t[i].distance;i++)t[i-1].object.visible=!1,t[i].object.visible=!0;for(this._currentLevel=i-1;i<s;i++)t[i].object.visible=!1}}toJSON(e){const t=super.toJSON(e);this.autoUpdate===!1&&(t.object.autoUpdate=!1),t.object.levels=[];const n=this.levels;for(let i=0,s=n.length;i<s;i++){const o=n[i];t.object.levels.push({object:o.object.uuid,distance:o.distance})}return t}}const bh=new D,Th=new st,Sh=new st,M0=new D,Ah=new Ae;class fa extends St{constructor(e,t){super(e,t),this.type="SkinnedMesh",this.bindMode="attached",this.bindMatrix=new Ae,this.bindMatrixInverse=new Ae}copy(e){return super.copy(e),this.bindMode=e.bindMode,this.bindMatrix.copy(e.bindMatrix),this.bindMatrixInverse.copy(e.bindMatrixInverse),this.skeleton=e.skeleton,this}bind(e,t){this.skeleton=e,t===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),t=this.matrixWorld),this.bindMatrix.copy(t),this.bindMatrixInverse.copy(t).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const e=new st,t=this.geometry.attributes.skinWeight;for(let n=0,i=t.count;n<i;n++){e.fromBufferAttribute(t,n);const s=1/e.manhattanLength();s!==1/0?e.multiplyScalar(s):e.set(1,0,0,0),t.setXYZW(n,e.x,e.y,e.z,e.w)}}updateMatrixWorld(e){super.updateMatrixWorld(e),this.bindMode==="attached"?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode==="detached"?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}boneTransform(e,t){const n=this.skeleton,i=this.geometry;Th.fromBufferAttribute(i.attributes.skinIndex,e),Sh.fromBufferAttribute(i.attributes.skinWeight,e),bh.copy(t).applyMatrix4(this.bindMatrix),t.set(0,0,0);for(let s=0;s<4;s++){const o=Sh.getComponent(s);if(o!==0){const a=Th.getComponent(s);Ah.multiplyMatrices(n.bones[a].matrixWorld,n.boneInverses[a]),t.addScaledVector(M0.copy(bh).applyMatrix4(Ah),o)}}return t.applyMatrix4(this.bindMatrixInverse)}}fa.prototype.isSkinnedMesh=!0;class pa extends Je{constructor(){super(),this.type="Bone"}}pa.prototype.isBone=!0;class qi extends At{constructor(e=null,t=1,n=1,i,s,o,a,c,h=Tt,u=Tt,f,d){super(null,o,a,c,h,u,i,s,f,d),this.image={data:e,width:t,height:n},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}qi.prototype.isDataTexture=!0;const Rh=new Ae,E0=new Ae;class ma{constructor(e=[],t=[]){this.uuid=Jt(),this.bones=e.slice(0),this.boneInverses=t,this.boneMatrices=null,this.boneTexture=null,this.boneTextureSize=0,this.frame=-1,this.init()}init(){const e=this.bones,t=this.boneInverses;if(this.boneMatrices=new Float32Array(e.length*16),t.length===0)this.calculateInverses();else if(e.length!==t.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let n=0,i=this.bones.length;n<i;n++)this.boneInverses.push(new Ae)}}calculateInverses(){this.boneInverses.length=0;for(let e=0,t=this.bones.length;e<t;e++){const n=new Ae;this.bones[e]&&n.copy(this.bones[e].matrixWorld).invert(),this.boneInverses.push(n)}}pose(){for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&n.matrixWorld.copy(this.boneInverses[e]).invert()}for(let e=0,t=this.bones.length;e<t;e++){const n=this.bones[e];n&&(n.parent&&n.parent.isBone?(n.matrix.copy(n.parent.matrixWorld).invert(),n.matrix.multiply(n.matrixWorld)):n.matrix.copy(n.matrixWorld),n.matrix.decompose(n.position,n.quaternion,n.scale))}}update(){const e=this.bones,t=this.boneInverses,n=this.boneMatrices,i=this.boneTexture;for(let s=0,o=e.length;s<o;s++){const a=e[s]?e[s].matrixWorld:E0;Rh.multiplyMatrices(a,t[s]),Rh.toArray(n,s*16)}i!==null&&(i.needsUpdate=!0)}clone(){return new ma(this.bones,this.boneInverses)}computeBoneTexture(){let e=Math.sqrt(this.bones.length*4);e=hd(e),e=Math.max(e,4);const t=new Float32Array(e*e*4);t.set(this.boneMatrices);const n=new qi(t,e,e,$t,Wn);return n.needsUpdate=!0,this.boneMatrices=t,this.boneTexture=n,this.boneTextureSize=e,this}getBoneByName(e){for(let t=0,n=this.bones.length;t<n;t++){const i=this.bones[t];if(i.name===e)return i}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(e,t){this.uuid=e.uuid;for(let n=0,i=e.bones.length;n<i;n++){const s=e.bones[n];let o=t[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new pa),this.bones.push(o),this.boneInverses.push(new Ae().fromArray(e.boneInverses[n]))}return this.init(),this}toJSON(){const e={metadata:{version:4.5,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};e.uuid=this.uuid;const t=this.bones,n=this.boneInverses;for(let i=0,s=t.length;i<s;i++){const o=t[i];e.bones.push(o.uuid);const a=n[i];e.boneInverses.push(a.toArray())}return e}}class ji extends tt{constructor(e,t,n,i=1){typeof n=="number"&&(i=n,n=!1,console.error("THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.")),super(e,t,n),this.meshPerAttribute=i}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}toJSON(){const e=super.toJSON();return e.meshPerAttribute=this.meshPerAttribute,e.isInstancedBufferAttribute=!0,e}}ji.prototype.isInstancedBufferAttribute=!0;const Ch=new Ae,Lh=new Ae,xo=[],hs=new St;class nc extends St{constructor(e,t,n){super(e,t),this.instanceMatrix=new ji(new Float32Array(n*16),16),this.instanceColor=null,this.count=n,this.frustumCulled=!1}copy(e){return super.copy(e),this.instanceMatrix.copy(e.instanceMatrix),e.instanceColor!==null&&(this.instanceColor=e.instanceColor.clone()),this.count=e.count,this}getColorAt(e,t){t.fromArray(this.instanceColor.array,e*3)}getMatrixAt(e,t){t.fromArray(this.instanceMatrix.array,e*16)}raycast(e,t){const n=this.matrixWorld,i=this.count;if(hs.geometry=this.geometry,hs.material=this.material,hs.material!==void 0)for(let s=0;s<i;s++){this.getMatrixAt(s,Ch),Lh.multiplyMatrices(n,Ch),hs.matrixWorld=Lh,hs.raycast(e,xo);for(let o=0,a=xo.length;o<a;o++){const c=xo[o];c.instanceId=s,c.object=this,t.push(c)}xo.length=0}}setColorAt(e,t){this.instanceColor===null&&(this.instanceColor=new ji(new Float32Array(this.instanceMatrix.count*3),3)),t.toArray(this.instanceColor.array,e*3)}setMatrixAt(e,t){t.toArray(this.instanceMatrix.array,e*16)}updateMorphTargets(){}dispose(){this.dispatchEvent({type:"dispose"})}}nc.prototype.isInstancedMesh=!0;class Dt extends Mt{constructor(e){super(),this.type="LineBasicMaterial",this.color=new Me(16777215),this.linewidth=1,this.linecap="round",this.linejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.linewidth=e.linewidth,this.linecap=e.linecap,this.linejoin=e.linejoin,this}}Dt.prototype.isLineBasicMaterial=!0;const Ph=new D,Ih=new D,Dh=new Ae,nl=new Mi,Mo=new xi;class Zn extends Je{constructor(e=new Ue,t=new Dt){super(),this.type="Line",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[0];for(let i=1,s=t.count;i<s;i++)Ph.fromBufferAttribute(t,i-1),Ih.fromBufferAttribute(t,i),n[i]=n[i-1],n[i]+=Ph.distanceTo(Ih);e.setAttribute("lineDistance",new Se(n,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Line.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Mo.copy(n.boundingSphere),Mo.applyMatrix4(i),Mo.radius+=s,e.ray.intersectsSphere(Mo)===!1)return;Dh.copy(i).invert(),nl.copy(e.ray).applyMatrix4(Dh);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a,h=new D,u=new D,f=new D,d=new D,p=this.isLineSegments?2:1;if(n.isBufferGeometry){const v=n.index,g=n.attributes.position;if(v!==null){const E=Math.max(0,o.start),b=Math.min(v.count,o.start+o.count);for(let C=E,S=b-1;C<S;C+=p){const A=v.getX(C),O=v.getX(C+1);if(h.fromBufferAttribute(g,A),u.fromBufferAttribute(g,O),nl.distanceSqToSegment(h,u,d,f)>c)continue;d.applyMatrix4(this.matrixWorld);const U=e.ray.origin.distanceTo(d);U<e.near||U>e.far||t.push({distance:U,point:f.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}else{const E=Math.max(0,o.start),b=Math.min(g.count,o.start+o.count);for(let C=E,S=b-1;C<S;C+=p){if(h.fromBufferAttribute(g,C),u.fromBufferAttribute(g,C+1),nl.distanceSqToSegment(h,u,d,f)>c)continue;d.applyMatrix4(this.matrixWorld);const O=e.ray.origin.distanceTo(d);O<e.near||O>e.far||t.push({distance:O,point:f.clone().applyMatrix4(this.matrixWorld),index:C,face:null,faceIndex:null,object:this})}}}else n.isGeometry&&console.error("THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}Zn.prototype.isLine=!0;const Nh=new D,Oh=new D;class qt extends Zn{constructor(e,t){super(e,t),this.type="LineSegments"}computeLineDistances(){const e=this.geometry;if(e.isBufferGeometry)if(e.index===null){const t=e.attributes.position,n=[];for(let i=0,s=t.count;i<s;i+=2)Nh.fromBufferAttribute(t,i),Oh.fromBufferAttribute(t,i+1),n[i]=i===0?0:n[i-1],n[i+1]=n[i]+Nh.distanceTo(Oh);e.setAttribute("lineDistance",new Se(n,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");else e.isGeometry&&console.error("THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.");return this}}qt.prototype.isLineSegments=!0;class ic extends Zn{constructor(e,t){super(e,t),this.type="LineLoop"}}ic.prototype.isLineLoop=!0;class or extends Mt{constructor(e){super(),this.type="PointsMaterial",this.color=new Me(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.alphaMap=e.alphaMap,this.size=e.size,this.sizeAttenuation=e.sizeAttenuation,this}}or.prototype.isPointsMaterial=!0;const Fh=new Ae,kl=new Mi,Eo=new xi,wo=new D;class zs extends Je{constructor(e=new Ue,t=new or){super(),this.type="Points",this.geometry=e,this.material=t,this.updateMorphTargets()}copy(e){return super.copy(e),this.material=e.material,this.geometry=e.geometry,this}raycast(e,t){const n=this.geometry,i=this.matrixWorld,s=e.params.Points.threshold,o=n.drawRange;if(n.boundingSphere===null&&n.computeBoundingSphere(),Eo.copy(n.boundingSphere),Eo.applyMatrix4(i),Eo.radius+=s,e.ray.intersectsSphere(Eo)===!1)return;Fh.copy(i).invert(),kl.copy(e.ray).applyMatrix4(Fh);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),c=a*a;if(n.isBufferGeometry){const h=n.index,f=n.attributes.position;if(h!==null){const d=Math.max(0,o.start),p=Math.min(h.count,o.start+o.count);for(let v=d,m=p;v<m;v++){const g=h.getX(v);wo.fromBufferAttribute(f,g),Uh(wo,g,c,i,e,t,this)}}else{const d=Math.max(0,o.start),p=Math.min(f.count,o.start+o.count);for(let v=d,m=p;v<m;v++)wo.fromBufferAttribute(f,v),Uh(wo,v,c,i,e,t,this)}}else console.error("THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.")}updateMorphTargets(){const e=this.geometry;if(e.isBufferGeometry){const t=e.morphAttributes,n=Object.keys(t);if(n.length>0){const i=t[n[0]];if(i!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=i.length;s<o;s++){const a=i[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}else{const t=e.morphTargets;t!==void 0&&t.length>0&&console.error("THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.")}}}zs.prototype.isPoints=!0;function Uh(r,e,t,n,i,s,o){const a=kl.distanceSqToPoint(r);if(a<t){const c=new D;kl.closestPointToPoint(r,c),c.applyMatrix4(n);const h=i.ray.origin.distanceTo(c);if(h<i.near||h>i.far)return;s.push({distance:h,distanceToRay:Math.sqrt(a),point:c,index:e,face:null,object:o})}}class Bd extends At{constructor(e,t,n,i,s,o,a,c,h){super(e,t,n,i,s,o,a,c,h),this.minFilter=o!==void 0?o:_t,this.magFilter=s!==void 0?s:_t,this.generateMipmaps=!1;const u=this;function f(){u.needsUpdate=!0,e.requestVideoFrameCallback(f)}"requestVideoFrameCallback"in e&&e.requestVideoFrameCallback(f)}clone(){return new this.constructor(this.image).copy(this)}update(){const e=this.image;"requestVideoFrameCallback"in e===!1&&e.readyState>=e.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}Bd.prototype.isVideoTexture=!0;class Hd extends At{constructor(e,t,n){super({width:e,height:t}),this.format=n,this.magFilter=Tt,this.minFilter=Tt,this.generateMipmaps=!1,this.needsUpdate=!0}}Hd.prototype.isFramebufferTexture=!0;class rc extends At{constructor(e,t,n,i,s,o,a,c,h,u,f,d){super(null,o,a,c,h,u,i,s,f,d),this.image={width:t,height:n},this.mipmaps=e,this.flipY=!1,this.generateMipmaps=!1}}rc.prototype.isCompressedTexture=!0;class zd extends At{constructor(e,t,n,i,s,o,a,c,h){super(e,t,n,i,s,o,a,c,h),this.needsUpdate=!0}}zd.prototype.isCanvasTexture=!0;class Qt{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(e,t){const n=this.getUtoTmapping(e);return this.getPoint(n,t)}getPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return t}getSpacedPoints(e=5){const t=[];for(let n=0;n<=e;n++)t.push(this.getPointAt(n/e));return t}getLength(){const e=this.getLengths();return e[e.length-1]}getLengths(e=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===e+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const t=[];let n,i=this.getPoint(0),s=0;t.push(0);for(let o=1;o<=e;o++)n=this.getPoint(o/e),s+=n.distanceTo(i),t.push(s),i=n;return this.cacheArcLengths=t,t}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(e,t){const n=this.getLengths();let i=0;const s=n.length;let o;t?o=t:o=e*n[s-1];let a=0,c=s-1,h;for(;a<=c;)if(i=Math.floor(a+(c-a)/2),h=n[i]-o,h<0)a=i+1;else if(h>0)c=i-1;else{c=i;break}if(i=c,n[i]===o)return i/(s-1);const u=n[i],d=n[i+1]-u,p=(o-u)/d;return(i+p)/(s-1)}getTangent(e,t){let i=e-1e-4,s=e+1e-4;i<0&&(i=0),s>1&&(s=1);const o=this.getPoint(i),a=this.getPoint(s),c=t||(o.isVector2?new le:new D);return c.copy(a).sub(o).normalize(),c}getTangentAt(e,t){const n=this.getUtoTmapping(e);return this.getTangent(n,t)}computeFrenetFrames(e,t){const n=new D,i=[],s=[],o=[],a=new D,c=new Ae;for(let p=0;p<=e;p++){const v=p/e;i[p]=this.getTangentAt(v,new D)}s[0]=new D,o[0]=new D;let h=Number.MAX_VALUE;const u=Math.abs(i[0].x),f=Math.abs(i[0].y),d=Math.abs(i[0].z);u<=h&&(h=u,n.set(1,0,0)),f<=h&&(h=f,n.set(0,1,0)),d<=h&&n.set(0,0,1),a.crossVectors(i[0],n).normalize(),s[0].crossVectors(i[0],a),o[0].crossVectors(i[0],s[0]);for(let p=1;p<=e;p++){if(s[p]=s[p-1].clone(),o[p]=o[p-1].clone(),a.crossVectors(i[p-1],i[p]),a.length()>Number.EPSILON){a.normalize();const v=Math.acos(yt(i[p-1].dot(i[p]),-1,1));s[p].applyMatrix4(c.makeRotationAxis(a,v))}o[p].crossVectors(i[p],s[p])}if(t===!0){let p=Math.acos(yt(s[0].dot(s[e]),-1,1));p/=e,i[0].dot(a.crossVectors(s[0],s[e]))>0&&(p=-p);for(let v=1;v<=e;v++)s[v].applyMatrix4(c.makeRotationAxis(i[v],p*v)),o[v].crossVectors(i[v],s[v])}return{tangents:i,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}toJSON(){const e={metadata:{version:4.5,type:"Curve",generator:"Curve.toJSON"}};return e.arcLengthDivisions=this.arcLengthDivisions,e.type=this.type,e}fromJSON(e){return this.arcLengthDivisions=e.arcLengthDivisions,this}}class ks extends Qt{constructor(e=0,t=0,n=1,i=1,s=0,o=Math.PI*2,a=!1,c=0){super(),this.type="EllipseCurve",this.aX=e,this.aY=t,this.xRadius=n,this.yRadius=i,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=c}getPoint(e,t){const n=t||new le,i=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=i;for(;s>i;)s-=i;s<Number.EPSILON&&(o?s=0:s=i),this.aClockwise===!0&&!o&&(s===i?s=-i:s=s-i);const a=this.aStartAngle+e*s;let c=this.aX+this.xRadius*Math.cos(a),h=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const u=Math.cos(this.aRotation),f=Math.sin(this.aRotation),d=c-this.aX,p=h-this.aY;c=d*u-p*f+this.aX,h=d*f+p*u+this.aY}return n.set(c,h)}copy(e){return super.copy(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}toJSON(){const e=super.toJSON();return e.aX=this.aX,e.aY=this.aY,e.xRadius=this.xRadius,e.yRadius=this.yRadius,e.aStartAngle=this.aStartAngle,e.aEndAngle=this.aEndAngle,e.aClockwise=this.aClockwise,e.aRotation=this.aRotation,e}fromJSON(e){return super.fromJSON(e),this.aX=e.aX,this.aY=e.aY,this.xRadius=e.xRadius,this.yRadius=e.yRadius,this.aStartAngle=e.aStartAngle,this.aEndAngle=e.aEndAngle,this.aClockwise=e.aClockwise,this.aRotation=e.aRotation,this}}ks.prototype.isEllipseCurve=!0;class sc extends ks{constructor(e,t,n,i,s,o){super(e,t,n,n,i,s,o),this.type="ArcCurve"}}sc.prototype.isArcCurve=!0;function oc(){let r=0,e=0,t=0,n=0;function i(s,o,a,c){r=s,e=a,t=-3*s+3*o-2*a-c,n=2*s-2*o+a+c}return{initCatmullRom:function(s,o,a,c,h){i(o,a,h*(a-s),h*(c-o))},initNonuniformCatmullRom:function(s,o,a,c,h,u,f){let d=(o-s)/h-(a-s)/(h+u)+(a-o)/u,p=(a-o)/u-(c-o)/(u+f)+(c-a)/f;d*=u,p*=u,i(o,a,d,p)},calc:function(s){const o=s*s,a=o*s;return r+e*s+t*o+n*a}}}const bo=new D,il=new oc,rl=new oc,sl=new oc;class ac extends Qt{constructor(e=[],t=!1,n="centripetal",i=.5){super(),this.type="CatmullRomCurve3",this.points=e,this.closed=t,this.curveType=n,this.tension=i}getPoint(e,t=new D){const n=t,i=this.points,s=i.length,o=(s-(this.closed?0:1))*e;let a=Math.floor(o),c=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:c===0&&a===s-1&&(a=s-2,c=1);let h,u;this.closed||a>0?h=i[(a-1)%s]:(bo.subVectors(i[0],i[1]).add(i[0]),h=bo);const f=i[a%s],d=i[(a+1)%s];if(this.closed||a+2<s?u=i[(a+2)%s]:(bo.subVectors(i[s-1],i[s-2]).add(i[s-1]),u=bo),this.curveType==="centripetal"||this.curveType==="chordal"){const p=this.curveType==="chordal"?.5:.25;let v=Math.pow(h.distanceToSquared(f),p),m=Math.pow(f.distanceToSquared(d),p),g=Math.pow(d.distanceToSquared(u),p);m<1e-4&&(m=1),v<1e-4&&(v=m),g<1e-4&&(g=m),il.initNonuniformCatmullRom(h.x,f.x,d.x,u.x,v,m,g),rl.initNonuniformCatmullRom(h.y,f.y,d.y,u.y,v,m,g),sl.initNonuniformCatmullRom(h.z,f.z,d.z,u.z,v,m,g)}else this.curveType==="catmullrom"&&(il.initCatmullRom(h.x,f.x,d.x,u.x,this.tension),rl.initCatmullRom(h.y,f.y,d.y,u.y,this.tension),sl.initCatmullRom(h.z,f.z,d.z,u.z,this.tension));return n.set(il.calc(c),rl.calc(c),sl.calc(c)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e.closed=this.closed,e.curveType=this.curveType,e.tension=this.tension,e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new D().fromArray(i))}return this.closed=e.closed,this.curveType=e.curveType,this.tension=e.tension,this}}ac.prototype.isCatmullRomCurve3=!0;function Bh(r,e,t,n,i){const s=(n-e)*.5,o=(i-t)*.5,a=r*r,c=r*a;return(2*t-2*n+s+o)*c+(-3*t+3*n-2*s-o)*a+s*r+t}function w0(r,e){const t=1-r;return t*t*e}function b0(r,e){return 2*(1-r)*r*e}function T0(r,e){return r*r*e}function ms(r,e,t,n){return w0(r,e)+b0(r,t)+T0(r,n)}function S0(r,e){const t=1-r;return t*t*t*e}function A0(r,e){const t=1-r;return 3*t*t*r*e}function R0(r,e){return 3*(1-r)*r*r*e}function C0(r,e){return r*r*r*e}function gs(r,e,t,n,i){return S0(r,e)+A0(r,t)+R0(r,n)+C0(r,i)}class ga extends Qt{constructor(e=new le,t=new le,n=new le,i=new le){super(),this.type="CubicBezierCurve",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new le){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(gs(e,i.x,s.x,o.x,a.x),gs(e,i.y,s.y,o.y,a.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}ga.prototype.isCubicBezierCurve=!0;class lc extends Qt{constructor(e=new D,t=new D,n=new D,i=new D){super(),this.type="CubicBezierCurve3",this.v0=e,this.v1=t,this.v2=n,this.v3=i}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,o=this.v2,a=this.v3;return n.set(gs(e,i.x,s.x,o.x,a.x),gs(e,i.y,s.y,o.y,a.y),gs(e,i.z,s.z,o.z,a.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this.v3.copy(e.v3),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e.v3=this.v3.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this.v3.fromArray(e.v3),this}}lc.prototype.isCubicBezierCurve3=!0;class Gs extends Qt{constructor(e=new le,t=new le){super(),this.type="LineCurve",this.v1=e,this.v2=t}getPoint(e,t=new le){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}getTangent(e,t){const n=t||new le;return n.copy(this.v2).sub(this.v1).normalize(),n}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}Gs.prototype.isLineCurve=!0;class kd extends Qt{constructor(e=new D,t=new D){super(),this.type="LineCurve3",this.isLineCurve3=!0,this.v1=e,this.v2=t}getPoint(e,t=new D){const n=t;return e===1?n.copy(this.v2):(n.copy(this.v2).sub(this.v1),n.multiplyScalar(e).add(this.v1)),n}getPointAt(e,t){return this.getPoint(e,t)}copy(e){return super.copy(e),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}class va extends Qt{constructor(e=new le,t=new le,n=new le){super(),this.type="QuadraticBezierCurve",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new le){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(ms(e,i.x,s.x,o.x),ms(e,i.y,s.y,o.y)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}va.prototype.isQuadraticBezierCurve=!0;class _a extends Qt{constructor(e=new D,t=new D,n=new D){super(),this.type="QuadraticBezierCurve3",this.v0=e,this.v1=t,this.v2=n}getPoint(e,t=new D){const n=t,i=this.v0,s=this.v1,o=this.v2;return n.set(ms(e,i.x,s.x,o.x),ms(e,i.y,s.y,o.y),ms(e,i.z,s.z,o.z)),n}copy(e){return super.copy(e),this.v0.copy(e.v0),this.v1.copy(e.v1),this.v2.copy(e.v2),this}toJSON(){const e=super.toJSON();return e.v0=this.v0.toArray(),e.v1=this.v1.toArray(),e.v2=this.v2.toArray(),e}fromJSON(e){return super.fromJSON(e),this.v0.fromArray(e.v0),this.v1.fromArray(e.v1),this.v2.fromArray(e.v2),this}}_a.prototype.isQuadraticBezierCurve3=!0;class ya extends Qt{constructor(e=[]){super(),this.type="SplineCurve",this.points=e}getPoint(e,t=new le){const n=t,i=this.points,s=(i.length-1)*e,o=Math.floor(s),a=s-o,c=i[o===0?o:o-1],h=i[o],u=i[o>i.length-2?i.length-1:o+1],f=i[o>i.length-3?i.length-1:o+2];return n.set(Bh(a,c.x,h.x,u.x,f.x),Bh(a,c.y,h.y,u.y,f.y)),n}copy(e){super.copy(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.points=[];for(let t=0,n=this.points.length;t<n;t++){const i=this.points[t];e.points.push(i.toArray())}return e}fromJSON(e){super.fromJSON(e),this.points=[];for(let t=0,n=e.points.length;t<n;t++){const i=e.points[t];this.points.push(new le().fromArray(i))}return this}}ya.prototype.isSplineCurve=!0;var cc=Object.freeze({__proto__:null,ArcCurve:sc,CatmullRomCurve3:ac,CubicBezierCurve:ga,CubicBezierCurve3:lc,EllipseCurve:ks,LineCurve:Gs,LineCurve3:kd,QuadraticBezierCurve:va,QuadraticBezierCurve3:_a,SplineCurve:ya});class Gd extends Qt{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(e){this.curves.push(e)}closePath(){const e=this.curves[0].getPoint(0),t=this.curves[this.curves.length-1].getPoint(1);e.equals(t)||this.curves.push(new Gs(t,e))}getPoint(e,t){const n=e*this.getLength(),i=this.getCurveLengths();let s=0;for(;s<i.length;){if(i[s]>=n){const o=i[s]-n,a=this.curves[s],c=a.getLength(),h=c===0?0:1-o/c;return a.getPointAt(h,t)}s++}return null}getLength(){const e=this.getCurveLengths();return e[e.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const e=[];let t=0;for(let n=0,i=this.curves.length;n<i;n++)t+=this.curves[n].getLength(),e.push(t);return this.cacheLengths=e,e}getSpacedPoints(e=40){const t=[];for(let n=0;n<=e;n++)t.push(this.getPoint(n/e));return this.autoClose&&t.push(t[0]),t}getPoints(e=12){const t=[];let n;for(let i=0,s=this.curves;i<s.length;i++){const o=s[i],a=o.isEllipseCurve?e*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?e*o.points.length:e,c=o.getPoints(a);for(let h=0;h<c.length;h++){const u=c[h];n&&n.equals(u)||(t.push(u),n=u)}}return this.autoClose&&t.length>1&&!t[t.length-1].equals(t[0])&&t.push(t[0]),t}copy(e){super.copy(e),this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(i.clone())}return this.autoClose=e.autoClose,this}toJSON(){const e=super.toJSON();e.autoClose=this.autoClose,e.curves=[];for(let t=0,n=this.curves.length;t<n;t++){const i=this.curves[t];e.curves.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.autoClose=e.autoClose,this.curves=[];for(let t=0,n=e.curves.length;t<n;t++){const i=e.curves[t];this.curves.push(new cc[i.type]().fromJSON(i))}return this}}class Or extends Gd{constructor(e){super(),this.type="Path",this.currentPoint=new le,e&&this.setFromPoints(e)}setFromPoints(e){this.moveTo(e[0].x,e[0].y);for(let t=1,n=e.length;t<n;t++)this.lineTo(e[t].x,e[t].y);return this}moveTo(e,t){return this.currentPoint.set(e,t),this}lineTo(e,t){const n=new Gs(this.currentPoint.clone(),new le(e,t));return this.curves.push(n),this.currentPoint.set(e,t),this}quadraticCurveTo(e,t,n,i){const s=new va(this.currentPoint.clone(),new le(e,t),new le(n,i));return this.curves.push(s),this.currentPoint.set(n,i),this}bezierCurveTo(e,t,n,i,s,o){const a=new ga(this.currentPoint.clone(),new le(e,t),new le(n,i),new le(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(e){const t=[this.currentPoint.clone()].concat(e),n=new ya(t);return this.curves.push(n),this.currentPoint.copy(e[e.length-1]),this}arc(e,t,n,i,s,o){const a=this.currentPoint.x,c=this.currentPoint.y;return this.absarc(e+a,t+c,n,i,s,o),this}absarc(e,t,n,i,s,o){return this.absellipse(e,t,n,n,i,s,o),this}ellipse(e,t,n,i,s,o,a,c){const h=this.currentPoint.x,u=this.currentPoint.y;return this.absellipse(e+h,t+u,n,i,s,o,a,c),this}absellipse(e,t,n,i,s,o,a,c){const h=new ks(e,t,n,i,s,o,a,c);if(this.curves.length>0){const f=h.getPoint(0);f.equals(this.currentPoint)||this.lineTo(f.x,f.y)}this.curves.push(h);const u=h.getPoint(1);return this.currentPoint.copy(u),this}copy(e){return super.copy(e),this.currentPoint.copy(e.currentPoint),this}toJSON(){const e=super.toJSON();return e.currentPoint=this.currentPoint.toArray(),e}fromJSON(e){return super.fromJSON(e),this.currentPoint.fromArray(e.currentPoint),this}}class Ji extends Ue{constructor(e=[new le(0,.5),new le(.5,0),new le(0,-.5)],t=12,n=0,i=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:e,segments:t,phiStart:n,phiLength:i},t=Math.floor(t),i=yt(i,0,Math.PI*2);const s=[],o=[],a=[],c=[],h=[],u=1/t,f=new D,d=new le,p=new D,v=new D,m=new D;let g=0,E=0;for(let b=0;b<=e.length-1;b++)switch(b){case 0:g=e[b+1].x-e[b].x,E=e[b+1].y-e[b].y,p.x=E*1,p.y=-g,p.z=E*0,m.copy(p),p.normalize(),c.push(p.x,p.y,p.z);break;case e.length-1:c.push(m.x,m.y,m.z);break;default:g=e[b+1].x-e[b].x,E=e[b+1].y-e[b].y,p.x=E*1,p.y=-g,p.z=E*0,v.copy(p),p.x+=m.x,p.y+=m.y,p.z+=m.z,p.normalize(),c.push(p.x,p.y,p.z),m.copy(v)}for(let b=0;b<=t;b++){const C=n+b*u*i,S=Math.sin(C),A=Math.cos(C);for(let O=0;O<=e.length-1;O++){f.x=e[O].x*S,f.y=e[O].y,f.z=e[O].x*A,o.push(f.x,f.y,f.z),d.x=b/t,d.y=O/(e.length-1),a.push(d.x,d.y);const V=c[3*O+0]*S,U=c[3*O+1],Q=c[3*O+0]*A;h.push(V,U,Q)}}for(let b=0;b<t;b++)for(let C=0;C<e.length-1;C++){const S=C+b*e.length,A=S,O=S+e.length,V=S+e.length+1,U=S+1;s.push(A,O,U),s.push(V,U,O)}this.setIndex(s),this.setAttribute("position",new Se(o,3)),this.setAttribute("uv",new Se(a,2)),this.setAttribute("normal",new Se(h,3))}static fromJSON(e){return new Ji(e.points,e.segments,e.phiStart,e.phiLength)}}class Fr extends Ji{constructor(e=1,t=1,n=4,i=8){const s=new Or;s.absarc(0,-t/2,e,Math.PI*1.5,0),s.absarc(0,t/2,e,0,Math.PI*.5),super(s.getPoints(n),i),this.type="CapsuleGeometry",this.parameters={radius:e,height:t,capSegments:n,radialSegments:i}}static fromJSON(e){return new Fr(e.radius,e.length,e.capSegments,e.radialSegments)}}class Ur extends Ue{constructor(e=1,t=8,n=0,i=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:e,segments:t,thetaStart:n,thetaLength:i},t=Math.max(3,t);const s=[],o=[],a=[],c=[],h=new D,u=new le;o.push(0,0,0),a.push(0,0,1),c.push(.5,.5);for(let f=0,d=3;f<=t;f++,d+=3){const p=n+f/t*i;h.x=e*Math.cos(p),h.y=e*Math.sin(p),o.push(h.x,h.y,h.z),a.push(0,0,1),u.x=(o[d]/e+1)/2,u.y=(o[d+1]/e+1)/2,c.push(u.x,u.y)}for(let f=1;f<=t;f++)s.push(f,f+1,0);this.setIndex(s),this.setAttribute("position",new Se(o,3)),this.setAttribute("normal",new Se(a,3)),this.setAttribute("uv",new Se(c,2))}static fromJSON(e){return new Ur(e.radius,e.segments,e.thetaStart,e.thetaLength)}}class gi extends Ue{constructor(e=1,t=1,n=1,i=8,s=1,o=!1,a=0,c=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:e,radiusBottom:t,height:n,radialSegments:i,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:c};const h=this;i=Math.floor(i),s=Math.floor(s);const u=[],f=[],d=[],p=[];let v=0;const m=[],g=n/2;let E=0;b(),o===!1&&(e>0&&C(!0),t>0&&C(!1)),this.setIndex(u),this.setAttribute("position",new Se(f,3)),this.setAttribute("normal",new Se(d,3)),this.setAttribute("uv",new Se(p,2));function b(){const S=new D,A=new D;let O=0;const V=(t-e)/n;for(let U=0;U<=s;U++){const Q=[],Z=U/s,L=Z*(t-e)+e;for(let B=0;B<=i;B++){const Y=B/i,z=Y*c+a,N=Math.sin(z),R=Math.cos(z);A.x=L*N,A.y=-Z*n+g,A.z=L*R,f.push(A.x,A.y,A.z),S.set(N,V,R).normalize(),d.push(S.x,S.y,S.z),p.push(Y,1-Z),Q.push(v++)}m.push(Q)}for(let U=0;U<i;U++)for(let Q=0;Q<s;Q++){const Z=m[Q][U],L=m[Q+1][U],B=m[Q+1][U+1],Y=m[Q][U+1];u.push(Z,L,Y),u.push(L,B,Y),O+=6}h.addGroup(E,O,0),E+=O}function C(S){const A=v,O=new le,V=new D;let U=0;const Q=S===!0?e:t,Z=S===!0?1:-1;for(let B=1;B<=i;B++)f.push(0,g*Z,0),d.push(0,Z,0),p.push(.5,.5),v++;const L=v;for(let B=0;B<=i;B++){const z=B/i*c+a,N=Math.cos(z),R=Math.sin(z);V.x=Q*R,V.y=g*Z,V.z=Q*N,f.push(V.x,V.y,V.z),d.push(0,Z,0),O.x=N*.5+.5,O.y=R*.5*Z+.5,p.push(O.x,O.y),v++}for(let B=0;B<i;B++){const Y=A+B,z=L+B;S===!0?u.push(z,z+1,Y):u.push(z+1,z,Y),U+=3}h.addGroup(E,U,S===!0?1:2),E+=U}}static fromJSON(e){return new gi(e.radiusTop,e.radiusBottom,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Br extends gi{constructor(e=1,t=1,n=8,i=1,s=!1,o=0,a=Math.PI*2){super(0,e,t,n,i,s,o,a),this.type="ConeGeometry",this.parameters={radius:e,height:t,radialSegments:n,heightSegments:i,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(e){return new Br(e.radius,e.height,e.radialSegments,e.heightSegments,e.openEnded,e.thetaStart,e.thetaLength)}}class Rn extends Ue{constructor(e=[],t=[],n=1,i=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:e,indices:t,radius:n,detail:i};const s=[],o=[];a(i),h(n),u(),this.setAttribute("position",new Se(s,3)),this.setAttribute("normal",new Se(s.slice(),3)),this.setAttribute("uv",new Se(o,2)),i===0?this.computeVertexNormals():this.normalizeNormals();function a(b){const C=new D,S=new D,A=new D;for(let O=0;O<t.length;O+=3)p(t[O+0],C),p(t[O+1],S),p(t[O+2],A),c(C,S,A,b)}function c(b,C,S,A){const O=A+1,V=[];for(let U=0;U<=O;U++){V[U]=[];const Q=b.clone().lerp(S,U/O),Z=C.clone().lerp(S,U/O),L=O-U;for(let B=0;B<=L;B++)B===0&&U===O?V[U][B]=Q:V[U][B]=Q.clone().lerp(Z,B/L)}for(let U=0;U<O;U++)for(let Q=0;Q<2*(O-U)-1;Q++){const Z=Math.floor(Q/2);Q%2===0?(d(V[U][Z+1]),d(V[U+1][Z]),d(V[U][Z])):(d(V[U][Z+1]),d(V[U+1][Z+1]),d(V[U+1][Z]))}}function h(b){const C=new D;for(let S=0;S<s.length;S+=3)C.x=s[S+0],C.y=s[S+1],C.z=s[S+2],C.normalize().multiplyScalar(b),s[S+0]=C.x,s[S+1]=C.y,s[S+2]=C.z}function u(){const b=new D;for(let C=0;C<s.length;C+=3){b.x=s[C+0],b.y=s[C+1],b.z=s[C+2];const S=g(b)/2/Math.PI+.5,A=E(b)/Math.PI+.5;o.push(S,1-A)}v(),f()}function f(){for(let b=0;b<o.length;b+=6){const C=o[b+0],S=o[b+2],A=o[b+4],O=Math.max(C,S,A),V=Math.min(C,S,A);O>.9&&V<.1&&(C<.2&&(o[b+0]+=1),S<.2&&(o[b+2]+=1),A<.2&&(o[b+4]+=1))}}function d(b){s.push(b.x,b.y,b.z)}function p(b,C){const S=b*3;C.x=e[S+0],C.y=e[S+1],C.z=e[S+2]}function v(){const b=new D,C=new D,S=new D,A=new D,O=new le,V=new le,U=new le;for(let Q=0,Z=0;Q<s.length;Q+=9,Z+=6){b.set(s[Q+0],s[Q+1],s[Q+2]),C.set(s[Q+3],s[Q+4],s[Q+5]),S.set(s[Q+6],s[Q+7],s[Q+8]),O.set(o[Z+0],o[Z+1]),V.set(o[Z+2],o[Z+3]),U.set(o[Z+4],o[Z+5]),A.copy(b).add(C).add(S).divideScalar(3);const L=g(A);m(O,Z+0,b,L),m(V,Z+2,C,L),m(U,Z+4,S,L)}}function m(b,C,S,A){A<0&&b.x===1&&(o[C]=b.x-1),S.x===0&&S.z===0&&(o[C]=A/2/Math.PI+.5)}function g(b){return Math.atan2(b.z,-b.x)}function E(b){return Math.atan2(-b.y,Math.sqrt(b.x*b.x+b.z*b.z))}}static fromJSON(e){return new Rn(e.vertices,e.indices,e.radius,e.details)}}class Hr extends Rn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=1/n,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-i,-n,0,-i,n,0,i,-n,0,i,n,-i,-n,0,-i,n,0,i,-n,0,i,n,0,-n,0,-i,n,0,-i,-n,0,i,n,0,i],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,e,t),this.type="DodecahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Hr(e.radius,e.detail)}}const To=new D,So=new D,ol=new D,Ao=new xt;class hc extends Ue{constructor(e=null,t=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:e,thresholdAngle:t},e!==null){const i=Math.pow(10,4),s=Math.cos(Wi*t),o=e.getIndex(),a=e.getAttribute("position"),c=o?o.count:a.count,h=[0,0,0],u=["a","b","c"],f=new Array(3),d={},p=[];for(let v=0;v<c;v+=3){o?(h[0]=o.getX(v),h[1]=o.getX(v+1),h[2]=o.getX(v+2)):(h[0]=v,h[1]=v+1,h[2]=v+2);const{a:m,b:g,c:E}=Ao;if(m.fromBufferAttribute(a,h[0]),g.fromBufferAttribute(a,h[1]),E.fromBufferAttribute(a,h[2]),Ao.getNormal(ol),f[0]=`${Math.round(m.x*i)},${Math.round(m.y*i)},${Math.round(m.z*i)}`,f[1]=`${Math.round(g.x*i)},${Math.round(g.y*i)},${Math.round(g.z*i)}`,f[2]=`${Math.round(E.x*i)},${Math.round(E.y*i)},${Math.round(E.z*i)}`,!(f[0]===f[1]||f[1]===f[2]||f[2]===f[0]))for(let b=0;b<3;b++){const C=(b+1)%3,S=f[b],A=f[C],O=Ao[u[b]],V=Ao[u[C]],U=`${S}_${A}`,Q=`${A}_${S}`;Q in d&&d[Q]?(ol.dot(d[Q].normal)<=s&&(p.push(O.x,O.y,O.z),p.push(V.x,V.y,V.z)),d[Q]=null):U in d||(d[U]={index0:h[b],index1:h[C],normal:ol.clone()})}}for(const v in d)if(d[v]){const{index0:m,index1:g}=d[v];To.fromBufferAttribute(a,m),So.fromBufferAttribute(a,g),p.push(To.x,To.y,To.z),p.push(So.x,So.y,So.z)}this.setAttribute("position",new Se(p,3))}}}class Tn extends Or{constructor(e){super(e),this.uuid=Jt(),this.type="Shape",this.holes=[]}getPointsHoles(e){const t=[];for(let n=0,i=this.holes.length;n<i;n++)t[n]=this.holes[n].getPoints(e);return t}extractPoints(e){return{shape:this.getPoints(e),holes:this.getPointsHoles(e)}}copy(e){super.copy(e),this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(i.clone())}return this}toJSON(){const e=super.toJSON();e.uuid=this.uuid,e.holes=[];for(let t=0,n=this.holes.length;t<n;t++){const i=this.holes[t];e.holes.push(i.toJSON())}return e}fromJSON(e){super.fromJSON(e),this.uuid=e.uuid,this.holes=[];for(let t=0,n=e.holes.length;t<n;t++){const i=e.holes[t];this.holes.push(new Or().fromJSON(i))}return this}}const L0={triangulate:function(r,e,t=2){const n=e&&e.length,i=n?e[0]*t:r.length;let s=Vd(r,0,i,t,!0);const o=[];if(!s||s.next===s.prev)return o;let a,c,h,u,f,d,p;if(n&&(s=O0(r,e,s,t)),r.length>80*t){a=h=r[0],c=u=r[1];for(let v=t;v<i;v+=t)f=r[v],d=r[v+1],f<a&&(a=f),d<c&&(c=d),f>h&&(h=f),d>u&&(u=d);p=Math.max(h-a,u-c),p=p!==0?1/p:0}return Ss(s,o,t,a,c,p),o}};function Vd(r,e,t,n,i){let s,o;if(i===q0(r,e,t,n)>0)for(s=e;s<t;s+=n)o=Hh(s,r[s],r[s+1],o);else for(s=t-n;s>=e;s-=n)o=Hh(s,r[s],r[s+1],o);return o&&xa(o,o.next)&&(Rs(o),o=o.next),o}function vi(r,e){if(!r)return r;e||(e=r);let t=r,n;do if(n=!1,!t.steiner&&(xa(t,t.next)||mt(t.prev,t,t.next)===0)){if(Rs(t),t=e=t.prev,t===t.next)break;n=!0}else t=t.next;while(n||t!==e);return e}function Ss(r,e,t,n,i,s,o){if(!r)return;!o&&s&&z0(r,n,i,s);let a=r,c,h;for(;r.prev!==r.next;){if(c=r.prev,h=r.next,s?I0(r,n,i,s):P0(r)){e.push(c.i/t),e.push(r.i/t),e.push(h.i/t),Rs(r),r=h.next,a=h.next;continue}if(r=h,r===a){o?o===1?(r=D0(vi(r),e,t),Ss(r,e,t,n,i,s,2)):o===2&&N0(r,e,t,n,i,s):Ss(vi(r),e,t,n,i,s,1);break}}}function P0(r){const e=r.prev,t=r,n=r.next;if(mt(e,t,n)>=0)return!1;let i=r.next.next;for(;i!==r.prev;){if(Lr(e.x,e.y,t.x,t.y,n.x,n.y,i.x,i.y)&&mt(i.prev,i,i.next)>=0)return!1;i=i.next}return!0}function I0(r,e,t,n){const i=r.prev,s=r,o=r.next;if(mt(i,s,o)>=0)return!1;const a=i.x<s.x?i.x<o.x?i.x:o.x:s.x<o.x?s.x:o.x,c=i.y<s.y?i.y<o.y?i.y:o.y:s.y<o.y?s.y:o.y,h=i.x>s.x?i.x>o.x?i.x:o.x:s.x>o.x?s.x:o.x,u=i.y>s.y?i.y>o.y?i.y:o.y:s.y>o.y?s.y:o.y,f=Gl(a,c,e,t,n),d=Gl(h,u,e,t,n);let p=r.prevZ,v=r.nextZ;for(;p&&p.z>=f&&v&&v.z<=d;){if(p!==r.prev&&p!==r.next&&Lr(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0||(p=p.prevZ,v!==r.prev&&v!==r.next&&Lr(i.x,i.y,s.x,s.y,o.x,o.y,v.x,v.y)&&mt(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;p&&p.z>=f;){if(p!==r.prev&&p!==r.next&&Lr(i.x,i.y,s.x,s.y,o.x,o.y,p.x,p.y)&&mt(p.prev,p,p.next)>=0)return!1;p=p.prevZ}for(;v&&v.z<=d;){if(v!==r.prev&&v!==r.next&&Lr(i.x,i.y,s.x,s.y,o.x,o.y,v.x,v.y)&&mt(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function D0(r,e,t){let n=r;do{const i=n.prev,s=n.next.next;!xa(i,s)&&Wd(i,n,n.next,s)&&As(i,s)&&As(s,i)&&(e.push(i.i/t),e.push(n.i/t),e.push(s.i/t),Rs(n),Rs(n.next),n=r=s),n=n.next}while(n!==r);return vi(n)}function N0(r,e,t,n,i,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&V0(o,a)){let c=Xd(o,a);o=vi(o,o.next),c=vi(c,c.next),Ss(o,e,t,n,i,s),Ss(c,e,t,n,i,s);return}a=a.next}o=o.next}while(o!==r)}function O0(r,e,t,n){const i=[];let s,o,a,c,h;for(s=0,o=e.length;s<o;s++)a=e[s]*n,c=s<o-1?e[s+1]*n:r.length,h=Vd(r,a,c,n,!1),h===h.next&&(h.steiner=!0),i.push(G0(h));for(i.sort(F0),s=0;s<i.length;s++)U0(i[s],t),t=vi(t,t.next);return t}function F0(r,e){return r.x-e.x}function U0(r,e){if(e=B0(r,e),e){const t=Xd(e,r);vi(e,e.next),vi(t,t.next)}}function B0(r,e){let t=e;const n=r.x,i=r.y;let s=-1/0,o;do{if(i<=t.y&&i>=t.next.y&&t.next.y!==t.y){const d=t.x+(i-t.y)*(t.next.x-t.x)/(t.next.y-t.y);if(d<=n&&d>s){if(s=d,d===n){if(i===t.y)return t;if(i===t.next.y)return t.next}o=t.x<t.next.x?t:t.next}}t=t.next}while(t!==e);if(!o)return null;if(n===s)return o;const a=o,c=o.x,h=o.y;let u=1/0,f;t=o;do n>=t.x&&t.x>=c&&n!==t.x&&Lr(i<h?n:s,i,c,h,i<h?s:n,i,t.x,t.y)&&(f=Math.abs(i-t.y)/(n-t.x),As(t,r)&&(f<u||f===u&&(t.x>o.x||t.x===o.x&&H0(o,t)))&&(o=t,u=f)),t=t.next;while(t!==a);return o}function H0(r,e){return mt(r.prev,r,e.prev)<0&&mt(e.next,r,r.next)<0}function z0(r,e,t,n){let i=r;do i.z===null&&(i.z=Gl(i.x,i.y,e,t,n)),i.prevZ=i.prev,i.nextZ=i.next,i=i.next;while(i!==r);i.prevZ.nextZ=null,i.prevZ=null,k0(i)}function k0(r){let e,t,n,i,s,o,a,c,h=1;do{for(t=r,r=null,s=null,o=0;t;){for(o++,n=t,a=0,e=0;e<h&&(a++,n=n.nextZ,!!n);e++);for(c=h;a>0||c>0&&n;)a!==0&&(c===0||!n||t.z<=n.z)?(i=t,t=t.nextZ,a--):(i=n,n=n.nextZ,c--),s?s.nextZ=i:r=i,i.prevZ=s,s=i;t=n}s.nextZ=null,h*=2}while(o>1);return r}function Gl(r,e,t,n,i){return r=32767*(r-t)*i,e=32767*(e-n)*i,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,e=(e|e<<8)&16711935,e=(e|e<<4)&252645135,e=(e|e<<2)&858993459,e=(e|e<<1)&1431655765,r|e<<1}function G0(r){let e=r,t=r;do(e.x<t.x||e.x===t.x&&e.y<t.y)&&(t=e),e=e.next;while(e!==r);return t}function Lr(r,e,t,n,i,s,o,a){return(i-o)*(e-a)-(r-o)*(s-a)>=0&&(r-o)*(n-a)-(t-o)*(e-a)>=0&&(t-o)*(s-a)-(i-o)*(n-a)>=0}function V0(r,e){return r.next.i!==e.i&&r.prev.i!==e.i&&!W0(r,e)&&(As(r,e)&&As(e,r)&&X0(r,e)&&(mt(r.prev,r,e.prev)||mt(r,e.prev,e))||xa(r,e)&&mt(r.prev,r,r.next)>0&&mt(e.prev,e,e.next)>0)}function mt(r,e,t){return(e.y-r.y)*(t.x-e.x)-(e.x-r.x)*(t.y-e.y)}function xa(r,e){return r.x===e.x&&r.y===e.y}function Wd(r,e,t,n){const i=Co(mt(r,e,t)),s=Co(mt(r,e,n)),o=Co(mt(t,n,r)),a=Co(mt(t,n,e));return!!(i!==s&&o!==a||i===0&&Ro(r,t,e)||s===0&&Ro(r,n,e)||o===0&&Ro(t,r,n)||a===0&&Ro(t,e,n))}function Ro(r,e,t){return e.x<=Math.max(r.x,t.x)&&e.x>=Math.min(r.x,t.x)&&e.y<=Math.max(r.y,t.y)&&e.y>=Math.min(r.y,t.y)}function Co(r){return r>0?1:r<0?-1:0}function W0(r,e){let t=r;do{if(t.i!==r.i&&t.next.i!==r.i&&t.i!==e.i&&t.next.i!==e.i&&Wd(t,t.next,r,e))return!0;t=t.next}while(t!==r);return!1}function As(r,e){return mt(r.prev,r,r.next)<0?mt(r,e,r.next)>=0&&mt(r,r.prev,e)>=0:mt(r,e,r.prev)<0||mt(r,r.next,e)<0}function X0(r,e){let t=r,n=!1;const i=(r.x+e.x)/2,s=(r.y+e.y)/2;do t.y>s!=t.next.y>s&&t.next.y!==t.y&&i<(t.next.x-t.x)*(s-t.y)/(t.next.y-t.y)+t.x&&(n=!n),t=t.next;while(t!==r);return n}function Xd(r,e){const t=new Vl(r.i,r.x,r.y),n=new Vl(e.i,e.x,e.y),i=r.next,s=e.prev;return r.next=e,e.prev=r,t.next=i,i.prev=t,n.next=t,t.prev=n,s.next=n,n.prev=s,n}function Hh(r,e,t,n){const i=new Vl(r,e,t);return n?(i.next=n.next,i.prev=n,n.next.prev=i,n.next=i):(i.prev=i,i.next=i),i}function Rs(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Vl(r,e,t){this.i=r,this.x=e,this.y=t,this.prev=null,this.next=null,this.z=null,this.prevZ=null,this.nextZ=null,this.steiner=!1}function q0(r,e,t,n){let i=0;for(let s=e,o=t-n;s<t;s+=n)i+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return i}class Sn{static area(e){const t=e.length;let n=0;for(let i=t-1,s=0;s<t;i=s++)n+=e[i].x*e[s].y-e[s].x*e[i].y;return n*.5}static isClockWise(e){return Sn.area(e)<0}static triangulateShape(e,t){const n=[],i=[],s=[];zh(e),kh(n,e);let o=e.length;t.forEach(zh);for(let c=0;c<t.length;c++)i.push(o),o+=t[c].length,kh(n,t[c]);const a=L0.triangulate(n,i);for(let c=0;c<a.length;c+=3)s.push(a.slice(c,c+3));return s}}function zh(r){const e=r.length;e>2&&r[e-1].equals(r[0])&&r.pop()}function kh(r,e){for(let t=0;t<e.length;t++)r.push(e[t].x),r.push(e[t].y)}class Cn extends Ue{constructor(e=new Tn([new le(.5,.5),new le(-.5,.5),new le(-.5,-.5),new le(.5,-.5)]),t={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:e,options:t},e=Array.isArray(e)?e:[e];const n=this,i=[],s=[];for(let a=0,c=e.length;a<c;a++){const h=e[a];o(h)}this.setAttribute("position",new Se(i,3)),this.setAttribute("uv",new Se(s,2)),this.computeVertexNormals();function o(a){const c=[],h=t.curveSegments!==void 0?t.curveSegments:12,u=t.steps!==void 0?t.steps:1;let f=t.depth!==void 0?t.depth:1,d=t.bevelEnabled!==void 0?t.bevelEnabled:!0,p=t.bevelThickness!==void 0?t.bevelThickness:.2,v=t.bevelSize!==void 0?t.bevelSize:p-.1,m=t.bevelOffset!==void 0?t.bevelOffset:0,g=t.bevelSegments!==void 0?t.bevelSegments:3;const E=t.extrudePath,b=t.UVGenerator!==void 0?t.UVGenerator:Y0;t.amount!==void 0&&(console.warn("THREE.ExtrudeBufferGeometry: amount has been renamed to depth."),f=t.amount);let C,S=!1,A,O,V,U;E&&(C=E.getSpacedPoints(u),S=!0,d=!1,A=E.computeFrenetFrames(u,!1),O=new D,V=new D,U=new D),d||(g=0,p=0,v=0,m=0);const Q=a.extractPoints(h);let Z=Q.shape;const L=Q.holes;if(!Sn.isClockWise(Z)){Z=Z.reverse();for(let re=0,se=L.length;re<se;re++){const ue=L[re];Sn.isClockWise(ue)&&(L[re]=ue.reverse())}}const Y=Sn.triangulateShape(Z,L),z=Z;for(let re=0,se=L.length;re<se;re++){const ue=L[re];Z=Z.concat(ue)}function N(re,se,ue){return se||console.error("THREE.ExtrudeGeometry: vec does not exist"),se.clone().multiplyScalar(ue).add(re)}const R=Z.length,P=Y.length;function F(re,se,ue){let be,ye,We;const Fe=re.x-se.x,Ne=re.y-se.y,ht=ue.x-re.x,rt=ue.y-re.y,G=Fe*Fe+Ne*Ne,I=Fe*rt-Ne*ht;if(Math.abs(I)>Number.EPSILON){const ne=Math.sqrt(G),ce=Math.sqrt(ht*ht+rt*rt),xe=se.x-Ne/ne,we=se.y+Fe/ne,Ie=ue.x-rt/ce,ie=ue.y+ht/ce,Ce=((Ie-xe)*rt-(ie-we)*ht)/(Fe*rt-Ne*ht);be=xe+Fe*Ce-re.x,ye=we+Ne*Ce-re.y;const Xe=be*be+ye*ye;if(Xe<=2)return new le(be,ye);We=Math.sqrt(Xe/2)}else{let ne=!1;Fe>Number.EPSILON?ht>Number.EPSILON&&(ne=!0):Fe<-Number.EPSILON?ht<-Number.EPSILON&&(ne=!0):Math.sign(Ne)===Math.sign(rt)&&(ne=!0),ne?(be=-Ne,ye=Fe,We=Math.sqrt(G)):(be=Fe,ye=Ne,We=Math.sqrt(G/2))}return new le(be/We,ye/We)}const X=[];for(let re=0,se=z.length,ue=se-1,be=re+1;re<se;re++,ue++,be++)ue===se&&(ue=0),be===se&&(be=0),X[re]=F(z[re],z[ue],z[be]);const J=[];let te,oe=X.concat();for(let re=0,se=L.length;re<se;re++){const ue=L[re];te=[];for(let be=0,ye=ue.length,We=ye-1,Fe=be+1;be<ye;be++,We++,Fe++)We===ye&&(We=0),Fe===ye&&(Fe=0),te[be]=F(ue[be],ue[We],ue[Fe]);J.push(te),oe=oe.concat(te)}for(let re=0;re<g;re++){const se=re/g,ue=p*Math.cos(se*Math.PI/2),be=v*Math.sin(se*Math.PI/2)+m;for(let ye=0,We=z.length;ye<We;ye++){const Fe=N(z[ye],X[ye],be);Qe(Fe.x,Fe.y,-ue)}for(let ye=0,We=L.length;ye<We;ye++){const Fe=L[ye];te=J[ye];for(let Ne=0,ht=Fe.length;Ne<ht;Ne++){const rt=N(Fe[Ne],te[Ne],be);Qe(rt.x,rt.y,-ue)}}}const pe=v+m;for(let re=0;re<R;re++){const se=d?N(Z[re],oe[re],pe):Z[re];S?(V.copy(A.normals[0]).multiplyScalar(se.x),O.copy(A.binormals[0]).multiplyScalar(se.y),U.copy(C[0]).add(V).add(O),Qe(U.x,U.y,U.z)):Qe(se.x,se.y,0)}for(let re=1;re<=u;re++)for(let se=0;se<R;se++){const ue=d?N(Z[se],oe[se],pe):Z[se];S?(V.copy(A.normals[re]).multiplyScalar(ue.x),O.copy(A.binormals[re]).multiplyScalar(ue.y),U.copy(C[re]).add(V).add(O),Qe(U.x,U.y,U.z)):Qe(ue.x,ue.y,f/u*re)}for(let re=g-1;re>=0;re--){const se=re/g,ue=p*Math.cos(se*Math.PI/2),be=v*Math.sin(se*Math.PI/2)+m;for(let ye=0,We=z.length;ye<We;ye++){const Fe=N(z[ye],X[ye],be);Qe(Fe.x,Fe.y,f+ue)}for(let ye=0,We=L.length;ye<We;ye++){const Fe=L[ye];te=J[ye];for(let Ne=0,ht=Fe.length;Ne<ht;Ne++){const rt=N(Fe[Ne],te[Ne],be);S?Qe(rt.x,rt.y+C[u-1].y,C[u-1].x+ue):Qe(rt.x,rt.y,f+ue)}}}Le(),Oe();function Le(){const re=i.length/3;if(d){let se=0,ue=R*se;for(let be=0;be<P;be++){const ye=Y[be];ze(ye[2]+ue,ye[1]+ue,ye[0]+ue)}se=u+g*2,ue=R*se;for(let be=0;be<P;be++){const ye=Y[be];ze(ye[0]+ue,ye[1]+ue,ye[2]+ue)}}else{for(let se=0;se<P;se++){const ue=Y[se];ze(ue[2],ue[1],ue[0])}for(let se=0;se<P;se++){const ue=Y[se];ze(ue[0]+R*u,ue[1]+R*u,ue[2]+R*u)}}n.addGroup(re,i.length/3-re,0)}function Oe(){const re=i.length/3;let se=0;K(z,se),se+=z.length;for(let ue=0,be=L.length;ue<be;ue++){const ye=L[ue];K(ye,se),se+=ye.length}n.addGroup(re,i.length/3-re,1)}function K(re,se){let ue=re.length;for(;--ue>=0;){const be=ue;let ye=ue-1;ye<0&&(ye=re.length-1);for(let We=0,Fe=u+g*2;We<Fe;We++){const Ne=R*We,ht=R*(We+1),rt=se+be+Ne,G=se+ye+Ne,I=se+ye+ht,ne=se+be+ht;Ve(rt,G,I,ne)}}}function Qe(re,se,ue){c.push(re),c.push(se),c.push(ue)}function ze(re,se,ue){de(re),de(se),de(ue);const be=i.length/3,ye=b.generateTopUV(n,i,be-3,be-2,be-1);qe(ye[0]),qe(ye[1]),qe(ye[2])}function Ve(re,se,ue,be){de(re),de(se),de(be),de(se),de(ue),de(be);const ye=i.length/3,We=b.generateSideWallUV(n,i,ye-6,ye-3,ye-2,ye-1);qe(We[0]),qe(We[1]),qe(We[3]),qe(We[1]),qe(We[2]),qe(We[3])}function de(re){i.push(c[re*3+0]),i.push(c[re*3+1]),i.push(c[re*3+2])}function qe(re){s.push(re.x),s.push(re.y)}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes,n=this.parameters.options;return Z0(t,n,e)}static fromJSON(e,t){const n=[];for(let s=0,o=e.shapes.length;s<o;s++){const a=t[e.shapes[s]];n.push(a)}const i=e.options.extrudePath;return i!==void 0&&(e.options.extrudePath=new cc[i.type]().fromJSON(i)),new Cn(n,e.options)}}const Y0={generateTopUV:function(r,e,t,n,i){const s=e[t*3],o=e[t*3+1],a=e[n*3],c=e[n*3+1],h=e[i*3],u=e[i*3+1];return[new le(s,o),new le(a,c),new le(h,u)]},generateSideWallUV:function(r,e,t,n,i,s){const o=e[t*3],a=e[t*3+1],c=e[t*3+2],h=e[n*3],u=e[n*3+1],f=e[n*3+2],d=e[i*3],p=e[i*3+1],v=e[i*3+2],m=e[s*3],g=e[s*3+1],E=e[s*3+2];return Math.abs(a-u)<Math.abs(o-h)?[new le(o,1-c),new le(h,1-f),new le(d,1-v),new le(m,1-E)]:[new le(a,1-c),new le(u,1-f),new le(p,1-v),new le(g,1-E)]}};function Z0(r,e,t){if(t.shapes=[],Array.isArray(r))for(let n=0,i=r.length;n<i;n++){const s=r[n];t.shapes.push(s.uuid)}else t.shapes.push(r.uuid);return e.extrudePath!==void 0&&(t.options.extrudePath=e.extrudePath.toJSON()),t}class zr extends Rn{constructor(e=1,t=0){const n=(1+Math.sqrt(5))/2,i=[-1,n,0,1,n,0,-1,-n,0,1,-n,0,0,-1,n,0,1,n,0,-1,-n,0,1,-n,n,0,-1,n,0,1,-n,0,-1,-n,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(i,s,e,t),this.type="IcosahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new zr(e.radius,e.detail)}}class Qi extends Rn{constructor(e=1,t=0){const n=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],i=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(n,i,e,t),this.type="OctahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Qi(e.radius,e.detail)}}class kr extends Ue{constructor(e=.5,t=1,n=8,i=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:e,outerRadius:t,thetaSegments:n,phiSegments:i,thetaStart:s,thetaLength:o},n=Math.max(3,n),i=Math.max(1,i);const a=[],c=[],h=[],u=[];let f=e;const d=(t-e)/i,p=new D,v=new le;for(let m=0;m<=i;m++){for(let g=0;g<=n;g++){const E=s+g/n*o;p.x=f*Math.cos(E),p.y=f*Math.sin(E),c.push(p.x,p.y,p.z),h.push(0,0,1),v.x=(p.x/t+1)/2,v.y=(p.y/t+1)/2,u.push(v.x,v.y)}f+=d}for(let m=0;m<i;m++){const g=m*(n+1);for(let E=0;E<n;E++){const b=E+g,C=b,S=b+n+1,A=b+n+2,O=b+1;a.push(C,S,O),a.push(S,A,O)}}this.setIndex(a),this.setAttribute("position",new Se(c,3)),this.setAttribute("normal",new Se(h,3)),this.setAttribute("uv",new Se(u,2))}static fromJSON(e){return new kr(e.innerRadius,e.outerRadius,e.thetaSegments,e.phiSegments,e.thetaStart,e.thetaLength)}}class er extends Ue{constructor(e=new Tn([new le(0,.5),new le(-.5,-.5),new le(.5,-.5)]),t=12){super(),this.type="ShapeGeometry",this.parameters={shapes:e,curveSegments:t};const n=[],i=[],s=[],o=[];let a=0,c=0;if(Array.isArray(e)===!1)h(e);else for(let u=0;u<e.length;u++)h(e[u]),this.addGroup(a,c,u),a+=c,c=0;this.setIndex(n),this.setAttribute("position",new Se(i,3)),this.setAttribute("normal",new Se(s,3)),this.setAttribute("uv",new Se(o,2));function h(u){const f=i.length/3,d=u.extractPoints(t);let p=d.shape;const v=d.holes;Sn.isClockWise(p)===!1&&(p=p.reverse());for(let g=0,E=v.length;g<E;g++){const b=v[g];Sn.isClockWise(b)===!0&&(v[g]=b.reverse())}const m=Sn.triangulateShape(p,v);for(let g=0,E=v.length;g<E;g++){const b=v[g];p=p.concat(b)}for(let g=0,E=p.length;g<E;g++){const b=p[g];i.push(b.x,b.y,0),s.push(0,0,1),o.push(b.x,b.y)}for(let g=0,E=m.length;g<E;g++){const b=m[g],C=b[0]+f,S=b[1]+f,A=b[2]+f;n.push(C,S,A),c+=3}}}toJSON(){const e=super.toJSON(),t=this.parameters.shapes;return K0(t,e)}static fromJSON(e,t){const n=[];for(let i=0,s=e.shapes.length;i<s;i++){const o=t[e.shapes[i]];n.push(o)}return new er(n,e.curveSegments)}}function K0(r,e){if(e.shapes=[],Array.isArray(r))for(let t=0,n=r.length;t<n;t++){const i=r[t];e.shapes.push(i.uuid)}else e.shapes.push(r.uuid);return e}class tr extends Ue{constructor(e=1,t=32,n=16,i=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:e,widthSegments:t,heightSegments:n,phiStart:i,phiLength:s,thetaStart:o,thetaLength:a},t=Math.max(3,Math.floor(t)),n=Math.max(2,Math.floor(n));const c=Math.min(o+a,Math.PI);let h=0;const u=[],f=new D,d=new D,p=[],v=[],m=[],g=[];for(let E=0;E<=n;E++){const b=[],C=E/n;let S=0;E==0&&o==0?S=.5/t:E==n&&c==Math.PI&&(S=-.5/t);for(let A=0;A<=t;A++){const O=A/t;f.x=-e*Math.cos(i+O*s)*Math.sin(o+C*a),f.y=e*Math.cos(o+C*a),f.z=e*Math.sin(i+O*s)*Math.sin(o+C*a),v.push(f.x,f.y,f.z),d.copy(f).normalize(),m.push(d.x,d.y,d.z),g.push(O+S,1-C),b.push(h++)}u.push(b)}for(let E=0;E<n;E++)for(let b=0;b<t;b++){const C=u[E][b+1],S=u[E][b],A=u[E+1][b],O=u[E+1][b+1];(E!==0||o>0)&&p.push(C,S,O),(E!==n-1||c<Math.PI)&&p.push(S,A,O)}this.setIndex(p),this.setAttribute("position",new Se(v,3)),this.setAttribute("normal",new Se(m,3)),this.setAttribute("uv",new Se(g,2))}static fromJSON(e){return new tr(e.radius,e.widthSegments,e.heightSegments,e.phiStart,e.phiLength,e.thetaStart,e.thetaLength)}}class Gr extends Rn{constructor(e=1,t=0){const n=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],i=[2,1,0,0,3,2,1,3,0,2,3,1];super(n,i,e,t),this.type="TetrahedronGeometry",this.parameters={radius:e,detail:t}}static fromJSON(e){return new Gr(e.radius,e.detail)}}class Vr extends Ue{constructor(e=1,t=.4,n=8,i=6,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:e,tube:t,radialSegments:n,tubularSegments:i,arc:s},n=Math.floor(n),i=Math.floor(i);const o=[],a=[],c=[],h=[],u=new D,f=new D,d=new D;for(let p=0;p<=n;p++)for(let v=0;v<=i;v++){const m=v/i*s,g=p/n*Math.PI*2;f.x=(e+t*Math.cos(g))*Math.cos(m),f.y=(e+t*Math.cos(g))*Math.sin(m),f.z=t*Math.sin(g),a.push(f.x,f.y,f.z),u.x=e*Math.cos(m),u.y=e*Math.sin(m),d.subVectors(f,u).normalize(),c.push(d.x,d.y,d.z),h.push(v/i),h.push(p/n)}for(let p=1;p<=n;p++)for(let v=1;v<=i;v++){const m=(i+1)*p+v-1,g=(i+1)*(p-1)+v-1,E=(i+1)*(p-1)+v,b=(i+1)*p+v;o.push(m,g,b),o.push(g,E,b)}this.setIndex(o),this.setAttribute("position",new Se(a,3)),this.setAttribute("normal",new Se(c,3)),this.setAttribute("uv",new Se(h,2))}static fromJSON(e){return new Vr(e.radius,e.tube,e.radialSegments,e.tubularSegments,e.arc)}}class Wr extends Ue{constructor(e=1,t=.4,n=64,i=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:e,tube:t,tubularSegments:n,radialSegments:i,p:s,q:o},n=Math.floor(n),i=Math.floor(i);const a=[],c=[],h=[],u=[],f=new D,d=new D,p=new D,v=new D,m=new D,g=new D,E=new D;for(let C=0;C<=n;++C){const S=C/n*s*Math.PI*2;b(S,s,o,e,p),b(S+.01,s,o,e,v),g.subVectors(v,p),E.addVectors(v,p),m.crossVectors(g,E),E.crossVectors(m,g),m.normalize(),E.normalize();for(let A=0;A<=i;++A){const O=A/i*Math.PI*2,V=-t*Math.cos(O),U=t*Math.sin(O);f.x=p.x+(V*E.x+U*m.x),f.y=p.y+(V*E.y+U*m.y),f.z=p.z+(V*E.z+U*m.z),c.push(f.x,f.y,f.z),d.subVectors(f,p).normalize(),h.push(d.x,d.y,d.z),u.push(C/n),u.push(A/i)}}for(let C=1;C<=n;C++)for(let S=1;S<=i;S++){const A=(i+1)*(C-1)+(S-1),O=(i+1)*C+(S-1),V=(i+1)*C+S,U=(i+1)*(C-1)+S;a.push(A,O,U),a.push(O,V,U)}this.setIndex(a),this.setAttribute("position",new Se(c,3)),this.setAttribute("normal",new Se(h,3)),this.setAttribute("uv",new Se(u,2));function b(C,S,A,O,V){const U=Math.cos(C),Q=Math.sin(C),Z=A/S*C,L=Math.cos(Z);V.x=O*(2+L)*.5*U,V.y=O*(2+L)*Q*.5,V.z=O*Math.sin(Z)*.5}}static fromJSON(e){return new Wr(e.radius,e.tube,e.tubularSegments,e.radialSegments,e.p,e.q)}}class Xr extends Ue{constructor(e=new _a(new D(-1,-1,0),new D(-1,1,0),new D(1,1,0)),t=64,n=1,i=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:e,tubularSegments:t,radius:n,radialSegments:i,closed:s};const o=e.computeFrenetFrames(t,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new D,c=new D,h=new le;let u=new D;const f=[],d=[],p=[],v=[];m(),this.setIndex(v),this.setAttribute("position",new Se(f,3)),this.setAttribute("normal",new Se(d,3)),this.setAttribute("uv",new Se(p,2));function m(){for(let C=0;C<t;C++)g(C);g(s===!1?t:0),b(),E()}function g(C){u=e.getPointAt(C/t,u);const S=o.normals[C],A=o.binormals[C];for(let O=0;O<=i;O++){const V=O/i*Math.PI*2,U=Math.sin(V),Q=-Math.cos(V);c.x=Q*S.x+U*A.x,c.y=Q*S.y+U*A.y,c.z=Q*S.z+U*A.z,c.normalize(),d.push(c.x,c.y,c.z),a.x=u.x+n*c.x,a.y=u.y+n*c.y,a.z=u.z+n*c.z,f.push(a.x,a.y,a.z)}}function E(){for(let C=1;C<=t;C++)for(let S=1;S<=i;S++){const A=(i+1)*(C-1)+(S-1),O=(i+1)*C+(S-1),V=(i+1)*C+S,U=(i+1)*(C-1)+S;v.push(A,O,U),v.push(O,V,U)}}function b(){for(let C=0;C<=t;C++)for(let S=0;S<=i;S++)h.x=C/t,h.y=S/i,p.push(h.x,h.y)}}toJSON(){const e=super.toJSON();return e.path=this.parameters.path.toJSON(),e}static fromJSON(e){return new Xr(new cc[e.path.type]().fromJSON(e.path),e.tubularSegments,e.radius,e.radialSegments,e.closed)}}class uc extends Ue{constructor(e=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:e},e!==null){const t=[],n=new Set,i=new D,s=new D;if(e.index!==null){const o=e.attributes.position,a=e.index;let c=e.groups;c.length===0&&(c=[{start:0,count:a.count,materialIndex:0}]);for(let h=0,u=c.length;h<u;++h){const f=c[h],d=f.start,p=f.count;for(let v=d,m=d+p;v<m;v+=3)for(let g=0;g<3;g++){const E=a.getX(v+g),b=a.getX(v+(g+1)%3);i.fromBufferAttribute(o,E),s.fromBufferAttribute(o,b),Gh(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}}else{const o=e.attributes.position;for(let a=0,c=o.count/3;a<c;a++)for(let h=0;h<3;h++){const u=3*a+h,f=3*a+(h+1)%3;i.fromBufferAttribute(o,u),s.fromBufferAttribute(o,f),Gh(i,s,n)===!0&&(t.push(i.x,i.y,i.z),t.push(s.x,s.y,s.z))}}this.setAttribute("position",new Se(t,3))}}}function Gh(r,e,t){const n=`${r.x},${r.y},${r.z}-${e.x},${e.y},${e.z}`,i=`${e.x},${e.y},${e.z}-${r.x},${r.y},${r.z}`;return t.has(n)===!0||t.has(i)===!0?!1:(t.add(n),t.add(i),!0)}var Vh=Object.freeze({__proto__:null,BoxGeometry:Yn,BoxBufferGeometry:Yn,CapsuleGeometry:Fr,CapsuleBufferGeometry:Fr,CircleGeometry:Ur,CircleBufferGeometry:Ur,ConeGeometry:Br,ConeBufferGeometry:Br,CylinderGeometry:gi,CylinderBufferGeometry:gi,DodecahedronGeometry:Hr,DodecahedronBufferGeometry:Hr,EdgesGeometry:hc,ExtrudeGeometry:Cn,ExtrudeBufferGeometry:Cn,IcosahedronGeometry:zr,IcosahedronBufferGeometry:zr,LatheGeometry:Ji,LatheBufferGeometry:Ji,OctahedronGeometry:Qi,OctahedronBufferGeometry:Qi,PlaneGeometry:$i,PlaneBufferGeometry:$i,PolyhedronGeometry:Rn,PolyhedronBufferGeometry:Rn,RingGeometry:kr,RingBufferGeometry:kr,ShapeGeometry:er,ShapeBufferGeometry:er,SphereGeometry:tr,SphereBufferGeometry:tr,TetrahedronGeometry:Gr,TetrahedronBufferGeometry:Gr,TorusGeometry:Vr,TorusBufferGeometry:Vr,TorusKnotGeometry:Wr,TorusKnotBufferGeometry:Wr,TubeGeometry:Xr,TubeBufferGeometry:Xr,WireframeGeometry:uc});class dc extends Mt{constructor(e){super(),this.type="ShadowMaterial",this.color=new Me(0),this.transparent=!0,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this}}dc.prototype.isShadowMaterial=!0;class fc extends ln{constructor(e){super(e),this.type="RawShaderMaterial"}}fc.prototype.isRawShaderMaterial=!0;class Ma extends Mt{constructor(e){super(),this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Me(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={STANDARD:""},this.color.copy(e.color),this.roughness=e.roughness,this.metalness=e.metalness,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.roughnessMap=e.roughnessMap,this.metalnessMap=e.metalnessMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.envMapIntensity=e.envMapIntensity,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}Ma.prototype.isMeshStandardMaterial=!0;class pc extends Ma{constructor(e){super(),this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new le(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return yt(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(t){this.ior=(1+.4*t)/(1-.4*t)}}),this.sheenColor=new Me(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=0,this.attenuationColor=new Me(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new Me(1,1,1),this.specularColorMap=null,this._sheen=0,this._clearcoat=0,this._transmission=0,this.setValues(e)}get sheen(){return this._sheen}set sheen(e){this._sheen>0!=e>0&&this.version++,this._sheen=e}get clearcoat(){return this._clearcoat}set clearcoat(e){this._clearcoat>0!=e>0&&this.version++,this._clearcoat=e}get transmission(){return this._transmission}set transmission(e){this._transmission>0!=e>0&&this.version++,this._transmission=e}copy(e){return super.copy(e),this.defines={STANDARD:"",PHYSICAL:""},this.clearcoat=e.clearcoat,this.clearcoatMap=e.clearcoatMap,this.clearcoatRoughness=e.clearcoatRoughness,this.clearcoatRoughnessMap=e.clearcoatRoughnessMap,this.clearcoatNormalMap=e.clearcoatNormalMap,this.clearcoatNormalScale.copy(e.clearcoatNormalScale),this.ior=e.ior,this.sheen=e.sheen,this.sheenColor.copy(e.sheenColor),this.sheenColorMap=e.sheenColorMap,this.sheenRoughness=e.sheenRoughness,this.sheenRoughnessMap=e.sheenRoughnessMap,this.transmission=e.transmission,this.transmissionMap=e.transmissionMap,this.thickness=e.thickness,this.thicknessMap=e.thicknessMap,this.attenuationDistance=e.attenuationDistance,this.attenuationColor.copy(e.attenuationColor),this.specularIntensity=e.specularIntensity,this.specularIntensityMap=e.specularIntensityMap,this.specularColor.copy(e.specularColor),this.specularColorMap=e.specularColorMap,this}}pc.prototype.isMeshPhysicalMaterial=!0;class mc extends Mt{constructor(e){super(),this.type="MeshPhongMaterial",this.color=new Me(16777215),this.specular=new Me(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ds,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.specular.copy(e.specular),this.shininess=e.shininess,this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this.flatShading=e.flatShading,this}}mc.prototype.isMeshPhongMaterial=!0;class gc extends Mt{constructor(e){super(),this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new Me(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.gradientMap=e.gradientMap,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}gc.prototype.isMeshToonMaterial=!0;class vc extends Mt{constructor(e){super(),this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.flatShading=e.flatShading,this}}vc.prototype.isMeshNormalMaterial=!0;class _c extends Mt{constructor(e){super(),this.type="MeshLambertMaterial",this.color=new Me(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Me(0),this.emissiveIntensity=1,this.emissiveMap=null,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.combine=Ds,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.setValues(e)}copy(e){return super.copy(e),this.color.copy(e.color),this.map=e.map,this.lightMap=e.lightMap,this.lightMapIntensity=e.lightMapIntensity,this.aoMap=e.aoMap,this.aoMapIntensity=e.aoMapIntensity,this.emissive.copy(e.emissive),this.emissiveMap=e.emissiveMap,this.emissiveIntensity=e.emissiveIntensity,this.specularMap=e.specularMap,this.alphaMap=e.alphaMap,this.envMap=e.envMap,this.combine=e.combine,this.reflectivity=e.reflectivity,this.refractionRatio=e.refractionRatio,this.wireframe=e.wireframe,this.wireframeLinewidth=e.wireframeLinewidth,this.wireframeLinecap=e.wireframeLinecap,this.wireframeLinejoin=e.wireframeLinejoin,this}}_c.prototype.isMeshLambertMaterial=!0;class yc extends Mt{constructor(e){super(),this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new Me(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=rr,this.normalScale=new le(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.setValues(e)}copy(e){return super.copy(e),this.defines={MATCAP:""},this.color.copy(e.color),this.matcap=e.matcap,this.map=e.map,this.bumpMap=e.bumpMap,this.bumpScale=e.bumpScale,this.normalMap=e.normalMap,this.normalMapType=e.normalMapType,this.normalScale.copy(e.normalScale),this.displacementMap=e.displacementMap,this.displacementScale=e.displacementScale,this.displacementBias=e.displacementBias,this.alphaMap=e.alphaMap,this.flatShading=e.flatShading,this}}yc.prototype.isMeshMatcapMaterial=!0;class xc extends Dt{constructor(e){super(),this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(e)}copy(e){return super.copy(e),this.scale=e.scale,this.dashSize=e.dashSize,this.gapSize=e.gapSize,this}}xc.prototype.isLineDashedMaterial=!0;const $0={ShadowMaterial:dc,SpriteMaterial:ua,RawShaderMaterial:fc,ShaderMaterial:ln,PointsMaterial:or,MeshPhysicalMaterial:pc,MeshStandardMaterial:Ma,MeshPhongMaterial:mc,MeshToonMaterial:gc,MeshNormalMaterial:vc,MeshLambertMaterial:_c,MeshDepthMaterial:la,MeshDistanceMaterial:ca,MeshBasicMaterial:$n,MeshMatcapMaterial:yc,LineDashedMaterial:xc,LineBasicMaterial:Dt,Material:Mt};Mt.fromType=function(r){return new $0[r]};const ft={arraySlice:function(r,e,t){return ft.isTypedArray(r)?new r.constructor(r.subarray(e,t!==void 0?t:r.length)):r.slice(e,t)},convertArray:function(r,e,t){return!r||!t&&r.constructor===e?r:typeof e.BYTES_PER_ELEMENT=="number"?new e(r):Array.prototype.slice.call(r)},isTypedArray:function(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)},getKeyframeOrder:function(r){function e(i,s){return r[i]-r[s]}const t=r.length,n=new Array(t);for(let i=0;i!==t;++i)n[i]=i;return n.sort(e),n},sortedArray:function(r,e,t){const n=r.length,i=new r.constructor(n);for(let s=0,o=0;o!==n;++s){const a=t[s]*e;for(let c=0;c!==e;++c)i[o++]=r[a+c]}return i},flattenJSON:function(r,e,t,n){let i=1,s=r[0];for(;s!==void 0&&s[n]===void 0;)s=r[i++];if(s===void 0)return;let o=s[n];if(o!==void 0)if(Array.isArray(o))do o=s[n],o!==void 0&&(e.push(s.time),t.push.apply(t,o)),s=r[i++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[n],o!==void 0&&(e.push(s.time),o.toArray(t,t.length)),s=r[i++];while(s!==void 0);else do o=s[n],o!==void 0&&(e.push(s.time),t.push(o)),s=r[i++];while(s!==void 0)},subclip:function(r,e,t,n,i=30){const s=r.clone();s.name=e;const o=[];for(let c=0;c<s.tracks.length;++c){const h=s.tracks[c],u=h.getValueSize(),f=[],d=[];for(let p=0;p<h.times.length;++p){const v=h.times[p]*i;if(!(v<t||v>=n)){f.push(h.times[p]);for(let m=0;m<u;++m)d.push(h.values[p*u+m])}}f.length!==0&&(h.times=ft.convertArray(f,h.times.constructor),h.values=ft.convertArray(d,h.values.constructor),o.push(h))}s.tracks=o;let a=1/0;for(let c=0;c<s.tracks.length;++c)a>s.tracks[c].times[0]&&(a=s.tracks[c].times[0]);for(let c=0;c<s.tracks.length;++c)s.tracks[c].shift(-1*a);return s.resetDuration(),s},makeClipAdditive:function(r,e=0,t=r,n=30){n<=0&&(n=30);const i=t.tracks.length,s=e/n;for(let o=0;o<i;++o){const a=t.tracks[o],c=a.ValueTypeName;if(c==="bool"||c==="string")continue;const h=r.tracks.find(function(E){return E.name===a.name&&E.ValueTypeName===c});if(h===void 0)continue;let u=0;const f=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(u=f/3);let d=0;const p=h.getValueSize();h.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=p/3);const v=a.times.length-1;let m;if(s<=a.times[0]){const E=u,b=f-u;m=ft.arraySlice(a.values,E,b)}else if(s>=a.times[v]){const E=v*f+u,b=E+f-u;m=ft.arraySlice(a.values,E,b)}else{const E=a.createInterpolant(),b=u,C=f-u;E.evaluate(s),m=ft.arraySlice(E.resultBuffer,b,C)}c==="quaternion"&&new Ot().fromArray(m).normalize().conjugate().toArray(m);const g=h.times.length;for(let E=0;E<g;++E){const b=E*p+d;if(c==="quaternion")Ot.multiplyQuaternionsFlat(h.values,b,m,0,h.values,b);else{const C=p-d*2;for(let S=0;S<C;++S)h.values[b+S]-=m[S]}}}return r.blendMode=jl,r}};class Kn{constructor(e,t,n,i){this.parameterPositions=e,this._cachedIndex=0,this.resultBuffer=i!==void 0?i:new t.constructor(n),this.sampleValues=t,this.valueSize=n,this.settings=null,this.DefaultSettings_={}}evaluate(e){const t=this.parameterPositions;let n=this._cachedIndex,i=t[n],s=t[n-1];e:{t:{let o;n:{i:if(!(e<i)){for(let a=n+2;;){if(i===void 0){if(e<s)break i;return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,e,s)}if(n===a)break;if(s=i,i=t[++n],e<i)break t}o=t.length;break n}if(!(e>=s)){const a=t[1];e<a&&(n=2,s=a);for(let c=n-2;;){if(s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(n===c)break;if(i=s,s=t[--n-1],e>=s)break t}o=n,n=0;break n}break e}for(;n<o;){const a=n+o>>>1;e<t[a]?o=a:n=a+1}if(i=t[n],s=t[n-1],s===void 0)return this._cachedIndex=0,this.beforeStart_(0,e,i);if(i===void 0)return n=t.length,this._cachedIndex=n,this.afterEnd_(n-1,s,e)}this._cachedIndex=n,this.intervalChanged_(n,s,i)}return this.interpolate_(n,s,e,i)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(e){const t=this.resultBuffer,n=this.sampleValues,i=this.valueSize,s=e*i;for(let o=0;o!==i;++o)t[o]=n[s+o];return t}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}Kn.prototype.beforeStart_=Kn.prototype.copySampleValue_;Kn.prototype.afterEnd_=Kn.prototype.copySampleValue_;class qd extends Kn{constructor(e,t,n,i){super(e,t,n,i),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Ui,endingEnd:Ui}}intervalChanged_(e,t,n){const i=this.parameterPositions;let s=e-2,o=e+1,a=i[s],c=i[o];if(a===void 0)switch(this.getSettings_().endingStart){case Bi:s=e,a=2*t-n;break;case ws:s=i.length-2,a=t+i[s]-i[s+1];break;default:s=e,a=n}if(c===void 0)switch(this.getSettings_().endingEnd){case Bi:o=e,c=2*n-t;break;case ws:o=1,c=n+i[1]-i[0];break;default:o=e-1,c=t}const h=(n-t)*.5,u=this.valueSize;this._weightPrev=h/(t-a),this._weightNext=h/(c-n),this._offsetPrev=s*u,this._offsetNext=o*u}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,h=c-a,u=this._offsetPrev,f=this._offsetNext,d=this._weightPrev,p=this._weightNext,v=(n-t)/(i-t),m=v*v,g=m*v,E=-d*g+2*d*m-d*v,b=(1+d)*g+(-1.5-2*d)*m+(-.5+d)*v+1,C=(-1-p)*g+(1.5+p)*m+.5*v,S=p*g-p*m;for(let A=0;A!==a;++A)s[A]=E*o[u+A]+b*o[h+A]+C*o[c+A]+S*o[f+A];return s}}class Mc extends Kn{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=e*a,h=c-a,u=(n-t)/(i-t),f=1-u;for(let d=0;d!==a;++d)s[d]=o[h+d]*f+o[c+d]*u;return s}}class Yd extends Kn{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e){return this.copySampleValue_(e-1)}}class yn{constructor(e,t,n,i){if(e===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(t===void 0||t.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+e);this.name=e,this.times=ft.convertArray(t,this.TimeBufferType),this.values=ft.convertArray(n,this.ValueBufferType),this.setInterpolation(i||this.DefaultInterpolation)}static toJSON(e){const t=e.constructor;let n;if(t.toJSON!==this.toJSON)n=t.toJSON(e);else{n={name:e.name,times:ft.convertArray(e.times,Array),values:ft.convertArray(e.values,Array)};const i=e.getInterpolation();i!==e.DefaultInterpolation&&(n.interpolation=i)}return n.type=e.ValueTypeName,n}InterpolantFactoryMethodDiscrete(e){return new Yd(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodLinear(e){return new Mc(this.times,this.values,this.getValueSize(),e)}InterpolantFactoryMethodSmooth(e){return new qd(this.times,this.values,this.getValueSize(),e)}setInterpolation(e){let t;switch(e){case Ms:t=this.InterpolantFactoryMethodDiscrete;break;case Es:t=this.InterpolantFactoryMethodLinear;break;case ko:t=this.InterpolantFactoryMethodSmooth;break}if(t===void 0){const n="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(e!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(n);return console.warn("THREE.KeyframeTrack:",n),this}return this.createInterpolant=t,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return Ms;case this.InterpolantFactoryMethodLinear:return Es;case this.InterpolantFactoryMethodSmooth:return ko}}getValueSize(){return this.values.length/this.times.length}shift(e){if(e!==0){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]+=e}return this}scale(e){if(e!==1){const t=this.times;for(let n=0,i=t.length;n!==i;++n)t[n]*=e}return this}trim(e,t){const n=this.times,i=n.length;let s=0,o=i-1;for(;s!==i&&n[s]<e;)++s;for(;o!==-1&&n[o]>t;)--o;if(++o,s!==0||o!==i){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=ft.arraySlice(n,s,o),this.values=ft.arraySlice(this.values,s*a,o*a)}return this}validate(){let e=!0;const t=this.getValueSize();t-Math.floor(t)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),e=!1);const n=this.times,i=this.values,s=n.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),e=!1);let o=null;for(let a=0;a!==s;a++){const c=n[a];if(typeof c=="number"&&isNaN(c)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,c),e=!1;break}if(o!==null&&o>c){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,c,o),e=!1;break}o=c}if(i!==void 0&&ft.isTypedArray(i))for(let a=0,c=i.length;a!==c;++a){const h=i[a];if(isNaN(h)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,h),e=!1;break}}return e}optimize(){const e=ft.arraySlice(this.times),t=ft.arraySlice(this.values),n=this.getValueSize(),i=this.getInterpolation()===ko,s=e.length-1;let o=1;for(let a=1;a<s;++a){let c=!1;const h=e[a],u=e[a+1];if(h!==u&&(a!==1||h!==e[0]))if(i)c=!0;else{const f=a*n,d=f-n,p=f+n;for(let v=0;v!==n;++v){const m=t[f+v];if(m!==t[d+v]||m!==t[p+v]){c=!0;break}}}if(c){if(a!==o){e[o]=e[a];const f=a*n,d=o*n;for(let p=0;p!==n;++p)t[d+p]=t[f+p]}++o}}if(s>0){e[o]=e[s];for(let a=s*n,c=o*n,h=0;h!==n;++h)t[c+h]=t[a+h];++o}return o!==e.length?(this.times=ft.arraySlice(e,0,o),this.values=ft.arraySlice(t,0,o*n)):(this.times=e,this.values=t),this}clone(){const e=ft.arraySlice(this.times,0),t=ft.arraySlice(this.values,0),n=this.constructor,i=new n(this.name,e,t);return i.createInterpolant=this.createInterpolant,i}}yn.prototype.TimeBufferType=Float32Array;yn.prototype.ValueBufferType=Float32Array;yn.prototype.DefaultInterpolation=Es;class ar extends yn{}ar.prototype.ValueTypeName="bool";ar.prototype.ValueBufferType=Array;ar.prototype.DefaultInterpolation=Ms;ar.prototype.InterpolantFactoryMethodLinear=void 0;ar.prototype.InterpolantFactoryMethodSmooth=void 0;class Ec extends yn{}Ec.prototype.ValueTypeName="color";class Cs extends yn{}Cs.prototype.ValueTypeName="number";class Zd extends Kn{constructor(e,t,n,i){super(e,t,n,i)}interpolate_(e,t,n,i){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,c=(n-t)/(i-t);let h=e*a;for(let u=h+a;h!==u;h+=4)Ot.slerpFlat(s,0,o,h-a,o,h,c);return s}}class $r extends yn{InterpolantFactoryMethodLinear(e){return new Zd(this.times,this.values,this.getValueSize(),e)}}$r.prototype.ValueTypeName="quaternion";$r.prototype.DefaultInterpolation=Es;$r.prototype.InterpolantFactoryMethodSmooth=void 0;class lr extends yn{}lr.prototype.ValueTypeName="string";lr.prototype.ValueBufferType=Array;lr.prototype.DefaultInterpolation=Ms;lr.prototype.InterpolantFactoryMethodLinear=void 0;lr.prototype.InterpolantFactoryMethodSmooth=void 0;class Ls extends yn{}Ls.prototype.ValueTypeName="vector";class Ps{constructor(e,t=-1,n,i=ta){this.name=e,this.tracks=n,this.duration=t,this.blendMode=i,this.uuid=Jt(),this.duration<0&&this.resetDuration()}static parse(e){const t=[],n=e.tracks,i=1/(e.fps||1);for(let o=0,a=n.length;o!==a;++o)t.push(J0(n[o]).scale(i));const s=new this(e.name,e.duration,t,e.blendMode);return s.uuid=e.uuid,s}static toJSON(e){const t=[],n=e.tracks,i={name:e.name,duration:e.duration,tracks:t,uuid:e.uuid,blendMode:e.blendMode};for(let s=0,o=n.length;s!==o;++s)t.push(yn.toJSON(n[s]));return i}static CreateFromMorphTargetSequence(e,t,n,i){const s=t.length,o=[];for(let a=0;a<s;a++){let c=[],h=[];c.push((a+s-1)%s,a,(a+1)%s),h.push(0,1,0);const u=ft.getKeyframeOrder(c);c=ft.sortedArray(c,1,u),h=ft.sortedArray(h,1,u),!i&&c[0]===0&&(c.push(s),h.push(h[0])),o.push(new Cs(".morphTargetInfluences["+t[a].name+"]",c,h).scale(1/n))}return new this(e,-1,o)}static findByName(e,t){let n=e;if(!Array.isArray(e)){const i=e;n=i.geometry&&i.geometry.animations||i.animations}for(let i=0;i<n.length;i++)if(n[i].name===t)return n[i];return null}static CreateClipsFromMorphTargetSequences(e,t,n){const i={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,c=e.length;a<c;a++){const h=e[a],u=h.name.match(s);if(u&&u.length>1){const f=u[1];let d=i[f];d||(i[f]=d=[]),d.push(h)}}const o=[];for(const a in i)o.push(this.CreateFromMorphTargetSequence(a,i[a],t,n));return o}static parseAnimation(e,t){if(!e)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const n=function(f,d,p,v,m){if(p.length!==0){const g=[],E=[];ft.flattenJSON(p,g,E,v),g.length!==0&&m.push(new f(d,g,E))}},i=[],s=e.name||"default",o=e.fps||30,a=e.blendMode;let c=e.length||-1;const h=e.hierarchy||[];for(let f=0;f<h.length;f++){const d=h[f].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const p={};let v;for(v=0;v<d.length;v++)if(d[v].morphTargets)for(let m=0;m<d[v].morphTargets.length;m++)p[d[v].morphTargets[m]]=-1;for(const m in p){const g=[],E=[];for(let b=0;b!==d[v].morphTargets.length;++b){const C=d[v];g.push(C.time),E.push(C.morphTarget===m?1:0)}i.push(new Cs(".morphTargetInfluence["+m+"]",g,E))}c=p.length*o}else{const p=".bones["+t[f].name+"]";n(Ls,p+".position",d,"pos",i),n($r,p+".quaternion",d,"rot",i),n(Ls,p+".scale",d,"scl",i)}}return i.length===0?null:new this(s,c,i,a)}resetDuration(){const e=this.tracks;let t=0;for(let n=0,i=e.length;n!==i;++n){const s=this.tracks[n];t=Math.max(t,s.times[s.times.length-1])}return this.duration=t,this}trim(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].trim(0,this.duration);return this}validate(){let e=!0;for(let t=0;t<this.tracks.length;t++)e=e&&this.tracks[t].validate();return e}optimize(){for(let e=0;e<this.tracks.length;e++)this.tracks[e].optimize();return this}clone(){const e=[];for(let t=0;t<this.tracks.length;t++)e.push(this.tracks[t].clone());return new this.constructor(this.name,this.duration,e,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function j0(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Cs;case"vector":case"vector2":case"vector3":case"vector4":return Ls;case"color":return Ec;case"quaternion":return $r;case"bool":case"boolean":return ar;case"string":return lr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function J0(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const e=j0(r.type);if(r.times===void 0){const t=[],n=[];ft.flattenJSON(r.keys,t,n,"value"),r.times=t,r.values=n}return e.parse!==void 0?e.parse(r):new e(r.name,r.times,r.values,r.interpolation)}const nr={enabled:!1,files:{},add:function(r,e){this.enabled!==!1&&(this.files[r]=e)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class wc{constructor(e,t,n){const i=this;let s=!1,o=0,a=0,c;const h=[];this.onStart=void 0,this.onLoad=e,this.onProgress=t,this.onError=n,this.itemStart=function(u){a++,s===!1&&i.onStart!==void 0&&i.onStart(u,o,a),s=!0},this.itemEnd=function(u){o++,i.onProgress!==void 0&&i.onProgress(u,o,a),o===a&&(s=!1,i.onLoad!==void 0&&i.onLoad())},this.itemError=function(u){i.onError!==void 0&&i.onError(u)},this.resolveURL=function(u){return c?c(u):u},this.setURLModifier=function(u){return c=u,this},this.addHandler=function(u,f){return h.push(u,f),this},this.removeHandler=function(u){const f=h.indexOf(u);return f!==-1&&h.splice(f,2),this},this.getHandler=function(u){for(let f=0,d=h.length;f<d;f+=2){const p=h[f],v=h[f+1];if(p.global&&(p.lastIndex=0),p.test(u))return v}return null}}}const Kd=new wc;class Vt{constructor(e){this.manager=e!==void 0?e:Kd,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(e,t){const n=this;return new Promise(function(i,s){n.load(e,i,t,s)})}parse(){}setCrossOrigin(e){return this.crossOrigin=e,this}setWithCredentials(e){return this.withCredentials=e,this}setPath(e){return this.path=e,this}setResourcePath(e){return this.resourcePath=e,this}setRequestHeader(e){return this.requestHeader=e,this}}const Vn={};class Ln extends Vt{constructor(e){super(e)}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=nr.get(e);if(s!==void 0)return this.manager.itemStart(e),setTimeout(()=>{t&&t(s),this.manager.itemEnd(e)},0),s;if(Vn[e]!==void 0){Vn[e].push({onLoad:t,onProgress:n,onError:i});return}Vn[e]=[],Vn[e].push({onLoad:t,onProgress:n,onError:i});const o=new Request(e,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,c=this.responseType;fetch(o).then(h=>{if(h.status===200||h.status===0){if(h.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream=="undefined"||h.body===void 0||h.body.getReader===void 0)return h;const u=Vn[e],f=h.body.getReader(),d=h.headers.get("Content-Length"),p=d?parseInt(d):0,v=p!==0;let m=0;const g=new ReadableStream({start(E){b();function b(){f.read().then(({done:C,value:S})=>{if(C)E.close();else{m+=S.byteLength;const A=new ProgressEvent("progress",{lengthComputable:v,loaded:m,total:p});for(let O=0,V=u.length;O<V;O++){const U=u[O];U.onProgress&&U.onProgress(A)}E.enqueue(S),b()}})}}});return new Response(g)}else throw Error(`fetch for "${h.url}" responded with ${h.status}: ${h.statusText}`)}).then(h=>{switch(c){case"arraybuffer":return h.arrayBuffer();case"blob":return h.blob();case"document":return h.text().then(u=>new DOMParser().parseFromString(u,a));case"json":return h.json();default:if(a===void 0)return h.text();{const f=/charset="?([^;"\s]*)"?/i.exec(a),d=f&&f[1]?f[1].toLowerCase():void 0,p=new TextDecoder(d);return h.arrayBuffer().then(v=>p.decode(v))}}}).then(h=>{nr.add(e,h);const u=Vn[e];delete Vn[e];for(let f=0,d=u.length;f<d;f++){const p=u[f];p.onLoad&&p.onLoad(h)}}).catch(h=>{const u=Vn[e];if(u===void 0)throw this.manager.itemError(e),h;delete Vn[e];for(let f=0,d=u.length;f<d;f++){const p=u[f];p.onError&&p.onError(h)}this.manager.itemError(e)}).finally(()=>{this.manager.itemEnd(e)}),this.manager.itemStart(e)}setResponseType(e){return this.responseType=e,this}setMimeType(e){return this.mimeType=e,this}}class Q0 extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ln(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e){const t=[];for(let n=0;n<e.length;n++){const i=Ps.parse(e[n]);t.push(i)}return t}}class ey extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=[],a=new rc,c=new Ln(this.manager);c.setPath(this.path),c.setResponseType("arraybuffer"),c.setRequestHeader(this.requestHeader),c.setWithCredentials(s.withCredentials);let h=0;function u(f){c.load(e[f],function(d){const p=s.parse(d,!0);o[f]={width:p.width,height:p.height,format:p.format,mipmaps:p.mipmaps},h+=1,h===6&&(p.mipmapCount===1&&(a.minFilter=_t),a.image=o,a.format=p.format,a.needsUpdate=!0,t&&t(a))},n,i)}if(Array.isArray(e))for(let f=0,d=e.length;f<d;++f)u(f);else c.load(e,function(f){const d=s.parse(f,!0);if(d.isCubemap){const p=d.mipmaps.length/d.mipmapCount;for(let v=0;v<p;v++){o[v]={mipmaps:[]};for(let m=0;m<d.mipmapCount;m++)o[v].mipmaps.push(d.mipmaps[v*d.mipmapCount+m]),o[v].format=d.format,o[v].width=d.width,o[v].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=_t),a.format=d.format,a.needsUpdate=!0,t&&t(a)},n,i);return a}}class Is extends Vt{constructor(e){super(e)}load(e,t,n,i){this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=nr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a=Ts("img");function c(){u(),nr.add(e,this),t&&t(this),s.manager.itemEnd(e)}function h(f){u(),i&&i(f),s.manager.itemError(e),s.manager.itemEnd(e)}function u(){a.removeEventListener("load",c,!1),a.removeEventListener("error",h,!1)}return a.addEventListener("load",c,!1),a.addEventListener("error",h,!1),e.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(e),a.src=e,a}}class $d extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=new Zr,o=new Is(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function c(h){o.load(e[h],function(u){s.images[h]=u,a++,a===6&&(s.needsUpdate=!0,t&&t(s))},void 0,i)}for(let h=0;h<e.length;++h)c(h);return s}}class jd extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new qi,a=new Ln(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(e,function(c){const h=s.parse(c);!h||(h.image!==void 0?o.image=h.image:h.data!==void 0&&(o.image.width=h.width,o.image.height=h.height,o.image.data=h.data),o.wrapS=h.wrapS!==void 0?h.wrapS:zt,o.wrapT=h.wrapT!==void 0?h.wrapT:zt,o.magFilter=h.magFilter!==void 0?h.magFilter:_t,o.minFilter=h.minFilter!==void 0?h.minFilter:_t,o.anisotropy=h.anisotropy!==void 0?h.anisotropy:1,h.encoding!==void 0&&(o.encoding=h.encoding),h.flipY!==void 0&&(o.flipY=h.flipY),h.format!==void 0&&(o.format=h.format),h.type!==void 0&&(o.type=h.type),h.mipmaps!==void 0&&(o.mipmaps=h.mipmaps,o.minFilter=ir),h.mipmapCount===1&&(o.minFilter=_t),h.generateMipmaps!==void 0&&(o.generateMipmaps=h.generateMipmaps),o.needsUpdate=!0,t&&t(o,h))},n,i),o}}class Jd extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=new At,o=new Is(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(e,function(a){s.image=a,s.needsUpdate=!0,t!==void 0&&t(s)},n,i),s}}class _n extends Je{constructor(e,t=1){super(),this.type="Light",this.color=new Me(e),this.intensity=t}dispose(){}copy(e){return super.copy(e),this.color.copy(e.color),this.intensity=e.intensity,this}toJSON(e){const t=super.toJSON(e);return t.object.color=this.color.getHex(),t.object.intensity=this.intensity,this.groundColor!==void 0&&(t.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(t.object.distance=this.distance),this.angle!==void 0&&(t.object.angle=this.angle),this.decay!==void 0&&(t.object.decay=this.decay),this.penumbra!==void 0&&(t.object.penumbra=this.penumbra),this.shadow!==void 0&&(t.object.shadow=this.shadow.toJSON()),t}}_n.prototype.isLight=!0;class bc extends _n{constructor(e,t,n){super(e,n),this.type="HemisphereLight",this.position.copy(Je.DefaultUp),this.updateMatrix(),this.groundColor=new Me(t)}copy(e){return _n.prototype.copy.call(this,e),this.groundColor.copy(e.groundColor),this}}bc.prototype.isHemisphereLight=!0;const Wh=new Ae,Xh=new D,qh=new D;class Tc{constructor(e){this.camera=e,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new le(512,512),this.map=null,this.mapPass=null,this.matrix=new Ae,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Fs,this._frameExtents=new le(1,1),this._viewportCount=1,this._viewports=[new st(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(e){const t=this.camera,n=this.matrix;Xh.setFromMatrixPosition(e.matrixWorld),t.position.copy(Xh),qh.setFromMatrixPosition(e.target.matrixWorld),t.lookAt(qh),t.updateMatrixWorld(),Wh.multiplyMatrices(t.projectionMatrix,t.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Wh),n.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),n.multiply(t.projectionMatrix),n.multiply(t.matrixWorldInverse)}getViewport(e){return this._viewports[e]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(e){return this.camera=e.camera.clone(),this.bias=e.bias,this.radius=e.radius,this.mapSize.copy(e.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const e={};return this.bias!==0&&(e.bias=this.bias),this.normalBias!==0&&(e.normalBias=this.normalBias),this.radius!==1&&(e.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(e.mapSize=this.mapSize.toArray()),e.camera=this.camera.toJSON(!1).object,delete e.camera.matrix,e}}class Qd extends Tc{constructor(){super(new It(50,1,.5,500)),this.focus=1}updateMatrices(e){const t=this.camera,n=bs*2*e.angle*this.focus,i=this.mapSize.width/this.mapSize.height,s=e.distance||t.far;(n!==t.fov||i!==t.aspect||s!==t.far)&&(t.fov=n,t.aspect=i,t.far=s,t.updateProjectionMatrix()),super.updateMatrices(e)}copy(e){return super.copy(e),this.focus=e.focus,this}}Qd.prototype.isSpotLightShadow=!0;class Sc extends _n{constructor(e,t,n=0,i=Math.PI/3,s=0,o=1){super(e,t),this.type="SpotLight",this.position.copy(Je.DefaultUp),this.updateMatrix(),this.target=new Je,this.distance=n,this.angle=i,this.penumbra=s,this.decay=o,this.shadow=new Qd}get power(){return this.intensity*Math.PI}set power(e){this.intensity=e/Math.PI}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.angle=e.angle,this.penumbra=e.penumbra,this.decay=e.decay,this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Sc.prototype.isSpotLight=!0;const Yh=new Ae,us=new D,al=new D;class ef extends Tc{constructor(){super(new It(90,1,.5,500)),this._frameExtents=new le(4,2),this._viewportCount=6,this._viewports=[new st(2,1,1,1),new st(0,1,1,1),new st(3,1,1,1),new st(1,1,1,1),new st(3,0,1,1),new st(1,0,1,1)],this._cubeDirections=[new D(1,0,0),new D(-1,0,0),new D(0,0,1),new D(0,0,-1),new D(0,1,0),new D(0,-1,0)],this._cubeUps=[new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,1,0),new D(0,0,1),new D(0,0,-1)]}updateMatrices(e,t=0){const n=this.camera,i=this.matrix,s=e.distance||n.far;s!==n.far&&(n.far=s,n.updateProjectionMatrix()),us.setFromMatrixPosition(e.matrixWorld),n.position.copy(us),al.copy(n.position),al.add(this._cubeDirections[t]),n.up.copy(this._cubeUps[t]),n.lookAt(al),n.updateMatrixWorld(),i.makeTranslation(-us.x,-us.y,-us.z),Yh.multiplyMatrices(n.projectionMatrix,n.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Yh)}}ef.prototype.isPointLightShadow=!0;class Ac extends _n{constructor(e,t,n=0,i=1){super(e,t),this.type="PointLight",this.distance=n,this.decay=i,this.shadow=new ef}get power(){return this.intensity*4*Math.PI}set power(e){this.intensity=e/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.distance=e.distance,this.decay=e.decay,this.shadow=e.shadow.clone(),this}}Ac.prototype.isPointLight=!0;class tf extends Tc{constructor(){super(new Us(-5,5,5,-5,.5,500))}}tf.prototype.isDirectionalLightShadow=!0;class Rc extends _n{constructor(e,t){super(e,t),this.type="DirectionalLight",this.position.copy(Je.DefaultUp),this.updateMatrix(),this.target=new Je,this.shadow=new tf}dispose(){this.shadow.dispose()}copy(e){return super.copy(e),this.target=e.target.clone(),this.shadow=e.shadow.clone(),this}}Rc.prototype.isDirectionalLight=!0;class Cc extends _n{constructor(e,t){super(e,t),this.type="AmbientLight"}}Cc.prototype.isAmbientLight=!0;class Lc extends _n{constructor(e,t,n=10,i=10){super(e,t),this.type="RectAreaLight",this.width=n,this.height=i}get power(){return this.intensity*this.width*this.height*Math.PI}set power(e){this.intensity=e/(this.width*this.height*Math.PI)}copy(e){return super.copy(e),this.width=e.width,this.height=e.height,this}toJSON(e){const t=super.toJSON(e);return t.object.width=this.width,t.object.height=this.height,t}}Lc.prototype.isRectAreaLight=!0;class Pc{constructor(){this.coefficients=[];for(let e=0;e<9;e++)this.coefficients.push(new D)}set(e){for(let t=0;t<9;t++)this.coefficients[t].copy(e[t]);return this}zero(){for(let e=0;e<9;e++)this.coefficients[e].set(0,0,0);return this}getAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.282095),t.addScaledVector(o[1],.488603*i),t.addScaledVector(o[2],.488603*s),t.addScaledVector(o[3],.488603*n),t.addScaledVector(o[4],1.092548*(n*i)),t.addScaledVector(o[5],1.092548*(i*s)),t.addScaledVector(o[6],.315392*(3*s*s-1)),t.addScaledVector(o[7],1.092548*(n*s)),t.addScaledVector(o[8],.546274*(n*n-i*i)),t}getIrradianceAt(e,t){const n=e.x,i=e.y,s=e.z,o=this.coefficients;return t.copy(o[0]).multiplyScalar(.886227),t.addScaledVector(o[1],2*.511664*i),t.addScaledVector(o[2],2*.511664*s),t.addScaledVector(o[3],2*.511664*n),t.addScaledVector(o[4],2*.429043*n*i),t.addScaledVector(o[5],2*.429043*i*s),t.addScaledVector(o[6],.743125*s*s-.247708),t.addScaledVector(o[7],2*.429043*n*s),t.addScaledVector(o[8],.429043*(n*n-i*i)),t}add(e){for(let t=0;t<9;t++)this.coefficients[t].add(e.coefficients[t]);return this}addScaledSH(e,t){for(let n=0;n<9;n++)this.coefficients[n].addScaledVector(e.coefficients[n],t);return this}scale(e){for(let t=0;t<9;t++)this.coefficients[t].multiplyScalar(e);return this}lerp(e,t){for(let n=0;n<9;n++)this.coefficients[n].lerp(e.coefficients[n],t);return this}equals(e){for(let t=0;t<9;t++)if(!this.coefficients[t].equals(e.coefficients[t]))return!1;return!0}copy(e){return this.set(e.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(e,t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].fromArray(e,t+i*3);return this}toArray(e=[],t=0){const n=this.coefficients;for(let i=0;i<9;i++)n[i].toArray(e,t+i*3);return e}static getBasisAt(e,t){const n=e.x,i=e.y,s=e.z;t[0]=.282095,t[1]=.488603*i,t[2]=.488603*s,t[3]=.488603*n,t[4]=1.092548*n*i,t[5]=1.092548*i*s,t[6]=.315392*(3*s*s-1),t[7]=1.092548*n*s,t[8]=.546274*(n*n-i*i)}}Pc.prototype.isSphericalHarmonics3=!0;class Vs extends _n{constructor(e=new Pc,t=1){super(void 0,t),this.sh=e}copy(e){return super.copy(e),this.sh.copy(e.sh),this}fromJSON(e){return this.intensity=e.intensity,this.sh.fromArray(e.sh),this}toJSON(e){const t=super.toJSON(e);return t.object.sh=this.sh.toArray(),t}}Vs.prototype.isLightProbe=!0;class nf extends Vt{constructor(e){super(e),this.textures={}}load(e,t,n,i){const s=this,o=new Ln(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e){const t=this.textures;function n(s){return t[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),t[s]}const i=Mt.fromType(e.type);if(e.uuid!==void 0&&(i.uuid=e.uuid),e.name!==void 0&&(i.name=e.name),e.color!==void 0&&i.color!==void 0&&i.color.setHex(e.color),e.roughness!==void 0&&(i.roughness=e.roughness),e.metalness!==void 0&&(i.metalness=e.metalness),e.sheen!==void 0&&(i.sheen=e.sheen),e.sheenColor!==void 0&&(i.sheenColor=new Me().setHex(e.sheenColor)),e.sheenRoughness!==void 0&&(i.sheenRoughness=e.sheenRoughness),e.emissive!==void 0&&i.emissive!==void 0&&i.emissive.setHex(e.emissive),e.specular!==void 0&&i.specular!==void 0&&i.specular.setHex(e.specular),e.specularIntensity!==void 0&&(i.specularIntensity=e.specularIntensity),e.specularColor!==void 0&&i.specularColor!==void 0&&i.specularColor.setHex(e.specularColor),e.shininess!==void 0&&(i.shininess=e.shininess),e.clearcoat!==void 0&&(i.clearcoat=e.clearcoat),e.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=e.clearcoatRoughness),e.transmission!==void 0&&(i.transmission=e.transmission),e.thickness!==void 0&&(i.thickness=e.thickness),e.attenuationDistance!==void 0&&(i.attenuationDistance=e.attenuationDistance),e.attenuationColor!==void 0&&i.attenuationColor!==void 0&&i.attenuationColor.setHex(e.attenuationColor),e.fog!==void 0&&(i.fog=e.fog),e.flatShading!==void 0&&(i.flatShading=e.flatShading),e.blending!==void 0&&(i.blending=e.blending),e.combine!==void 0&&(i.combine=e.combine),e.side!==void 0&&(i.side=e.side),e.shadowSide!==void 0&&(i.shadowSide=e.shadowSide),e.opacity!==void 0&&(i.opacity=e.opacity),e.transparent!==void 0&&(i.transparent=e.transparent),e.alphaTest!==void 0&&(i.alphaTest=e.alphaTest),e.depthTest!==void 0&&(i.depthTest=e.depthTest),e.depthWrite!==void 0&&(i.depthWrite=e.depthWrite),e.colorWrite!==void 0&&(i.colorWrite=e.colorWrite),e.stencilWrite!==void 0&&(i.stencilWrite=e.stencilWrite),e.stencilWriteMask!==void 0&&(i.stencilWriteMask=e.stencilWriteMask),e.stencilFunc!==void 0&&(i.stencilFunc=e.stencilFunc),e.stencilRef!==void 0&&(i.stencilRef=e.stencilRef),e.stencilFuncMask!==void 0&&(i.stencilFuncMask=e.stencilFuncMask),e.stencilFail!==void 0&&(i.stencilFail=e.stencilFail),e.stencilZFail!==void 0&&(i.stencilZFail=e.stencilZFail),e.stencilZPass!==void 0&&(i.stencilZPass=e.stencilZPass),e.wireframe!==void 0&&(i.wireframe=e.wireframe),e.wireframeLinewidth!==void 0&&(i.wireframeLinewidth=e.wireframeLinewidth),e.wireframeLinecap!==void 0&&(i.wireframeLinecap=e.wireframeLinecap),e.wireframeLinejoin!==void 0&&(i.wireframeLinejoin=e.wireframeLinejoin),e.rotation!==void 0&&(i.rotation=e.rotation),e.linewidth!==1&&(i.linewidth=e.linewidth),e.dashSize!==void 0&&(i.dashSize=e.dashSize),e.gapSize!==void 0&&(i.gapSize=e.gapSize),e.scale!==void 0&&(i.scale=e.scale),e.polygonOffset!==void 0&&(i.polygonOffset=e.polygonOffset),e.polygonOffsetFactor!==void 0&&(i.polygonOffsetFactor=e.polygonOffsetFactor),e.polygonOffsetUnits!==void 0&&(i.polygonOffsetUnits=e.polygonOffsetUnits),e.dithering!==void 0&&(i.dithering=e.dithering),e.alphaToCoverage!==void 0&&(i.alphaToCoverage=e.alphaToCoverage),e.premultipliedAlpha!==void 0&&(i.premultipliedAlpha=e.premultipliedAlpha),e.visible!==void 0&&(i.visible=e.visible),e.toneMapped!==void 0&&(i.toneMapped=e.toneMapped),e.userData!==void 0&&(i.userData=e.userData),e.vertexColors!==void 0&&(typeof e.vertexColors=="number"?i.vertexColors=e.vertexColors>0:i.vertexColors=e.vertexColors),e.uniforms!==void 0)for(const s in e.uniforms){const o=e.uniforms[s];switch(i.uniforms[s]={},o.type){case"t":i.uniforms[s].value=n(o.value);break;case"c":i.uniforms[s].value=new Me().setHex(o.value);break;case"v2":i.uniforms[s].value=new le().fromArray(o.value);break;case"v3":i.uniforms[s].value=new D().fromArray(o.value);break;case"v4":i.uniforms[s].value=new st().fromArray(o.value);break;case"m3":i.uniforms[s].value=new Lt().fromArray(o.value);break;case"m4":i.uniforms[s].value=new Ae().fromArray(o.value);break;default:i.uniforms[s].value=o.value}}if(e.defines!==void 0&&(i.defines=e.defines),e.vertexShader!==void 0&&(i.vertexShader=e.vertexShader),e.fragmentShader!==void 0&&(i.fragmentShader=e.fragmentShader),e.extensions!==void 0)for(const s in e.extensions)i.extensions[s]=e.extensions[s];if(e.shading!==void 0&&(i.flatShading=e.shading===1),e.size!==void 0&&(i.size=e.size),e.sizeAttenuation!==void 0&&(i.sizeAttenuation=e.sizeAttenuation),e.map!==void 0&&(i.map=n(e.map)),e.matcap!==void 0&&(i.matcap=n(e.matcap)),e.alphaMap!==void 0&&(i.alphaMap=n(e.alphaMap)),e.bumpMap!==void 0&&(i.bumpMap=n(e.bumpMap)),e.bumpScale!==void 0&&(i.bumpScale=e.bumpScale),e.normalMap!==void 0&&(i.normalMap=n(e.normalMap)),e.normalMapType!==void 0&&(i.normalMapType=e.normalMapType),e.normalScale!==void 0){let s=e.normalScale;Array.isArray(s)===!1&&(s=[s,s]),i.normalScale=new le().fromArray(s)}return e.displacementMap!==void 0&&(i.displacementMap=n(e.displacementMap)),e.displacementScale!==void 0&&(i.displacementScale=e.displacementScale),e.displacementBias!==void 0&&(i.displacementBias=e.displacementBias),e.roughnessMap!==void 0&&(i.roughnessMap=n(e.roughnessMap)),e.metalnessMap!==void 0&&(i.metalnessMap=n(e.metalnessMap)),e.emissiveMap!==void 0&&(i.emissiveMap=n(e.emissiveMap)),e.emissiveIntensity!==void 0&&(i.emissiveIntensity=e.emissiveIntensity),e.specularMap!==void 0&&(i.specularMap=n(e.specularMap)),e.specularIntensityMap!==void 0&&(i.specularIntensityMap=n(e.specularIntensityMap)),e.specularColorMap!==void 0&&(i.specularColorMap=n(e.specularColorMap)),e.envMap!==void 0&&(i.envMap=n(e.envMap)),e.envMapIntensity!==void 0&&(i.envMapIntensity=e.envMapIntensity),e.reflectivity!==void 0&&(i.reflectivity=e.reflectivity),e.refractionRatio!==void 0&&(i.refractionRatio=e.refractionRatio),e.lightMap!==void 0&&(i.lightMap=n(e.lightMap)),e.lightMapIntensity!==void 0&&(i.lightMapIntensity=e.lightMapIntensity),e.aoMap!==void 0&&(i.aoMap=n(e.aoMap)),e.aoMapIntensity!==void 0&&(i.aoMapIntensity=e.aoMapIntensity),e.gradientMap!==void 0&&(i.gradientMap=n(e.gradientMap)),e.clearcoatMap!==void 0&&(i.clearcoatMap=n(e.clearcoatMap)),e.clearcoatRoughnessMap!==void 0&&(i.clearcoatRoughnessMap=n(e.clearcoatRoughnessMap)),e.clearcoatNormalMap!==void 0&&(i.clearcoatNormalMap=n(e.clearcoatNormalMap)),e.clearcoatNormalScale!==void 0&&(i.clearcoatNormalScale=new le().fromArray(e.clearcoatNormalScale)),e.transmissionMap!==void 0&&(i.transmissionMap=n(e.transmissionMap)),e.thicknessMap!==void 0&&(i.thicknessMap=n(e.thicknessMap)),e.sheenColorMap!==void 0&&(i.sheenColorMap=n(e.sheenColorMap)),e.sheenRoughnessMap!==void 0&&(i.sheenRoughnessMap=n(e.sheenRoughnessMap)),i}setTextures(e){return this.textures=e,this}}class $o{static decodeText(e){if(typeof TextDecoder!="undefined")return new TextDecoder().decode(e);let t="";for(let n=0,i=e.length;n<i;n++)t+=String.fromCharCode(e[n]);try{return decodeURIComponent(escape(t))}catch{return t}}static extractUrlBase(e){const t=e.lastIndexOf("/");return t===-1?"./":e.slice(0,t+1)}static resolveURL(e,t){return typeof e!="string"||e===""?"":(/^https?:\/\//i.test(t)&&/^\//.test(e)&&(t=t.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(e)||/^data:.*,.*$/i.test(e)||/^blob:.*$/i.test(e)?e:t+e)}}class Ic extends Ue{constructor(){super(),this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(e){return super.copy(e),this.instanceCount=e.instanceCount,this}clone(){return new this.constructor().copy(this)}toJSON(){const e=super.toJSON(this);return e.instanceCount=this.instanceCount,e.isInstancedBufferGeometry=!0,e}}Ic.prototype.isInstancedBufferGeometry=!0;class rf extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ln(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(e,function(a){try{t(s.parse(JSON.parse(a)))}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}parse(e){const t={},n={};function i(p,v){if(t[v]!==void 0)return t[v];const g=p.interleavedBuffers[v],E=s(p,g.buffer),b=Rr(g.type,E),C=new sr(b,g.stride);return C.uuid=g.uuid,t[v]=C,C}function s(p,v){if(n[v]!==void 0)return n[v];const g=p.arrayBuffers[v],E=new Uint32Array(g).buffer;return n[v]=E,E}const o=e.isInstancedBufferGeometry?new Ic:new Ue,a=e.data.index;if(a!==void 0){const p=Rr(a.type,a.array);o.setIndex(new tt(p,1))}const c=e.data.attributes;for(const p in c){const v=c[p];let m;if(v.isInterleavedBufferAttribute){const g=i(e.data,v.data);m=new mi(g,v.itemSize,v.offset,v.normalized)}else{const g=Rr(v.type,v.array),E=v.isInstancedBufferAttribute?ji:tt;m=new E(g,v.itemSize,v.normalized)}v.name!==void 0&&(m.name=v.name),v.usage!==void 0&&m.setUsage(v.usage),v.updateRange!==void 0&&(m.updateRange.offset=v.updateRange.offset,m.updateRange.count=v.updateRange.count),o.setAttribute(p,m)}const h=e.data.morphAttributes;if(h)for(const p in h){const v=h[p],m=[];for(let g=0,E=v.length;g<E;g++){const b=v[g];let C;if(b.isInterleavedBufferAttribute){const S=i(e.data,b.data);C=new mi(S,b.itemSize,b.offset,b.normalized)}else{const S=Rr(b.type,b.array);C=new tt(S,b.itemSize,b.normalized)}b.name!==void 0&&(C.name=b.name),m.push(C)}o.morphAttributes[p]=m}e.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const f=e.data.groups||e.data.drawcalls||e.data.offsets;if(f!==void 0)for(let p=0,v=f.length;p!==v;++p){const m=f[p];o.addGroup(m.start,m.count,m.materialIndex)}const d=e.data.boundingSphere;if(d!==void 0){const p=new D;d.center!==void 0&&p.fromArray(d.center),o.boundingSphere=new xi(p,d.radius)}return e.name&&(o.name=e.name),e.userData&&(o.userData=e.userData),o}}class ty extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=this.path===""?$o.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||o;const a=new Ln(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(e,function(c){let h=null;try{h=JSON.parse(c)}catch(f){i!==void 0&&i(f),console.error("THREE:ObjectLoader: Can't parse "+e+".",f.message);return}const u=h.metadata;if(u===void 0||u.type===void 0||u.type.toLowerCase()==="geometry"){console.error("THREE.ObjectLoader: Can't load "+e);return}s.parse(h,t)},n,i)}async loadAsync(e,t){const n=this,i=this.path===""?$o.extractUrlBase(e):this.path;this.resourcePath=this.resourcePath||i;const s=new Ln(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(e,t),a=JSON.parse(o),c=a.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+e);return await n.parseAsync(a)}parse(e,t){const n=this.parseAnimations(e.animations),i=this.parseShapes(e.shapes),s=this.parseGeometries(e.geometries,i),o=this.parseImages(e.images,function(){t!==void 0&&t(h)}),a=this.parseTextures(e.textures,o),c=this.parseMaterials(e.materials,a),h=this.parseObject(e.object,s,c,a,n),u=this.parseSkeletons(e.skeletons,h);if(this.bindSkeletons(h,u),t!==void 0){let f=!1;for(const d in o)if(o[d]instanceof HTMLImageElement){f=!0;break}f===!1&&t(h)}return h}async parseAsync(e){const t=this.parseAnimations(e.animations),n=this.parseShapes(e.shapes),i=this.parseGeometries(e.geometries,n),s=await this.parseImagesAsync(e.images),o=this.parseTextures(e.textures,s),a=this.parseMaterials(e.materials,o),c=this.parseObject(e.object,i,a,o,t),h=this.parseSkeletons(e.skeletons,c);return this.bindSkeletons(c,h),c}parseShapes(e){const t={};if(e!==void 0)for(let n=0,i=e.length;n<i;n++){const s=new Tn().fromJSON(e[n]);t[s.uuid]=s}return t}parseSkeletons(e,t){const n={},i={};if(t.traverse(function(s){s.isBone&&(i[s.uuid]=s)}),e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=new ma().fromJSON(e[s],i);n[a.uuid]=a}return n}parseGeometries(e,t){const n={};if(e!==void 0){const i=new rf;for(let s=0,o=e.length;s<o;s++){let a;const c=e[s];switch(c.type){case"BufferGeometry":case"InstancedBufferGeometry":a=i.parse(c);break;case"Geometry":console.error("THREE.ObjectLoader: The legacy Geometry type is no longer supported.");break;default:c.type in Vh?a=Vh[c.type].fromJSON(c,t):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${c.type}"`)}a.uuid=c.uuid,c.name!==void 0&&(a.name=c.name),a.isBufferGeometry===!0&&c.userData!==void 0&&(a.userData=c.userData),n[c.uuid]=a}}return n}parseMaterials(e,t){const n={},i={};if(e!==void 0){const s=new nf;s.setTextures(t);for(let o=0,a=e.length;o<a;o++){const c=e[o];if(c.type==="MultiMaterial"){const h=[];for(let u=0;u<c.materials.length;u++){const f=c.materials[u];n[f.uuid]===void 0&&(n[f.uuid]=s.parse(f)),h.push(n[f.uuid])}i[c.uuid]=h}else n[c.uuid]===void 0&&(n[c.uuid]=s.parse(c)),i[c.uuid]=n[c.uuid]}}return i}parseAnimations(e){const t={};if(e!==void 0)for(let n=0;n<e.length;n++){const i=e[n],s=Ps.parse(i);t[s.uuid]=s}return t}parseImages(e,t){const n=this,i={};let s;function o(c){return n.manager.itemStart(c),s.load(c,function(){n.manager.itemEnd(c)},void 0,function(){n.manager.itemError(c),n.manager.itemEnd(c)})}function a(c){if(typeof c=="string"){const h=c,u=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(h)?h:n.resourcePath+h;return o(u)}else return c.data?{data:Rr(c.type,c.data),width:c.width,height:c.height}:null}if(e!==void 0&&e.length>0){const c=new wc(t);s=new Is(c),s.setCrossOrigin(this.crossOrigin);for(let h=0,u=e.length;h<u;h++){const f=e[h],d=f.url;if(Array.isArray(d)){const p=[];for(let v=0,m=d.length;v<m;v++){const g=d[v],E=a(g);E!==null&&(E instanceof HTMLImageElement?p.push(E):p.push(new qi(E.data,E.width,E.height)))}i[f.uuid]=new Hi(p)}else{const p=a(f.url);i[f.uuid]=new Hi(p)}}}return i}async parseImagesAsync(e){const t=this,n={};let i;async function s(o){if(typeof o=="string"){const a=o,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:t.resourcePath+a;return await i.loadAsync(c)}else return o.data?{data:Rr(o.type,o.data),width:o.width,height:o.height}:null}if(e!==void 0&&e.length>0){i=new Is(this.manager),i.setCrossOrigin(this.crossOrigin);for(let o=0,a=e.length;o<a;o++){const c=e[o],h=c.url;if(Array.isArray(h)){const u=[];for(let f=0,d=h.length;f<d;f++){const p=h[f],v=await s(p);v!==null&&(v instanceof HTMLImageElement?u.push(v):u.push(new qi(v.data,v.width,v.height)))}n[c.uuid]=new Hi(u)}else{const u=await s(c.url);n[c.uuid]=new Hi(u)}}}return n}parseTextures(e,t){function n(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const i={};if(e!==void 0)for(let s=0,o=e.length;s<o;s++){const a=e[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),t[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const c=t[a.image],h=c.data;let u;Array.isArray(h)?(u=new Zr,h.length===6&&(u.needsUpdate=!0)):(h&&h.data?u=new qi:u=new At,h&&(u.needsUpdate=!0)),u.source=c,u.uuid=a.uuid,a.name!==void 0&&(u.name=a.name),a.mapping!==void 0&&(u.mapping=n(a.mapping,ny)),a.offset!==void 0&&u.offset.fromArray(a.offset),a.repeat!==void 0&&u.repeat.fromArray(a.repeat),a.center!==void 0&&u.center.fromArray(a.center),a.rotation!==void 0&&(u.rotation=a.rotation),a.wrap!==void 0&&(u.wrapS=n(a.wrap[0],Zh),u.wrapT=n(a.wrap[1],Zh)),a.format!==void 0&&(u.format=a.format),a.type!==void 0&&(u.type=a.type),a.encoding!==void 0&&(u.encoding=a.encoding),a.minFilter!==void 0&&(u.minFilter=n(a.minFilter,Kh)),a.magFilter!==void 0&&(u.magFilter=n(a.magFilter,Kh)),a.anisotropy!==void 0&&(u.anisotropy=a.anisotropy),a.flipY!==void 0&&(u.flipY=a.flipY),a.premultiplyAlpha!==void 0&&(u.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(u.unpackAlignment=a.unpackAlignment),a.userData!==void 0&&(u.userData=a.userData),i[a.uuid]=u}return i}parseObject(e,t,n,i,s){let o;function a(d){return t[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),t[d]}function c(d){if(d!==void 0){if(Array.isArray(d)){const p=[];for(let v=0,m=d.length;v<m;v++){const g=d[v];n[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),p.push(n[g])}return p}return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),n[d]}}function h(d){return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),i[d]}let u,f;switch(e.type){case"Scene":o=new ha,e.background!==void 0&&(Number.isInteger(e.background)?o.background=new Me(e.background):o.background=h(e.background)),e.environment!==void 0&&(o.environment=h(e.environment)),e.fog!==void 0&&(e.fog.type==="Fog"?o.fog=new Hs(e.fog.color,e.fog.near,e.fog.far):e.fog.type==="FogExp2"&&(o.fog=new Bs(e.fog.color,e.fog.density)));break;case"PerspectiveCamera":o=new It(e.fov,e.aspect,e.near,e.far),e.focus!==void 0&&(o.focus=e.focus),e.zoom!==void 0&&(o.zoom=e.zoom),e.filmGauge!==void 0&&(o.filmGauge=e.filmGauge),e.filmOffset!==void 0&&(o.filmOffset=e.filmOffset),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"OrthographicCamera":o=new Us(e.left,e.right,e.top,e.bottom,e.near,e.far),e.zoom!==void 0&&(o.zoom=e.zoom),e.view!==void 0&&(o.view=Object.assign({},e.view));break;case"AmbientLight":o=new Cc(e.color,e.intensity);break;case"DirectionalLight":o=new Rc(e.color,e.intensity);break;case"PointLight":o=new Ac(e.color,e.intensity,e.distance,e.decay);break;case"RectAreaLight":o=new Lc(e.color,e.intensity,e.width,e.height);break;case"SpotLight":o=new Sc(e.color,e.intensity,e.distance,e.angle,e.penumbra,e.decay);break;case"HemisphereLight":o=new bc(e.color,e.groundColor,e.intensity);break;case"LightProbe":o=new Vs().fromJSON(e);break;case"SkinnedMesh":u=a(e.geometry),f=c(e.material),o=new fa(u,f),e.bindMode!==void 0&&(o.bindMode=e.bindMode),e.bindMatrix!==void 0&&o.bindMatrix.fromArray(e.bindMatrix),e.skeleton!==void 0&&(o.skeleton=e.skeleton);break;case"Mesh":u=a(e.geometry),f=c(e.material),o=new St(u,f);break;case"InstancedMesh":u=a(e.geometry),f=c(e.material);const d=e.count,p=e.instanceMatrix,v=e.instanceColor;o=new nc(u,f,d),o.instanceMatrix=new ji(new Float32Array(p.array),16),v!==void 0&&(o.instanceColor=new ji(new Float32Array(v.array),v.itemSize));break;case"LOD":o=new Ud;break;case"Line":o=new Zn(a(e.geometry),c(e.material));break;case"LineLoop":o=new ic(a(e.geometry),c(e.material));break;case"LineSegments":o=new qt(a(e.geometry),c(e.material));break;case"PointCloud":case"Points":o=new zs(a(e.geometry),c(e.material));break;case"Sprite":o=new da(c(e.material));break;case"Group":o=new zi;break;case"Bone":o=new pa;break;default:o=new Je}if(o.uuid=e.uuid,e.name!==void 0&&(o.name=e.name),e.matrix!==void 0?(o.matrix.fromArray(e.matrix),e.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=e.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(e.position!==void 0&&o.position.fromArray(e.position),e.rotation!==void 0&&o.rotation.fromArray(e.rotation),e.quaternion!==void 0&&o.quaternion.fromArray(e.quaternion),e.scale!==void 0&&o.scale.fromArray(e.scale)),e.castShadow!==void 0&&(o.castShadow=e.castShadow),e.receiveShadow!==void 0&&(o.receiveShadow=e.receiveShadow),e.shadow&&(e.shadow.bias!==void 0&&(o.shadow.bias=e.shadow.bias),e.shadow.normalBias!==void 0&&(o.shadow.normalBias=e.shadow.normalBias),e.shadow.radius!==void 0&&(o.shadow.radius=e.shadow.radius),e.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(e.shadow.mapSize),e.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(e.shadow.camera))),e.visible!==void 0&&(o.visible=e.visible),e.frustumCulled!==void 0&&(o.frustumCulled=e.frustumCulled),e.renderOrder!==void 0&&(o.renderOrder=e.renderOrder),e.userData!==void 0&&(o.userData=e.userData),e.layers!==void 0&&(o.layers.mask=e.layers),e.children!==void 0){const d=e.children;for(let p=0;p<d.length;p++)o.add(this.parseObject(d[p],t,n,i,s))}if(e.animations!==void 0){const d=e.animations;for(let p=0;p<d.length;p++){const v=d[p];o.animations.push(s[v])}}if(e.type==="LOD"){e.autoUpdate!==void 0&&(o.autoUpdate=e.autoUpdate);const d=e.levels;for(let p=0;p<d.length;p++){const v=d[p],m=o.getObjectByProperty("uuid",v.object);m!==void 0&&o.addLevel(m,v.distance)}}return o}bindSkeletons(e,t){Object.keys(t).length!==0&&e.traverse(function(n){if(n.isSkinnedMesh===!0&&n.skeleton!==void 0){const i=t[n.skeleton];i===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",n.skeleton):n.bind(i,n.bindMatrix)}})}setTexturePath(e){return console.warn("THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath()."),this.setResourcePath(e)}}const ny={UVMapping:ea,CubeReflectionMapping:di,CubeRefractionMapping:fi,EquirectangularReflectionMapping:vs,EquirectangularRefractionMapping:_s,CubeUVReflectionMapping:qr},Zh={RepeatWrapping:ys,ClampToEdgeWrapping:zt,MirroredRepeatWrapping:xs},Kh={NearestFilter:Tt,NearestMipmapNearestFilter:qo,NearestMipmapLinearFilter:Yo,LinearFilter:_t,LinearMipmapNearestFilter:$l,LinearMipmapLinearFilter:ir};class sf extends Vt{constructor(e){super(e),typeof createImageBitmap=="undefined"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch=="undefined"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(e){return this.options=e,this}load(e,t,n,i){e===void 0&&(e=""),this.path!==void 0&&(e=this.path+e),e=this.manager.resolveURL(e);const s=this,o=nr.get(e);if(o!==void 0)return s.manager.itemStart(e),setTimeout(function(){t&&t(o),s.manager.itemEnd(e)},0),o;const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader,fetch(e,a).then(function(c){return c.blob()}).then(function(c){return createImageBitmap(c,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(c){nr.add(e,c),t&&t(c),s.manager.itemEnd(e)}).catch(function(c){i&&i(c),s.manager.itemError(e),s.manager.itemEnd(e)}),s.manager.itemStart(e)}}sf.prototype.isImageBitmapLoader=!0;let Lo;const Dc={getContext:function(){return Lo===void 0&&(Lo=new(window.AudioContext||window.webkitAudioContext)),Lo},setContext:function(r){Lo=r}};class of extends Vt{constructor(e){super(e)}load(e,t,n,i){const s=this,o=new Ln(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(e,function(a){try{const c=a.slice(0);Dc.getContext().decodeAudioData(c,function(u){t(u)})}catch(c){i?i(c):console.error(c),s.manager.itemError(e)}},n,i)}}class af extends Vs{constructor(e,t,n=1){super(void 0,n);const i=new Me().set(e),s=new Me().set(t),o=new D(i.r,i.g,i.b),a=new D(s.r,s.g,s.b),c=Math.sqrt(Math.PI),h=c*Math.sqrt(.75);this.sh.coefficients[0].copy(o).add(a).multiplyScalar(c),this.sh.coefficients[1].copy(o).sub(a).multiplyScalar(h)}}af.prototype.isHemisphereLightProbe=!0;class lf extends Vs{constructor(e,t=1){super(void 0,t);const n=new Me().set(e);this.sh.coefficients[0].set(n.r,n.g,n.b).multiplyScalar(2*Math.sqrt(Math.PI))}}lf.prototype.isAmbientLightProbe=!0;const $h=new Ae,jh=new Ae,Ci=new Ae;class iy{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new It,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new It,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(e){const t=this._cache;if(t.focus!==e.focus||t.fov!==e.fov||t.aspect!==e.aspect*this.aspect||t.near!==e.near||t.far!==e.far||t.zoom!==e.zoom||t.eyeSep!==this.eyeSep){t.focus=e.focus,t.fov=e.fov,t.aspect=e.aspect*this.aspect,t.near=e.near,t.far=e.far,t.zoom=e.zoom,t.eyeSep=this.eyeSep,Ci.copy(e.projectionMatrix);const i=t.eyeSep/2,s=i*t.near/t.focus,o=t.near*Math.tan(Wi*t.fov*.5)/t.zoom;let a,c;jh.elements[12]=-i,$h.elements[12]=i,a=-o*t.aspect+s,c=o*t.aspect+s,Ci.elements[0]=2*t.near/(c-a),Ci.elements[8]=(c+a)/(c-a),this.cameraL.projectionMatrix.copy(Ci),a=-o*t.aspect-s,c=o*t.aspect-s,Ci.elements[0]=2*t.near/(c-a),Ci.elements[8]=(c+a)/(c-a),this.cameraR.projectionMatrix.copy(Ci)}this.cameraL.matrixWorld.copy(e.matrixWorld).multiply(jh),this.cameraR.matrixWorld.copy(e.matrixWorld).multiply($h)}}class cf{constructor(e=!0){this.autoStart=e,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=Jh(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let e=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const t=Jh();e=(t-this.oldTime)/1e3,this.oldTime=t,this.elapsedTime+=e}return e}}function Jh(){return(typeof performance=="undefined"?Date:performance).now()}const Li=new D,Qh=new Ot,ry=new D,Pi=new D;class sy extends Je{constructor(){super(),this.type="AudioListener",this.context=Dc.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new cf}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(e){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=e,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}updateMatrixWorld(e){super.updateMatrixWorld(e);const t=this.context.listener,n=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(Li,Qh,ry),Pi.set(0,0,-1).applyQuaternion(Qh),t.positionX){const i=this.context.currentTime+this.timeDelta;t.positionX.linearRampToValueAtTime(Li.x,i),t.positionY.linearRampToValueAtTime(Li.y,i),t.positionZ.linearRampToValueAtTime(Li.z,i),t.forwardX.linearRampToValueAtTime(Pi.x,i),t.forwardY.linearRampToValueAtTime(Pi.y,i),t.forwardZ.linearRampToValueAtTime(Pi.z,i),t.upX.linearRampToValueAtTime(n.x,i),t.upY.linearRampToValueAtTime(n.y,i),t.upZ.linearRampToValueAtTime(n.z,i)}else t.setPosition(Li.x,Li.y,Li.z),t.setOrientation(Pi.x,Pi.y,Pi.z,n.x,n.y,n.z)}}class Nc extends Je{constructor(e){super(),this.type="Audio",this.listener=e,this.context=e.context,this.gain=this.context.createGain(),this.gain.connect(e.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(e){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=e,this.connect(),this}setMediaElementSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(e),this.connect(),this}setMediaStreamSource(e){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(e),this.connect(),this}setBuffer(e){return this.buffer=e,this.sourceType="buffer",this.autoplay&&this.play(),this}play(e=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+e;const t=this.context.createBufferSource();return t.buffer=this.buffer,t.loop=this.loop,t.loopStart=this.loopStart,t.loopEnd=this.loopEnd,t.onended=this.onEnded.bind(this),t.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=t,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source.stop(),this.source.onended=null,this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].connect(this.filters[e]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let e=1,t=this.filters.length;e<t;e++)this.filters[e-1].disconnect(this.filters[e]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}getFilters(){return this.filters}setFilters(e){return e||(e=[]),this._connected===!0?(this.disconnect(),this.filters=e.slice(),this.connect()):this.filters=e.slice(),this}setDetune(e){if(this.detune=e,this.source.detune!==void 0)return this.isPlaying===!0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(e){return this.setFilters(e?[e]:[])}setPlaybackRate(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=e,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(e){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=e,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(e){return this.loopStart=e,this}setLoopEnd(e){return this.loopEnd=e,this}getVolume(){return this.gain.gain.value}setVolume(e){return this.gain.gain.setTargetAtTime(e,this.context.currentTime,.01),this}}const Ii=new D,eu=new Ot,oy=new D,Di=new D;class ay extends Nc{constructor(e){super(e),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(e){return this.panner.refDistance=e,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(e){return this.panner.rolloffFactor=e,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(e){return this.panner.distanceModel=e,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(e){return this.panner.maxDistance=e,this}setDirectionalCone(e,t,n){return this.panner.coneInnerAngle=e,this.panner.coneOuterAngle=t,this.panner.coneOuterGain=n,this}updateMatrixWorld(e){if(super.updateMatrixWorld(e),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(Ii,eu,oy),Di.set(0,0,1).applyQuaternion(eu);const t=this.panner;if(t.positionX){const n=this.context.currentTime+this.listener.timeDelta;t.positionX.linearRampToValueAtTime(Ii.x,n),t.positionY.linearRampToValueAtTime(Ii.y,n),t.positionZ.linearRampToValueAtTime(Ii.z,n),t.orientationX.linearRampToValueAtTime(Di.x,n),t.orientationY.linearRampToValueAtTime(Di.y,n),t.orientationZ.linearRampToValueAtTime(Di.z,n)}else t.setPosition(Ii.x,Ii.y,Ii.z),t.setOrientation(Di.x,Di.y,Di.z)}}class hf{constructor(e,t=2048){this.analyser=e.context.createAnalyser(),this.analyser.fftSize=t,this.data=new Uint8Array(this.analyser.frequencyBinCount),e.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let e=0;const t=this.getFrequencyData();for(let n=0;n<t.length;n++)e+=t[n];return e/t.length}}class uf{constructor(e,t,n){this.binding=e,this.valueSize=n;let i,s,o;switch(t){case"quaternion":i=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(n*6),this._workIndex=5;break;case"string":case"bool":i=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(n*5);break;default:i=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(n*5)}this._mixBufferRegion=i,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(e,t){const n=this.buffer,i=this.valueSize,s=e*i+i;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==i;++a)n[s+a]=n[a];o=t}else{o+=t;const a=t/o;this._mixBufferRegion(n,s,0,a,i)}this.cumulativeWeight=o}accumulateAdditive(e){const t=this.buffer,n=this.valueSize,i=n*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(t,i,0,e,n),this.cumulativeWeightAdditive+=e}apply(e){const t=this.valueSize,n=this.buffer,i=e*t+t,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const c=t*this._origIndex;this._mixBufferRegion(n,i,c,1-s,t)}o>0&&this._mixBufferRegionAdditive(n,i,this._addIndex*t,1,t);for(let c=t,h=t+t;c!==h;++c)if(n[c]!==n[c+t]){a.setValue(n,i);break}}saveOriginalState(){const e=this.binding,t=this.buffer,n=this.valueSize,i=n*this._origIndex;e.getValue(t,i);for(let s=n,o=i;s!==o;++s)t[s]=t[i+s%n];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const e=this.valueSize*3;this.binding.setValue(this.buffer,e)}_setAdditiveIdentityNumeric(){const e=this._addIndex*this.valueSize,t=e+this.valueSize;for(let n=e;n<t;n++)this.buffer[n]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const e=this._origIndex*this.valueSize,t=this._addIndex*this.valueSize;for(let n=0;n<this.valueSize;n++)this.buffer[t+n]=this.buffer[e+n]}_select(e,t,n,i,s){if(i>=.5)for(let o=0;o!==s;++o)e[t+o]=e[n+o]}_slerp(e,t,n,i){Ot.slerpFlat(e,t,e,t,e,n,i)}_slerpAdditive(e,t,n,i,s){const o=this._workIndex*s;Ot.multiplyQuaternionsFlat(e,o,e,t,e,n),Ot.slerpFlat(e,t,e,t,e,o,i)}_lerp(e,t,n,i,s){const o=1-i;for(let a=0;a!==s;++a){const c=t+a;e[c]=e[c]*o+e[n+a]*i}}_lerpAdditive(e,t,n,i,s){for(let o=0;o!==s;++o){const a=t+o;e[a]=e[a]+e[n+o]*i}}}const Oc="\\[\\]\\.:\\/",ly=new RegExp("["+Oc+"]","g"),Fc="[^"+Oc+"]",cy="[^"+Oc.replace("\\.","")+"]",hy=/((?:WC+[\/:])*)/.source.replace("WC",Fc),uy=/(WCOD+)?/.source.replace("WCOD",cy),dy=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",Fc),fy=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",Fc),py=new RegExp("^"+hy+uy+dy+fy+"$"),my=["material","materials","bones"];class gy{constructor(e,t,n){const i=n||nt.parseTrackName(t);this._targetGroup=e,this._bindings=e.subscribe_(t,i)}getValue(e,t){this.bind();const n=this._targetGroup.nCachedObjects_,i=this._bindings[n];i!==void 0&&i.getValue(e,t)}setValue(e,t){const n=this._bindings;for(let i=this._targetGroup.nCachedObjects_,s=n.length;i!==s;++i)n[i].setValue(e,t)}bind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].bind()}unbind(){const e=this._bindings;for(let t=this._targetGroup.nCachedObjects_,n=e.length;t!==n;++t)e[t].unbind()}}class nt{constructor(e,t,n){this.path=t,this.parsedPath=n||nt.parseTrackName(t),this.node=nt.findNode(e,this.parsedPath.nodeName)||e,this.rootNode=e,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(e,t,n){return e&&e.isAnimationObjectGroup?new nt.Composite(e,t,n):new nt(e,t,n)}static sanitizeNodeName(e){return e.replace(/\s/g,"_").replace(ly,"")}static parseTrackName(e){const t=py.exec(e);if(t===null)throw new Error("PropertyBinding: Cannot parse trackName: "+e);const n={nodeName:t[2],objectName:t[3],objectIndex:t[4],propertyName:t[5],propertyIndex:t[6]},i=n.nodeName&&n.nodeName.lastIndexOf(".");if(i!==void 0&&i!==-1){const s=n.nodeName.substring(i+1);my.indexOf(s)!==-1&&(n.nodeName=n.nodeName.substring(0,i),n.objectName=s)}if(n.propertyName===null||n.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+e);return n}static findNode(e,t){if(t===void 0||t===""||t==="."||t===-1||t===e.name||t===e.uuid)return e;if(e.skeleton){const n=e.skeleton.getBoneByName(t);if(n!==void 0)return n}if(e.children){const n=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===t||a.uuid===t)return a;const c=n(a.children);if(c)return c}return null},i=n(e.children);if(i)return i}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(e,t){e[t]=this.targetObject[this.propertyName]}_getValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)e[t++]=n[i]}_getValue_arrayElement(e,t){e[t]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(e,t){this.resolvedProperty.toArray(e,t)}_setValue_direct(e,t){this.targetObject[this.propertyName]=e[t]}_setValue_direct_setNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(e,t){this.targetObject[this.propertyName]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++]}_setValue_array_setNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(e,t){const n=this.resolvedProperty;for(let i=0,s=n.length;i!==s;++i)n[i]=e[t++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(e,t){this.resolvedProperty[this.propertyIndex]=e[t]}_setValue_arrayElement_setNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty[this.propertyIndex]=e[t],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(e,t){this.resolvedProperty.fromArray(e,t)}_setValue_fromArray_setNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(e,t){this.resolvedProperty.fromArray(e,t),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(e,t){this.bind(),this.getValue(e,t)}_setValue_unbound(e,t){this.bind(),this.setValue(e,t)}bind(){let e=this.node;const t=this.parsedPath,n=t.objectName,i=t.propertyName;let s=t.propertyIndex;if(e||(e=nt.findNode(this.rootNode,t.nodeName)||this.rootNode,this.node=e),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!e){console.error("THREE.PropertyBinding: Trying to update node for track: "+this.path+" but it wasn't found.");return}if(n){let h=t.objectIndex;switch(n){case"materials":if(!e.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!e.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}e=e.material.materials;break;case"bones":if(!e.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}e=e.skeleton.bones;for(let u=0;u<e.length;u++)if(e[u].name===h){h=u;break}break;default:if(e[n]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}e=e[n]}if(h!==void 0){if(e[h]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,e);return}e=e[h]}}const o=e[i];if(o===void 0){const h=t.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+h+"."+i+" but it wasn't found.",e);return}let a=this.Versioning.None;this.targetObject=e,e.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:e.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let c=this.BindingType.Direct;if(s!==void 0){if(i==="morphTargetInfluences"){if(!e.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(e.geometry.isBufferGeometry){if(!e.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}e.morphTargetDictionary[s]!==void 0&&(s=e.morphTargetDictionary[s])}else{console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.",this);return}}c=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(c=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(c=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=i;this.getValue=this.GetterByBindingType[c],this.setValue=this.SetterByBindingTypeAndVersioning[c][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}nt.Composite=gy;nt.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};nt.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};nt.prototype.GetterByBindingType=[nt.prototype._getValue_direct,nt.prototype._getValue_array,nt.prototype._getValue_arrayElement,nt.prototype._getValue_toArray];nt.prototype.SetterByBindingTypeAndVersioning=[[nt.prototype._setValue_direct,nt.prototype._setValue_direct_setNeedsUpdate,nt.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[nt.prototype._setValue_array,nt.prototype._setValue_array_setNeedsUpdate,nt.prototype._setValue_array_setMatrixWorldNeedsUpdate],[nt.prototype._setValue_arrayElement,nt.prototype._setValue_arrayElement_setNeedsUpdate,nt.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[nt.prototype._setValue_fromArray,nt.prototype._setValue_fromArray_setNeedsUpdate,nt.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class df{constructor(){this.uuid=Jt(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const e={};this._indicesByUUID=e;for(let n=0,i=arguments.length;n!==i;++n)e[arguments[n].uuid]=n;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const t=this;this.stats={objects:{get total(){return t._objects.length},get inUse(){return this.total-t.nCachedObjects_}},get bindingsPerObject(){return t._bindings.length}}}add(){const e=this._objects,t=this._indicesByUUID,n=this._paths,i=this._parsedPaths,s=this._bindings,o=s.length;let a,c=e.length,h=this.nCachedObjects_;for(let u=0,f=arguments.length;u!==f;++u){const d=arguments[u],p=d.uuid;let v=t[p];if(v===void 0){v=c++,t[p]=v,e.push(d);for(let m=0,g=o;m!==g;++m)s[m].push(new nt(d,n[m],i[m]))}else if(v<h){a=e[v];const m=--h,g=e[m];t[g.uuid]=v,e[v]=g,t[p]=m,e[m]=d;for(let E=0,b=o;E!==b;++E){const C=s[E],S=C[m];let A=C[v];C[v]=S,A===void 0&&(A=new nt(d,n[E],i[E])),C[m]=A}}else e[v]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=h}remove(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const c=arguments[o],h=c.uuid,u=t[h];if(u!==void 0&&u>=s){const f=s++,d=e[f];t[d.uuid]=u,e[u]=d,t[h]=f,e[f]=c;for(let p=0,v=i;p!==v;++p){const m=n[p],g=m[f],E=m[u];m[u]=g,m[f]=E}}}this.nCachedObjects_=s}uncache(){const e=this._objects,t=this._indicesByUUID,n=this._bindings,i=n.length;let s=this.nCachedObjects_,o=e.length;for(let a=0,c=arguments.length;a!==c;++a){const h=arguments[a],u=h.uuid,f=t[u];if(f!==void 0)if(delete t[u],f<s){const d=--s,p=e[d],v=--o,m=e[v];t[p.uuid]=f,e[f]=p,t[m.uuid]=d,e[d]=m,e.pop();for(let g=0,E=i;g!==E;++g){const b=n[g],C=b[d],S=b[v];b[f]=C,b[d]=S,b.pop()}}else{const d=--o,p=e[d];d>0&&(t[p.uuid]=f),e[f]=p,e.pop();for(let v=0,m=i;v!==m;++v){const g=n[v];g[f]=g[d],g.pop()}}}this.nCachedObjects_=s}subscribe_(e,t){const n=this._bindingsIndicesByPath;let i=n[e];const s=this._bindings;if(i!==void 0)return s[i];const o=this._paths,a=this._parsedPaths,c=this._objects,h=c.length,u=this.nCachedObjects_,f=new Array(h);i=s.length,n[e]=i,o.push(e),a.push(t),s.push(f);for(let d=u,p=c.length;d!==p;++d){const v=c[d];f[d]=new nt(v,e,t)}return f}unsubscribe_(e){const t=this._bindingsIndicesByPath,n=t[e];if(n!==void 0){const i=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,c=o[a],h=e[a];t[h]=n,o[n]=c,o.pop(),s[n]=s[a],s.pop(),i[n]=i[a],i.pop()}}}df.prototype.isAnimationObjectGroup=!0;class vy{constructor(e,t,n=null,i=t.blendMode){this._mixer=e,this._clip=t,this._localRoot=n,this.blendMode=i;const s=t.tracks,o=s.length,a=new Array(o),c={endingStart:Ui,endingEnd:Ui};for(let h=0;h!==o;++h){const u=s[h].createInterpolant(null);a[h]=u,u.settings=c}this._interpolantSettings=c,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=id,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(e){return this._startTime=e,this}setLoop(e,t){return this.loop=e,this.repetitions=t,this}setEffectiveWeight(e){return this.weight=e,this._effectiveWeight=this.enabled?e:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(e){return this._scheduleFading(e,0,1)}fadeOut(e){return this._scheduleFading(e,1,0)}crossFadeFrom(e,t,n){if(e.fadeOut(t),this.fadeIn(t),n){const i=this._clip.duration,s=e._clip.duration,o=s/i,a=i/s;e.warp(1,o,t),this.warp(a,1,t)}return this}crossFadeTo(e,t,n){return e.crossFadeFrom(this,t,n)}stopFading(){const e=this._weightInterpolant;return e!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}setEffectiveTimeScale(e){return this.timeScale=e,this._effectiveTimeScale=this.paused?0:e,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(e){return this.timeScale=this._clip.duration/e,this.stopWarping()}syncWith(e){return this.time=e.time,this.timeScale=e.timeScale,this.stopWarping()}halt(e){return this.warp(this._effectiveTimeScale,0,e)}warp(e,t,n){const i=this._mixer,s=i.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=i._lendControlInterpolant(),this._timeScaleInterpolant=a);const c=a.parameterPositions,h=a.sampleValues;return c[0]=s,c[1]=s+n,h[0]=e/o,h[1]=t/o,this}stopWarping(){const e=this._timeScaleInterpolant;return e!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(e)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(e,t,n,i){if(!this.enabled){this._updateWeight(e);return}const s=this._startTime;if(s!==null){const c=(e-s)*n;if(c<0||n===0)return;this._startTime=null,t=n*c}t*=this._updateTimeScale(e);const o=this._updateTime(t),a=this._updateWeight(e);if(a>0){const c=this._interpolants,h=this._propertyBindings;switch(this.blendMode){case jl:for(let u=0,f=c.length;u!==f;++u)c[u].evaluate(o),h[u].accumulateAdditive(a);break;case ta:default:for(let u=0,f=c.length;u!==f;++u)c[u].evaluate(o),h[u].accumulate(i,a)}}}_updateWeight(e){let t=0;if(this.enabled){t=this.weight;const n=this._weightInterpolant;if(n!==null){const i=n.evaluate(e)[0];t*=i,e>n.parameterPositions[1]&&(this.stopFading(),i===0&&(this.enabled=!1))}}return this._effectiveWeight=t,t}_updateTimeScale(e){let t=0;if(!this.paused){t=this.timeScale;const n=this._timeScaleInterpolant;n!==null&&(t*=n.evaluate(e)[0],e>n.parameterPositions[1]&&(this.stopWarping(),t===0?this.paused=!0:this.timeScale=t))}return this._effectiveTimeScale=t,t}_updateTime(e){const t=this._clip.duration,n=this.loop;let i=this.time+e,s=this._loopCount;const o=n===rd;if(e===0)return s===-1?i:o&&(s&1)===1?t-i:i;if(n===nd){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));e:{if(i>=t)i=t;else if(i<0)i=0;else{this.time=i;break e}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e<0?-1:1})}}else{if(s===-1&&(e>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),i>=t||i<0){const a=Math.floor(i/t);i-=t*a,s+=Math.abs(a);const c=this.repetitions-s;if(c<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,i=e>0?t:0,this.time=i,this._mixer.dispatchEvent({type:"finished",action:this,direction:e>0?1:-1});else{if(c===1){const h=e<0;this._setEndings(h,!h,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=i,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=i;if(o&&(s&1)===1)return t-i}return i}_setEndings(e,t,n){const i=this._interpolantSettings;n?(i.endingStart=Bi,i.endingEnd=Bi):(e?i.endingStart=this.zeroSlopeAtStart?Bi:Ui:i.endingStart=ws,t?i.endingEnd=this.zeroSlopeAtEnd?Bi:Ui:i.endingEnd=ws)}_scheduleFading(e,t,n){const i=this._mixer,s=i.time;let o=this._weightInterpolant;o===null&&(o=i._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,c=o.sampleValues;return a[0]=s,c[0]=t,a[1]=s+e,c[1]=n,this}}class ff extends _i{constructor(e){super(),this._root=e,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(e,t){const n=e._localRoot||this._root,i=e._clip.tracks,s=i.length,o=e._propertyBindings,a=e._interpolants,c=n.uuid,h=this._bindingsByRootAndName;let u=h[c];u===void 0&&(u={},h[c]=u);for(let f=0;f!==s;++f){const d=i[f],p=d.name;let v=u[p];if(v!==void 0)++v.referenceCount,o[f]=v;else{if(v=o[f],v!==void 0){v._cacheIndex===null&&(++v.referenceCount,this._addInactiveBinding(v,c,p));continue}const m=t&&t._propertyBindings[f].binding.parsedPath;v=new uf(nt.create(n,p,m),d.ValueTypeName,d.getValueSize()),++v.referenceCount,this._addInactiveBinding(v,c,p),o[f]=v}a[f].resultBuffer=v.buffer}}_activateAction(e){if(!this._isActiveAction(e)){if(e._cacheIndex===null){const n=(e._localRoot||this._root).uuid,i=e._clip.uuid,s=this._actionsByClip[i];this._bindAction(e,s&&s.knownActions[0]),this._addInactiveAction(e,i,n)}const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(e)}}_deactivateAction(e){if(this._isActiveAction(e)){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(e)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const e=this;this.stats={actions:{get total(){return e._actions.length},get inUse(){return e._nActiveActions}},bindings:{get total(){return e._bindings.length},get inUse(){return e._nActiveBindings}},controlInterpolants:{get total(){return e._controlInterpolants.length},get inUse(){return e._nActiveControlInterpolants}}}}_isActiveAction(e){const t=e._cacheIndex;return t!==null&&t<this._nActiveActions}_addInactiveAction(e,t,n){const i=this._actions,s=this._actionsByClip;let o=s[t];if(o===void 0)o={knownActions:[e],actionByRoot:{}},e._byClipCacheIndex=0,s[t]=o;else{const a=o.knownActions;e._byClipCacheIndex=a.length,a.push(e)}e._cacheIndex=i.length,i.push(e),o.actionByRoot[n]=e}_removeInactiveAction(e){const t=this._actions,n=t[t.length-1],i=e._cacheIndex;n._cacheIndex=i,t[i]=n,t.pop(),e._cacheIndex=null;const s=e._clip.uuid,o=this._actionsByClip,a=o[s],c=a.knownActions,h=c[c.length-1],u=e._byClipCacheIndex;h._byClipCacheIndex=u,c[u]=h,c.pop(),e._byClipCacheIndex=null;const f=a.actionByRoot,d=(e._localRoot||this._root).uuid;delete f[d],c.length===0&&delete o[s],this._removeInactiveBindingsForAction(e)}_removeInactiveBindingsForAction(e){const t=e._propertyBindings;for(let n=0,i=t.length;n!==i;++n){const s=t[n];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(e){const t=this._actions,n=e._cacheIndex,i=this._nActiveActions++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackAction(e){const t=this._actions,n=e._cacheIndex,i=--this._nActiveActions,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_addInactiveBinding(e,t,n){const i=this._bindingsByRootAndName,s=this._bindings;let o=i[t];o===void 0&&(o={},i[t]=o),o[n]=e,e._cacheIndex=s.length,s.push(e)}_removeInactiveBinding(e){const t=this._bindings,n=e.binding,i=n.rootNode.uuid,s=n.path,o=this._bindingsByRootAndName,a=o[i],c=t[t.length-1],h=e._cacheIndex;c._cacheIndex=h,t[h]=c,t.pop(),delete a[s],Object.keys(a).length===0&&delete o[i]}_lendBinding(e){const t=this._bindings,n=e._cacheIndex,i=this._nActiveBindings++,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_takeBackBinding(e){const t=this._bindings,n=e._cacheIndex,i=--this._nActiveBindings,s=t[i];e._cacheIndex=i,t[i]=e,s._cacheIndex=n,t[n]=s}_lendControlInterpolant(){const e=this._controlInterpolants,t=this._nActiveControlInterpolants++;let n=e[t];return n===void 0&&(n=new Mc(new Float32Array(2),new Float32Array(2),1,this._controlInterpolantsResultBuffer),n.__cacheIndex=t,e[t]=n),n}_takeBackControlInterpolant(e){const t=this._controlInterpolants,n=e.__cacheIndex,i=--this._nActiveControlInterpolants,s=t[i];e.__cacheIndex=i,t[i]=e,s.__cacheIndex=n,t[n]=s}clipAction(e,t,n){const i=t||this._root,s=i.uuid;let o=typeof e=="string"?Ps.findByName(i,e):e;const a=o!==null?o.uuid:e,c=this._actionsByClip[a];let h=null;if(n===void 0&&(o!==null?n=o.blendMode:n=ta),c!==void 0){const f=c.actionByRoot[s];if(f!==void 0&&f.blendMode===n)return f;h=c.knownActions[0],o===null&&(o=h._clip)}if(o===null)return null;const u=new vy(this,o,t,n);return this._bindAction(u,h),this._addInactiveAction(u,a,s),u}existingAction(e,t){const n=t||this._root,i=n.uuid,s=typeof e=="string"?Ps.findByName(n,e):e,o=s?s.uuid:e,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[i]||null}stopAllAction(){const e=this._actions,t=this._nActiveActions;for(let n=t-1;n>=0;--n)e[n].stop();return this}update(e){e*=this.timeScale;const t=this._actions,n=this._nActiveActions,i=this.time+=e,s=Math.sign(e),o=this._accuIndex^=1;for(let h=0;h!==n;++h)t[h]._update(i,e,s,o);const a=this._bindings,c=this._nActiveBindings;for(let h=0;h!==c;++h)a[h].apply(o);return this}setTime(e){this.time=0;for(let t=0;t<this._actions.length;t++)this._actions[t].time=0;return this.update(e)}getRoot(){return this._root}uncacheClip(e){const t=this._actions,n=e.uuid,i=this._actionsByClip,s=i[n];if(s!==void 0){const o=s.knownActions;for(let a=0,c=o.length;a!==c;++a){const h=o[a];this._deactivateAction(h);const u=h._cacheIndex,f=t[t.length-1];h._cacheIndex=null,h._byClipCacheIndex=null,f._cacheIndex=u,t[u]=f,t.pop(),this._removeInactiveBindingsForAction(h)}delete i[n]}}uncacheRoot(e){const t=e.uuid,n=this._actionsByClip;for(const o in n){const a=n[o].actionByRoot,c=a[t];c!==void 0&&(this._deactivateAction(c),this._removeInactiveAction(c))}const i=this._bindingsByRootAndName,s=i[t];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(e,t){const n=this.existingAction(e,t);n!==null&&(this._deactivateAction(n),this._removeInactiveAction(n))}}ff.prototype._controlInterpolantsResultBuffer=new Float32Array(1);class Ea{constructor(e){typeof e=="string"&&(console.warn("THREE.Uniform: Type parameter is no longer needed."),e=arguments[1]),this.value=e}clone(){return new Ea(this.value.clone===void 0?this.value:this.value.clone())}}class pf extends sr{constructor(e,t,n=1){super(e,t),this.meshPerAttribute=n}copy(e){return super.copy(e),this.meshPerAttribute=e.meshPerAttribute,this}clone(e){const t=super.clone(e);return t.meshPerAttribute=this.meshPerAttribute,t}toJSON(e){const t=super.toJSON(e);return t.isInstancedInterleavedBuffer=!0,t.meshPerAttribute=this.meshPerAttribute,t}}pf.prototype.isInstancedInterleavedBuffer=!0;class mf{constructor(e,t,n,i,s){this.buffer=e,this.type=t,this.itemSize=n,this.elementSize=i,this.count=s,this.version=0}set needsUpdate(e){e===!0&&this.version++}setBuffer(e){return this.buffer=e,this}setType(e,t){return this.type=e,this.elementSize=t,this}setItemSize(e){return this.itemSize=e,this}setCount(e){return this.count=e,this}}mf.prototype.isGLBufferAttribute=!0;class _y{constructor(e,t,n=0,i=1/0){this.ray=new Mi(e,t),this.near=n,this.far=i,this.camera=null,this.layers=new na,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(e,t){this.ray.set(e,t)}setFromCamera(e,t){t.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(e.x,e.y,.5).unproject(t).sub(this.ray.origin).normalize(),this.camera=t):t.isOrthographicCamera?(this.ray.origin.set(e.x,e.y,(t.near+t.far)/(t.near-t.far)).unproject(t),this.ray.direction.set(0,0,-1).transformDirection(t.matrixWorld),this.camera=t):console.error("THREE.Raycaster: Unsupported camera type: "+t.type)}intersectObject(e,t=!0,n=[]){return Wl(e,this,n,t),n.sort(tu),n}intersectObjects(e,t=!0,n=[]){for(let i=0,s=e.length;i<s;i++)Wl(e[i],this,n,t);return n.sort(tu),n}}function tu(r,e){return r.distance-e.distance}function Wl(r,e,t,n){if(r.layers.test(e.layers)&&r.raycast(e,t),n===!0){const i=r.children;for(let s=0,o=i.length;s<o;s++)Wl(i[s],e,t,!0)}}class yy{constructor(e=1,t=0,n=0){return this.radius=e,this.phi=t,this.theta=n,this}set(e,t,n){return this.radius=e,this.phi=t,this.theta=n,this}copy(e){return this.radius=e.radius,this.phi=e.phi,this.theta=e.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+t*t+n*n),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(e,n),this.phi=Math.acos(yt(t/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class xy{constructor(e=1,t=0,n=0){return this.radius=e,this.theta=t,this.y=n,this}set(e,t,n){return this.radius=e,this.theta=t,this.y=n,this}copy(e){return this.radius=e.radius,this.theta=e.theta,this.y=e.y,this}setFromVector3(e){return this.setFromCartesianCoords(e.x,e.y,e.z)}setFromCartesianCoords(e,t,n){return this.radius=Math.sqrt(e*e+n*n),this.theta=Math.atan2(e,n),this.y=t,this}clone(){return new this.constructor().copy(this)}}const nu=new le;class jr{constructor(e=new le(1/0,1/0),t=new le(-1/0,-1/0)){this.min=e,this.max=t}set(e,t){return this.min.copy(e),this.max.copy(t),this}setFromPoints(e){this.makeEmpty();for(let t=0,n=e.length;t<n;t++)this.expandByPoint(e[t]);return this}setFromCenterAndSize(e,t){const n=nu.copy(t).multiplyScalar(.5);return this.min.copy(e).sub(n),this.max.copy(e).add(n),this}clone(){return new this.constructor().copy(this)}copy(e){return this.min.copy(e.min),this.max.copy(e.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(e){return this.isEmpty()?e.set(0,0):e.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(e){return this.isEmpty()?e.set(0,0):e.subVectors(this.max,this.min)}expandByPoint(e){return this.min.min(e),this.max.max(e),this}expandByVector(e){return this.min.sub(e),this.max.add(e),this}expandByScalar(e){return this.min.addScalar(-e),this.max.addScalar(e),this}containsPoint(e){return!(e.x<this.min.x||e.x>this.max.x||e.y<this.min.y||e.y>this.max.y)}containsBox(e){return this.min.x<=e.min.x&&e.max.x<=this.max.x&&this.min.y<=e.min.y&&e.max.y<=this.max.y}getParameter(e,t){return t.set((e.x-this.min.x)/(this.max.x-this.min.x),(e.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(e){return!(e.max.x<this.min.x||e.min.x>this.max.x||e.max.y<this.min.y||e.min.y>this.max.y)}clampPoint(e,t){return t.copy(e).clamp(this.min,this.max)}distanceToPoint(e){return nu.copy(e).clamp(this.min,this.max).sub(e).length()}intersect(e){return this.min.max(e.min),this.max.min(e.max),this}union(e){return this.min.min(e.min),this.max.max(e.max),this}translate(e){return this.min.add(e),this.max.add(e),this}equals(e){return e.min.equals(this.min)&&e.max.equals(this.max)}}jr.prototype.isBox2=!0;const iu=new D,Po=new D;class gf{constructor(e=new D,t=new D){this.start=e,this.end=t}set(e,t){return this.start.copy(e),this.end.copy(t),this}copy(e){return this.start.copy(e.start),this.end.copy(e.end),this}getCenter(e){return e.addVectors(this.start,this.end).multiplyScalar(.5)}delta(e){return e.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(e,t){return this.delta(t).multiplyScalar(e).add(this.start)}closestPointToPointParameter(e,t){iu.subVectors(e,this.start),Po.subVectors(this.end,this.start);const n=Po.dot(Po);let s=Po.dot(iu)/n;return t&&(s=yt(s,0,1)),s}closestPointToPoint(e,t,n){const i=this.closestPointToPointParameter(e,t);return this.delta(n).multiplyScalar(i).add(this.start)}applyMatrix4(e){return this.start.applyMatrix4(e),this.end.applyMatrix4(e),this}equals(e){return e.start.equals(this.start)&&e.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const ru=new D;class My extends Je{constructor(e,t){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=t;const n=new Ue,i=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,c=32;o<c;o++,a++){const h=o/c*Math.PI*2,u=a/c*Math.PI*2;i.push(Math.cos(h),Math.sin(h),1,Math.cos(u),Math.sin(u),1)}n.setAttribute("position",new Se(i,3));const s=new Dt({fog:!1,toneMapped:!1});this.cone=new qt(n,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateMatrixWorld();const e=this.light.distance?this.light.distance:1e3,t=e*Math.tan(this.light.angle);this.cone.scale.set(t,t,e),ru.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(ru),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const li=new D,Io=new Ae,ll=new Ae;class vf extends qt{constructor(e){const t=_f(e),n=new Ue,i=[],s=[],o=new Me(0,0,1),a=new Me(0,1,0);for(let h=0;h<t.length;h++){const u=t[h];u.parent&&u.parent.isBone&&(i.push(0,0,0),i.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}n.setAttribute("position",new Se(i,3)),n.setAttribute("color",new Se(s,3));const c=new Dt({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(n,c),this.type="SkeletonHelper",this.isSkeletonHelper=!0,this.root=e,this.bones=t,this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(e){const t=this.bones,n=this.geometry,i=n.getAttribute("position");ll.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<t.length;s++){const a=t[s];a.parent&&a.parent.isBone&&(Io.multiplyMatrices(ll,a.matrixWorld),li.setFromMatrixPosition(Io),i.setXYZ(o,li.x,li.y,li.z),Io.multiplyMatrices(ll,a.parent.matrixWorld),li.setFromMatrixPosition(Io),i.setXYZ(o+1,li.x,li.y,li.z),o+=2)}n.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(e)}}function _f(r){const e=[];r.isBone===!0&&e.push(r);for(let t=0;t<r.children.length;t++)e.push.apply(e,_f(r.children[t]));return e}class Ey extends St{constructor(e,t,n){const i=new tr(t,4,2),s=new $n({wireframe:!0,fog:!1,toneMapped:!1});super(i,s),this.light=e,this.light.updateMatrixWorld(),this.color=n,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const wy=new D,su=new Me,ou=new Me;class by extends Je{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n;const i=new Qi(t);i.rotateY(Math.PI*.5),this.material=new $n({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=i.getAttribute("position"),o=new Float32Array(s.count*3);i.setAttribute("color",new tt(o,3)),this.add(new St(i,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const e=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const t=e.geometry.getAttribute("color");su.copy(this.light.color),ou.copy(this.light.groundColor);for(let n=0,i=t.count;n<i;n++){const s=n<i/2?su:ou;t.setXYZ(n,s.r,s.g,s.b)}t.needsUpdate=!0}e.lookAt(wy.setFromMatrixPosition(this.light.matrixWorld).negate())}}class yf extends qt{constructor(e=10,t=10,n=4473924,i=8947848){n=new Me(n),i=new Me(i);const s=t/2,o=e/t,a=e/2,c=[],h=[];for(let d=0,p=0,v=-a;d<=t;d++,v+=o){c.push(-a,0,v,a,0,v),c.push(v,0,-a,v,0,a);const m=d===s?n:i;m.toArray(h,p),p+=3,m.toArray(h,p),p+=3,m.toArray(h,p),p+=3,m.toArray(h,p),p+=3}const u=new Ue;u.setAttribute("position",new Se(c,3)),u.setAttribute("color",new Se(h,3));const f=new Dt({vertexColors:!0,toneMapped:!1});super(u,f),this.type="GridHelper"}}class Ty extends qt{constructor(e=10,t=16,n=8,i=64,s=4473924,o=8947848){s=new Me(s),o=new Me(o);const a=[],c=[];for(let f=0;f<=t;f++){const d=f/t*(Math.PI*2),p=Math.sin(d)*e,v=Math.cos(d)*e;a.push(0,0,0),a.push(p,0,v);const m=f&1?s:o;c.push(m.r,m.g,m.b),c.push(m.r,m.g,m.b)}for(let f=0;f<=n;f++){const d=f&1?s:o,p=e-e/n*f;for(let v=0;v<i;v++){let m=v/i*(Math.PI*2),g=Math.sin(m)*p,E=Math.cos(m)*p;a.push(g,0,E),c.push(d.r,d.g,d.b),m=(v+1)/i*(Math.PI*2),g=Math.sin(m)*p,E=Math.cos(m)*p,a.push(g,0,E),c.push(d.r,d.g,d.b)}}const h=new Ue;h.setAttribute("position",new Se(a,3)),h.setAttribute("color",new Se(c,3));const u=new Dt({vertexColors:!0,toneMapped:!1});super(h,u),this.type="PolarGridHelper"}}const au=new D,Do=new D,lu=new D;class Sy extends Je{constructor(e,t,n){super(),this.light=e,this.light.updateMatrixWorld(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.color=n,t===void 0&&(t=1);let i=new Ue;i.setAttribute("position",new Se([-t,t,0,t,t,0,t,-t,0,-t,-t,0,-t,t,0],3));const s=new Dt({fog:!1,toneMapped:!1});this.lightPlane=new Zn(i,s),this.add(this.lightPlane),i=new Ue,i.setAttribute("position",new Se([0,0,0,0,0,1],3)),this.targetLine=new Zn(i,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){au.setFromMatrixPosition(this.light.matrixWorld),Do.setFromMatrixPosition(this.light.target.matrixWorld),lu.subVectors(Do,au),this.lightPlane.lookAt(Do),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(Do),this.targetLine.scale.z=lu.length()}}const No=new D,gt=new Os;class Ay extends qt{constructor(e){const t=new Ue,n=new Dt({color:16777215,vertexColors:!0,toneMapped:!1}),i=[],s=[],o={},a=new Me(16755200),c=new Me(16711680),h=new Me(43775),u=new Me(16777215),f=new Me(3355443);d("n1","n2",a),d("n2","n4",a),d("n4","n3",a),d("n3","n1",a),d("f1","f2",a),d("f2","f4",a),d("f4","f3",a),d("f3","f1",a),d("n1","f1",a),d("n2","f2",a),d("n3","f3",a),d("n4","f4",a),d("p","n1",c),d("p","n2",c),d("p","n3",c),d("p","n4",c),d("u1","u2",h),d("u2","u3",h),d("u3","u1",h),d("c","t",u),d("p","c",f),d("cn1","cn2",f),d("cn3","cn4",f),d("cf1","cf2",f),d("cf3","cf4",f);function d(v,m,g){p(v,g),p(m,g)}function p(v,m){i.push(0,0,0),s.push(m.r,m.g,m.b),o[v]===void 0&&(o[v]=[]),o[v].push(i.length/3-1)}t.setAttribute("position",new Se(i,3)),t.setAttribute("color",new Se(s,3)),super(t,n),this.type="CameraHelper",this.camera=e,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=e.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update()}update(){const e=this.geometry,t=this.pointMap,n=1,i=1;gt.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),vt("c",t,e,gt,0,0,-1),vt("t",t,e,gt,0,0,1),vt("n1",t,e,gt,-n,-i,-1),vt("n2",t,e,gt,n,-i,-1),vt("n3",t,e,gt,-n,i,-1),vt("n4",t,e,gt,n,i,-1),vt("f1",t,e,gt,-n,-i,1),vt("f2",t,e,gt,n,-i,1),vt("f3",t,e,gt,-n,i,1),vt("f4",t,e,gt,n,i,1),vt("u1",t,e,gt,n*.7,i*1.1,-1),vt("u2",t,e,gt,-n*.7,i*1.1,-1),vt("u3",t,e,gt,0,i*2,-1),vt("cf1",t,e,gt,-n,0,1),vt("cf2",t,e,gt,n,0,1),vt("cf3",t,e,gt,0,-i,1),vt("cf4",t,e,gt,0,i,1),vt("cn1",t,e,gt,-n,0,-1),vt("cn2",t,e,gt,n,0,-1),vt("cn3",t,e,gt,0,-i,-1),vt("cn4",t,e,gt,0,i,-1),e.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function vt(r,e,t,n,i,s,o){No.set(i,s,o).unproject(n);const a=e[r];if(a!==void 0){const c=t.getAttribute("position");for(let h=0,u=a.length;h<u;h++)c.setXYZ(a[h],No.x,No.y,No.z)}}const Oo=new en;class xf extends qt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=new Float32Array(8*3),s=new Ue;s.setIndex(new tt(n,1)),s.setAttribute("position",new tt(i,3)),super(s,new Dt({color:t,toneMapped:!1})),this.object=e,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(e){if(e!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&Oo.setFromObject(this.object),Oo.isEmpty())return;const t=Oo.min,n=Oo.max,i=this.geometry.attributes.position,s=i.array;s[0]=n.x,s[1]=n.y,s[2]=n.z,s[3]=t.x,s[4]=n.y,s[5]=n.z,s[6]=t.x,s[7]=t.y,s[8]=n.z,s[9]=n.x,s[10]=t.y,s[11]=n.z,s[12]=n.x,s[13]=n.y,s[14]=t.z,s[15]=t.x,s[16]=n.y,s[17]=t.z,s[18]=t.x,s[19]=t.y,s[20]=t.z,s[21]=n.x,s[22]=t.y,s[23]=t.z,i.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(e){return this.object=e,this.update(),this}copy(e){return qt.prototype.copy.call(this,e),this.object=e.object,this}}class Ry extends qt{constructor(e,t=16776960){const n=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),i=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Ue;s.setIndex(new tt(n,1)),s.setAttribute("position",new Se(i,3)),super(s,new Dt({color:t,toneMapped:!1})),this.box=e,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(e){const t=this.box;t.isEmpty()||(t.getCenter(this.position),t.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(e))}}class Cy extends Zn{constructor(e,t=1,n=16776960){const i=n,s=[1,-1,1,-1,1,1,-1,-1,1,1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,1,0,0,1,0,0,0],o=new Ue;o.setAttribute("position",new Se(s,3)),o.computeBoundingSphere(),super(o,new Dt({color:i,toneMapped:!1})),this.type="PlaneHelper",this.plane=e,this.size=t;const a=[1,1,1,-1,1,1,-1,-1,1,1,1,1,-1,-1,1,1,-1,1],c=new Ue;c.setAttribute("position",new Se(a,3)),c.computeBoundingSphere(),this.add(new St(c,new $n({color:i,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(e){let t=-this.plane.constant;Math.abs(t)<1e-8&&(t=1e-8),this.scale.set(.5*this.size,.5*this.size,t),this.children[0].material.side=t<0?jt:Yi,this.lookAt(this.plane.normal),super.updateMatrixWorld(e)}}const cu=new D;let Fo,cl;class Ly extends Je{constructor(e=new D(0,0,1),t=new D(0,0,0),n=1,i=16776960,s=n*.2,o=s*.2){super(),this.type="ArrowHelper",Fo===void 0&&(Fo=new Ue,Fo.setAttribute("position",new Se([0,0,0,0,1,0],3)),cl=new gi(0,.5,1,5,1),cl.translate(0,-.5,0)),this.position.copy(t),this.line=new Zn(Fo,new Dt({color:i,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new St(cl,new $n({color:i,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(e),this.setLength(n,s,o)}setDirection(e){if(e.y>.99999)this.quaternion.set(0,0,0,1);else if(e.y<-.99999)this.quaternion.set(1,0,0,0);else{cu.set(e.z,0,-e.x).normalize();const t=Math.acos(e.y);this.quaternion.setFromAxisAngle(cu,t)}}setLength(e,t=e*.2,n=t*.2){this.line.scale.set(1,Math.max(1e-4,e-t),1),this.line.updateMatrix(),this.cone.scale.set(n,t,n),this.cone.position.y=e,this.cone.updateMatrix()}setColor(e){this.line.material.color.set(e),this.cone.material.color.set(e)}copy(e){return super.copy(e,!1),this.line.copy(e.line),this.cone.copy(e.cone),this}}class Mf extends qt{constructor(e=1){const t=[0,0,0,e,0,0,0,0,0,0,e,0,0,0,0,0,0,e],n=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],i=new Ue;i.setAttribute("position",new Se(t,3)),i.setAttribute("color",new Se(n,3));const s=new Dt({vertexColors:!0,toneMapped:!1});super(i,s),this.type="AxesHelper"}setColors(e,t,n){const i=new Me,s=this.geometry.attributes.color.array;return i.set(e),i.toArray(s,0),i.toArray(s,3),i.set(t),i.toArray(s,6),i.toArray(s,9),i.set(n),i.toArray(s,12),i.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class Py{constructor(){this.type="ShapePath",this.color=new Me,this.subPaths=[],this.currentPath=null}moveTo(e,t){return this.currentPath=new Or,this.subPaths.push(this.currentPath),this.currentPath.moveTo(e,t),this}lineTo(e,t){return this.currentPath.lineTo(e,t),this}quadraticCurveTo(e,t,n,i){return this.currentPath.quadraticCurveTo(e,t,n,i),this}bezierCurveTo(e,t,n,i,s,o){return this.currentPath.bezierCurveTo(e,t,n,i,s,o),this}splineThru(e){return this.currentPath.splineThru(e),this}toShapes(e,t){function n(b){const C=[];for(let S=0,A=b.length;S<A;S++){const O=b[S],V=new Tn;V.curves=O.curves,C.push(V)}return C}function i(b,C){const S=C.length;let A=!1;for(let O=S-1,V=0;V<S;O=V++){let U=C[O],Q=C[V],Z=Q.x-U.x,L=Q.y-U.y;if(Math.abs(L)>Number.EPSILON){if(L<0&&(U=C[V],Z=-Z,Q=C[O],L=-L),b.y<U.y||b.y>Q.y)continue;if(b.y===U.y){if(b.x===U.x)return!0}else{const B=L*(b.x-U.x)-Z*(b.y-U.y);if(B===0)return!0;if(B<0)continue;A=!A}}else{if(b.y!==U.y)continue;if(Q.x<=b.x&&b.x<=U.x||U.x<=b.x&&b.x<=Q.x)return!0}}return A}const s=Sn.isClockWise,o=this.subPaths;if(o.length===0)return[];if(t===!0)return n(o);let a,c,h;const u=[];if(o.length===1)return c=o[0],h=new Tn,h.curves=c.curves,u.push(h),u;let f=!s(o[0].getPoints());f=e?!f:f;const d=[],p=[];let v=[],m=0,g;p[m]=void 0,v[m]=[];for(let b=0,C=o.length;b<C;b++)c=o[b],g=c.getPoints(),a=s(g),a=e?!a:a,a?(!f&&p[m]&&m++,p[m]={s:new Tn,p:g},p[m].s.curves=c.curves,f&&m++,v[m]=[]):v[m].push({h:c,p:g[0]});if(!p[0])return n(o);if(p.length>1){let b=!1,C=0;for(let S=0,A=p.length;S<A;S++)d[S]=[];for(let S=0,A=p.length;S<A;S++){const O=v[S];for(let V=0;V<O.length;V++){const U=O[V];let Q=!0;for(let Z=0;Z<p.length;Z++)i(U.p,p[Z].p)&&(S!==Z&&C++,Q?(Q=!1,d[Z].push(U)):b=!0);Q&&d[S].push(U)}}C>0&&b===!1&&(v=d)}let E;for(let b=0,C=p.length;b<C;b++){h=p[b].s,u.push(h),E=v[b];for(let S=0,A=E.length;S<A;S++)h.holes.push(E[S].h)}return u}}class Iy{static toHalfFloat(e){Math.abs(e)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),e=yt(e,-65504,65504),hu[0]=e;const t=uu[0],n=t>>23&511;return mn[n]+((t&8388607)>>gn[n])}static fromHalfFloat(e){const t=e>>10;return uu[0]=Uc[wf[t]+(e&1023)]+Jr[t],hu[0]}}const Ef=new ArrayBuffer(4),hu=new Float32Array(Ef),uu=new Uint32Array(Ef),mn=new Uint32Array(512),gn=new Uint32Array(512);for(let r=0;r<256;++r){const e=r-127;e<-27?(mn[r]=0,mn[r|256]=32768,gn[r]=24,gn[r|256]=24):e<-14?(mn[r]=1024>>-e-14,mn[r|256]=1024>>-e-14|32768,gn[r]=-e-1,gn[r|256]=-e-1):e<=15?(mn[r]=e+15<<10,mn[r|256]=e+15<<10|32768,gn[r]=13,gn[r|256]=13):e<128?(mn[r]=31744,mn[r|256]=64512,gn[r]=24,gn[r|256]=24):(mn[r]=31744,mn[r|256]=64512,gn[r]=13,gn[r|256]=13)}const Uc=new Uint32Array(2048),Jr=new Uint32Array(64),wf=new Uint32Array(64);for(let r=1;r<1024;++r){let e=r<<13,t=0;for(;(e&8388608)===0;)e<<=1,t-=8388608;e&=-8388609,t+=947912704,Uc[r]=e|t}for(let r=1024;r<2048;++r)Uc[r]=939524096+(r-1024<<13);for(let r=1;r<31;++r)Jr[r]=r<<23;Jr[31]=1199570944;Jr[32]=2147483648;for(let r=33;r<63;++r)Jr[r]=2147483648+(r-32<<23);Jr[63]=3347054592;for(let r=1;r<64;++r)r!==32&&(wf[r]=1024);const Dy=0,Ny=1,Oy=0,Fy=1,Uy=2;function By(r){return console.warn("THREE.MeshFaceMaterial has been removed. Use an Array instead."),r}function Hy(r=[]){return console.warn("THREE.MultiMaterial has been removed. Use an Array instead."),r.isMultiMaterial=!0,r.materials=r,r.clone=function(){return r.slice()},r}class zy extends zs{constructor(e,t){console.warn("THREE.PointCloud has been renamed to THREE.Points."),super(e,t)}}class ky extends da{constructor(e){console.warn("THREE.Particle has been renamed to THREE.Sprite."),super(e)}}class Gy extends zs{constructor(e,t){console.warn("THREE.ParticleSystem has been renamed to THREE.Points."),super(e,t)}}class Vy extends or{constructor(e){console.warn("THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class Wy extends or{constructor(e){console.warn("THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class Xy extends or{constructor(e){console.warn("THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial."),super(e)}}class qy extends D{constructor(e,t,n){console.warn("THREE.Vertex has been removed. Use THREE.Vector3 instead."),super(e,t,n)}}class Yy extends tt{constructor(e,t){console.warn("THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead."),super(e,t),this.setUsage(Dr)}}class Zy extends vd{constructor(e,t){console.warn("THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead."),super(e,t)}}class Ky extends _d{constructor(e,t){console.warn("THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead."),super(e,t)}}class $y extends yd{constructor(e,t){console.warn("THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead."),super(e,t)}}class jy extends xd{constructor(e,t){console.warn("THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead."),super(e,t)}}class Jy extends ia{constructor(e,t){console.warn("THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead."),super(e,t)}}class Qy extends Md{constructor(e,t){console.warn("THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead."),super(e,t)}}class ex extends ra{constructor(e,t){console.warn("THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead."),super(e,t)}}class tx extends Se{constructor(e,t){console.warn("THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead."),super(e,t)}}class nx extends wd{constructor(e,t){console.warn("THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead."),super(e,t)}}Qt.create=function(r,e){return console.log("THREE.Curve.create() has been deprecated"),r.prototype=Object.create(Qt.prototype),r.prototype.constructor=r,r.prototype.getPoint=e,r};Or.prototype.fromPoints=function(r){return console.warn("THREE.Path: .fromPoints() has been renamed to .setFromPoints()."),this.setFromPoints(r)};class ix extends Mf{constructor(e){console.warn("THREE.AxisHelper has been renamed to THREE.AxesHelper."),super(e)}}class rx extends xf{constructor(e,t){console.warn("THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead."),super(e,t)}}class sx extends qt{constructor(e,t){console.warn("THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead."),super(new hc(e.geometry),new Dt({color:t!==void 0?t:16777215}))}}yf.prototype.setColors=function(){console.error("THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.")};vf.prototype.update=function(){console.error("THREE.SkeletonHelper: update() no longer needs to be called.")};class ox extends qt{constructor(e,t){console.warn("THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead."),super(new uc(e.geometry),new Dt({color:t!==void 0?t:16777215}))}}Vt.prototype.extractUrlBase=function(r){return console.warn("THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead."),$o.extractUrlBase(r)};Vt.Handlers={add:function(){console.error("THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.")},get:function(){console.error("THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.")}};class ax extends Ln{constructor(e){console.warn("THREE.XHRLoader has been renamed to THREE.FileLoader."),super(e)}}class lx extends jd{constructor(e){console.warn("THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader."),super(e)}}jr.prototype.center=function(r){return console.warn("THREE.Box2: .center() has been renamed to .getCenter()."),this.getCenter(r)};jr.prototype.empty=function(){return console.warn("THREE.Box2: .empty() has been renamed to .isEmpty()."),this.isEmpty()};jr.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};jr.prototype.size=function(r){return console.warn("THREE.Box2: .size() has been renamed to .getSize()."),this.getSize(r)};en.prototype.center=function(r){return console.warn("THREE.Box3: .center() has been renamed to .getCenter()."),this.getCenter(r)};en.prototype.empty=function(){return console.warn("THREE.Box3: .empty() has been renamed to .isEmpty()."),this.isEmpty()};en.prototype.isIntersectionBox=function(r){return console.warn("THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};en.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};en.prototype.size=function(r){return console.warn("THREE.Box3: .size() has been renamed to .getSize()."),this.getSize(r)};Ei.prototype.toVector3=function(){console.error("THREE.Euler: .toVector3() has been removed. Use Vector3.setFromEuler() instead")};xi.prototype.empty=function(){return console.warn("THREE.Sphere: .empty() has been renamed to .isEmpty()."),this.isEmpty()};Fs.prototype.setFromMatrix=function(r){return console.warn("THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix()."),this.setFromProjectionMatrix(r)};gf.prototype.center=function(r){return console.warn("THREE.Line3: .center() has been renamed to .getCenter()."),this.getCenter(r)};Lt.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};Lt.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};Lt.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix3: .multiplyVector3Array() has been removed.")};Lt.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead."),r.applyMatrix3(this)};Lt.prototype.applyToVector3Array=function(){console.error("THREE.Matrix3: .applyToVector3Array() has been removed.")};Lt.prototype.getInverse=function(r){return console.warn("THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};Ae.prototype.extractPosition=function(r){return console.warn("THREE.Matrix4: .extractPosition() has been renamed to .copyPosition()."),this.copyPosition(r)};Ae.prototype.flattenToArrayOffset=function(r,e){return console.warn("THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead."),this.toArray(r,e)};Ae.prototype.getPosition=function(){return console.warn("THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead."),new D().setFromMatrixColumn(this,3)};Ae.prototype.setRotationFromQuaternion=function(r){return console.warn("THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion()."),this.makeRotationFromQuaternion(r)};Ae.prototype.multiplyToArray=function(){console.warn("THREE.Matrix4: .multiplyToArray() has been removed.")};Ae.prototype.multiplyVector3=function(r){return console.warn("THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ae.prototype.multiplyVector4=function(r){return console.warn("THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ae.prototype.multiplyVector3Array=function(){console.error("THREE.Matrix4: .multiplyVector3Array() has been removed.")};Ae.prototype.rotateAxis=function(r){console.warn("THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead."),r.transformDirection(this)};Ae.prototype.crossVector=function(r){return console.warn("THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ae.prototype.translate=function(){console.error("THREE.Matrix4: .translate() has been removed.")};Ae.prototype.rotateX=function(){console.error("THREE.Matrix4: .rotateX() has been removed.")};Ae.prototype.rotateY=function(){console.error("THREE.Matrix4: .rotateY() has been removed.")};Ae.prototype.rotateZ=function(){console.error("THREE.Matrix4: .rotateZ() has been removed.")};Ae.prototype.rotateByAxis=function(){console.error("THREE.Matrix4: .rotateByAxis() has been removed.")};Ae.prototype.applyToBufferAttribute=function(r){return console.warn("THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead."),r.applyMatrix4(this)};Ae.prototype.applyToVector3Array=function(){console.error("THREE.Matrix4: .applyToVector3Array() has been removed.")};Ae.prototype.makeFrustum=function(r,e,t,n,i,s){return console.warn("THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead."),this.makePerspective(r,e,n,t,i,s)};Ae.prototype.getInverse=function(r){return console.warn("THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead."),this.copy(r).invert()};wn.prototype.isIntersectionLine=function(r){return console.warn("THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine()."),this.intersectsLine(r)};Ot.prototype.multiplyVector3=function(r){return console.warn("THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead."),r.applyQuaternion(this)};Ot.prototype.inverse=function(){return console.warn("THREE.Quaternion: .inverse() has been renamed to invert()."),this.invert()};Mi.prototype.isIntersectionBox=function(r){return console.warn("THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox()."),this.intersectsBox(r)};Mi.prototype.isIntersectionPlane=function(r){return console.warn("THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane()."),this.intersectsPlane(r)};Mi.prototype.isIntersectionSphere=function(r){return console.warn("THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere()."),this.intersectsSphere(r)};xt.prototype.area=function(){return console.warn("THREE.Triangle: .area() has been renamed to .getArea()."),this.getArea()};xt.prototype.barycoordFromPoint=function(r,e){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),this.getBarycoord(r,e)};xt.prototype.midpoint=function(r){return console.warn("THREE.Triangle: .midpoint() has been renamed to .getMidpoint()."),this.getMidpoint(r)};xt.prototypenormal=function(r){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),this.getNormal(r)};xt.prototype.plane=function(r){return console.warn("THREE.Triangle: .plane() has been renamed to .getPlane()."),this.getPlane(r)};xt.barycoordFromPoint=function(r,e,t,n,i){return console.warn("THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord()."),xt.getBarycoord(r,e,t,n,i)};xt.normal=function(r,e,t,n){return console.warn("THREE.Triangle: .normal() has been renamed to .getNormal()."),xt.getNormal(r,e,t,n)};Tn.prototype.extractAllPoints=function(r){return console.warn("THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead."),this.extractPoints(r)};Tn.prototype.extrude=function(r){return console.warn("THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead."),new Cn(this,r)};Tn.prototype.makeGeometry=function(r){return console.warn("THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead."),new er(this,r)};le.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};le.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};le.prototype.lengthManhattan=function(){return console.warn("THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};D.prototype.setEulerFromRotationMatrix=function(){console.error("THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.")};D.prototype.setEulerFromQuaternion=function(){console.error("THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.")};D.prototype.getPositionFromMatrix=function(r){return console.warn("THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition()."),this.setFromMatrixPosition(r)};D.prototype.getScaleFromMatrix=function(r){return console.warn("THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale()."),this.setFromMatrixScale(r)};D.prototype.getColumnFromMatrix=function(r,e){return console.warn("THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn()."),this.setFromMatrixColumn(e,r)};D.prototype.applyProjection=function(r){return console.warn("THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead."),this.applyMatrix4(r)};D.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};D.prototype.distanceToManhattan=function(r){return console.warn("THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo()."),this.manhattanDistanceTo(r)};D.prototype.lengthManhattan=function(){return console.warn("THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};st.prototype.fromAttribute=function(r,e,t){return console.warn("THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute()."),this.fromBufferAttribute(r,e,t)};st.prototype.lengthManhattan=function(){return console.warn("THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength()."),this.manhattanLength()};Je.prototype.getChildByName=function(r){return console.warn("THREE.Object3D: .getChildByName() has been renamed to .getObjectByName()."),this.getObjectByName(r)};Je.prototype.renderDepth=function(){console.warn("THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.")};Je.prototype.translate=function(r,e){return console.warn("THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead."),this.translateOnAxis(e,r)};Je.prototype.getWorldRotation=function(){console.error("THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.")};Je.prototype.applyMatrix=function(r){return console.warn("THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Je.prototype,{eulerOrder:{get:function(){return console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order},set:function(r){console.warn("THREE.Object3D: .eulerOrder is now .rotation.order."),this.rotation.order=r}},useQuaternion:{get:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")},set:function(){console.warn("THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.")}}});St.prototype.setDrawMode=function(){console.error("THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")};Object.defineProperties(St.prototype,{drawMode:{get:function(){return console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode."),sd},set:function(){console.error("THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.")}}});fa.prototype.initBones=function(){console.error("THREE.SkinnedMesh: initBones() has been removed.")};It.prototype.setLens=function(r,e){console.warn("THREE.PerspectiveCamera.setLens is deprecated. Use .setFocalLength and .filmGauge for a photographic setup."),e!==void 0&&(this.filmGauge=e),this.setFocalLength(r)};Object.defineProperties(_n.prototype,{onlyShadow:{set:function(){console.warn("THREE.Light: .onlyShadow has been removed.")}},shadowCameraFov:{set:function(r){console.warn("THREE.Light: .shadowCameraFov is now .shadow.camera.fov."),this.shadow.camera.fov=r}},shadowCameraLeft:{set:function(r){console.warn("THREE.Light: .shadowCameraLeft is now .shadow.camera.left."),this.shadow.camera.left=r}},shadowCameraRight:{set:function(r){console.warn("THREE.Light: .shadowCameraRight is now .shadow.camera.right."),this.shadow.camera.right=r}},shadowCameraTop:{set:function(r){console.warn("THREE.Light: .shadowCameraTop is now .shadow.camera.top."),this.shadow.camera.top=r}},shadowCameraBottom:{set:function(r){console.warn("THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom."),this.shadow.camera.bottom=r}},shadowCameraNear:{set:function(r){console.warn("THREE.Light: .shadowCameraNear is now .shadow.camera.near."),this.shadow.camera.near=r}},shadowCameraFar:{set:function(r){console.warn("THREE.Light: .shadowCameraFar is now .shadow.camera.far."),this.shadow.camera.far=r}},shadowCameraVisible:{set:function(){console.warn("THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.")}},shadowBias:{set:function(r){console.warn("THREE.Light: .shadowBias is now .shadow.bias."),this.shadow.bias=r}},shadowDarkness:{set:function(){console.warn("THREE.Light: .shadowDarkness has been removed.")}},shadowMapWidth:{set:function(r){console.warn("THREE.Light: .shadowMapWidth is now .shadow.mapSize.width."),this.shadow.mapSize.width=r}},shadowMapHeight:{set:function(r){console.warn("THREE.Light: .shadowMapHeight is now .shadow.mapSize.height."),this.shadow.mapSize.height=r}}});Object.defineProperties(tt.prototype,{length:{get:function(){return console.warn("THREE.BufferAttribute: .length has been deprecated. Use .count instead."),this.array.length}},dynamic:{get:function(){return console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.usage===Dr},set:function(){console.warn("THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead."),this.setUsage(Dr)}}});tt.prototype.setDynamic=function(r){return console.warn("THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Dr:Ir),this};tt.prototype.copyIndicesArray=function(){console.error("THREE.BufferAttribute: .copyIndicesArray() has been removed.")},tt.prototype.setArray=function(){console.error("THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Ue.prototype.addIndex=function(r){console.warn("THREE.BufferGeometry: .addIndex() has been renamed to .setIndex()."),this.setIndex(r)};Ue.prototype.addAttribute=function(r,e){return console.warn("THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute()."),!(e&&e.isBufferAttribute)&&!(e&&e.isInterleavedBufferAttribute)?(console.warn("THREE.BufferGeometry: .addAttribute() now expects ( name, attribute )."),this.setAttribute(r,new tt(arguments[1],arguments[2]))):r==="index"?(console.warn("THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute."),this.setIndex(e),this):this.setAttribute(r,e)};Ue.prototype.addDrawCall=function(r,e,t){t!==void 0&&console.warn("THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset."),console.warn("THREE.BufferGeometry: .addDrawCall() is now .addGroup()."),this.addGroup(r,e)};Ue.prototype.clearDrawCalls=function(){console.warn("THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups()."),this.clearGroups()};Ue.prototype.computeOffsets=function(){console.warn("THREE.BufferGeometry: .computeOffsets() has been removed.")};Ue.prototype.removeAttribute=function(r){return console.warn("THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute()."),this.deleteAttribute(r)};Ue.prototype.applyMatrix=function(r){return console.warn("THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4()."),this.applyMatrix4(r)};Object.defineProperties(Ue.prototype,{drawcalls:{get:function(){return console.error("THREE.BufferGeometry: .drawcalls has been renamed to .groups."),this.groups}},offsets:{get:function(){return console.warn("THREE.BufferGeometry: .offsets has been renamed to .groups."),this.groups}}});sr.prototype.setDynamic=function(r){return console.warn("THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead."),this.setUsage(r===!0?Dr:Ir),this};sr.prototype.setArray=function(){console.error("THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers")};Cn.prototype.getArrays=function(){console.error("THREE.ExtrudeGeometry: .getArrays() has been removed.")};Cn.prototype.addShapeList=function(){console.error("THREE.ExtrudeGeometry: .addShapeList() has been removed.")};Cn.prototype.addShape=function(){console.error("THREE.ExtrudeGeometry: .addShape() has been removed.")};ha.prototype.dispose=function(){console.error("THREE.Scene: .dispose() has been removed.")};Ea.prototype.onUpdate=function(){return console.warn("THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead."),this};Object.defineProperties(Mt.prototype,{wrapAround:{get:function(){console.warn("THREE.Material: .wrapAround has been removed.")},set:function(){console.warn("THREE.Material: .wrapAround has been removed.")}},overdraw:{get:function(){console.warn("THREE.Material: .overdraw has been removed.")},set:function(){console.warn("THREE.Material: .overdraw has been removed.")}},wrapRGB:{get:function(){return console.warn("THREE.Material: .wrapRGB has been removed."),new Me}},shading:{get:function(){console.error("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead.")},set:function(r){console.warn("THREE."+this.type+": .shading has been removed. Use the boolean .flatShading instead."),this.flatShading=r===Yl}},stencilMask:{get:function(){return console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask},set:function(r){console.warn("THREE."+this.type+": .stencilMask has been removed. Use .stencilFuncMask instead."),this.stencilFuncMask=r}},vertexTangents:{get:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")},set:function(){console.warn("THREE."+this.type+": .vertexTangents has been removed.")}}});Object.defineProperties(ln.prototype,{derivatives:{get:function(){return console.warn("THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives},set:function(r){console.warn("THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives."),this.extensions.derivatives=r}}});at.prototype.clearTarget=function(r,e,t,n){console.warn("THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead."),this.setRenderTarget(r),this.clear(e,t,n)};at.prototype.animate=function(r){console.warn("THREE.WebGLRenderer: .animate() is now .setAnimationLoop()."),this.setAnimationLoop(r)};at.prototype.getCurrentRenderTarget=function(){return console.warn("THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget()."),this.getRenderTarget()};at.prototype.getMaxAnisotropy=function(){return console.warn("THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy()."),this.capabilities.getMaxAnisotropy()};at.prototype.getPrecision=function(){return console.warn("THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision."),this.capabilities.precision};at.prototype.resetGLState=function(){return console.warn("THREE.WebGLRenderer: .resetGLState() is now .state.reset()."),this.state.reset()};at.prototype.supportsFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( 'OES_texture_float' )."),this.extensions.get("OES_texture_float")};at.prototype.supportsHalfFloatTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( 'OES_texture_half_float' )."),this.extensions.get("OES_texture_half_float")};at.prototype.supportsStandardDerivatives=function(){return console.warn("THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( 'OES_standard_derivatives' )."),this.extensions.get("OES_standard_derivatives")};at.prototype.supportsCompressedTextureS3TC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( 'WEBGL_compressed_texture_s3tc' )."),this.extensions.get("WEBGL_compressed_texture_s3tc")};at.prototype.supportsCompressedTexturePVRTC=function(){return console.warn("THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( 'WEBGL_compressed_texture_pvrtc' )."),this.extensions.get("WEBGL_compressed_texture_pvrtc")};at.prototype.supportsBlendMinMax=function(){return console.warn("THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( 'EXT_blend_minmax' )."),this.extensions.get("EXT_blend_minmax")};at.prototype.supportsVertexTextures=function(){return console.warn("THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures."),this.capabilities.vertexTextures};at.prototype.supportsInstancedArrays=function(){return console.warn("THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( 'ANGLE_instanced_arrays' )."),this.extensions.get("ANGLE_instanced_arrays")};at.prototype.enableScissorTest=function(r){console.warn("THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest()."),this.setScissorTest(r)};at.prototype.initMaterial=function(){console.warn("THREE.WebGLRenderer: .initMaterial() has been removed.")};at.prototype.addPrePlugin=function(){console.warn("THREE.WebGLRenderer: .addPrePlugin() has been removed.")};at.prototype.addPostPlugin=function(){console.warn("THREE.WebGLRenderer: .addPostPlugin() has been removed.")};at.prototype.updateShadowMap=function(){console.warn("THREE.WebGLRenderer: .updateShadowMap() has been removed.")};at.prototype.setFaceCulling=function(){console.warn("THREE.WebGLRenderer: .setFaceCulling() has been removed.")};at.prototype.allocTextureUnit=function(){console.warn("THREE.WebGLRenderer: .allocTextureUnit() has been removed.")};at.prototype.setTexture=function(){console.warn("THREE.WebGLRenderer: .setTexture() has been removed.")};at.prototype.setTexture2D=function(){console.warn("THREE.WebGLRenderer: .setTexture2D() has been removed.")};at.prototype.setTextureCube=function(){console.warn("THREE.WebGLRenderer: .setTextureCube() has been removed.")};at.prototype.getActiveMipMapLevel=function(){return console.warn("THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel()."),this.getActiveMipmapLevel()};Object.defineProperties(at.prototype,{shadowMapEnabled:{get:function(){return this.shadowMap.enabled},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled."),this.shadowMap.enabled=r}},shadowMapType:{get:function(){return this.shadowMap.type},set:function(r){console.warn("THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type."),this.shadowMap.type=r}},shadowMapCullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.")}},context:{get:function(){return console.warn("THREE.WebGLRenderer: .context has been removed. Use .getContext() instead."),this.getContext()}},vr:{get:function(){return console.warn("THREE.WebGLRenderer: .vr has been renamed to .xr"),this.xr}},gammaInput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead."),!1},set:function(){console.warn("THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.")}},gammaOutput:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),!1},set:function(r){console.warn("THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead."),this.outputEncoding=r===!0?dt:An}},toneMappingWhitePoint:{get:function(){return console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed."),1},set:function(){console.warn("THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.")}},gammaFactor:{get:function(){return console.warn("THREE.WebGLRenderer: .gammaFactor has been removed."),2},set:function(){console.warn("THREE.WebGLRenderer: .gammaFactor has been removed.")}}});Object.defineProperties(Dd.prototype,{cullFace:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.")}},renderReverseSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.")}},renderSingleSided:{get:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")},set:function(){console.warn("THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.")}}});class cx extends oa{constructor(e,t,n){console.warn("THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options )."),super(e,n)}}Object.defineProperties(kt.prototype,{wrapS:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS."),this.texture.wrapS=r}},wrapT:{get:function(){return console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT},set:function(r){console.warn("THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT."),this.texture.wrapT=r}},magFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter."),this.texture.magFilter=r}},minFilter:{get:function(){return console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter},set:function(r){console.warn("THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter."),this.texture.minFilter=r}},anisotropy:{get:function(){return console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy},set:function(r){console.warn("THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy."),this.texture.anisotropy=r}},offset:{get:function(){return console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset},set:function(r){console.warn("THREE.WebGLRenderTarget: .offset is now .texture.offset."),this.texture.offset=r}},repeat:{get:function(){return console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat},set:function(r){console.warn("THREE.WebGLRenderTarget: .repeat is now .texture.repeat."),this.texture.repeat=r}},format:{get:function(){return console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format},set:function(r){console.warn("THREE.WebGLRenderTarget: .format is now .texture.format."),this.texture.format=r}},type:{get:function(){return console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type},set:function(r){console.warn("THREE.WebGLRenderTarget: .type is now .texture.type."),this.texture.type=r}},generateMipmaps:{get:function(){return console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps},set:function(r){console.warn("THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps."),this.texture.generateMipmaps=r}}});Nc.prototype.load=function(r){console.warn("THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.");const e=this;return new of().load(r,function(n){e.setBuffer(n)}),this};hf.prototype.getData=function(){return console.warn("THREE.AudioAnalyser: .getData() is now .getFrequencyData()."),this.getFrequencyData()};sa.prototype.updateCubeMap=function(r,e){return console.warn("THREE.CubeCamera: .updateCubeMap() is now .update()."),this.update(r,e)};sa.prototype.clear=function(r,e,t,n){return console.warn("THREE.CubeCamera: .clear() is now .renderTarget.clear()."),this.renderTarget.clear(r,e,t,n)};yi.crossOrigin=void 0;yi.loadTexture=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.");const i=new Jd;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};yi.loadTextureCube=function(r,e,t,n){console.warn("THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.");const i=new $d;i.setCrossOrigin(this.crossOrigin);const s=i.load(r,t,void 0,n);return e&&(s.mapping=e),s};yi.loadCompressedTexture=function(){console.error("THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.")};yi.loadCompressedTextureCube=function(){console.error("THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.")};function hx(){console.error("THREE.CanvasRenderer has been removed")}function ux(){console.error("THREE.JSONLoader has been removed.")}const dx={createMultiMaterialObject:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},detach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")},attach:function(){console.error("THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js")}};function fx(){console.error("THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js")}class px extends Ue{constructor(){console.error("THREE.ParametricGeometry has been moved to /examples/jsm/geometries/ParametricGeometry.js"),super()}}class mx extends Ue{constructor(){console.error("THREE.TextGeometry has been moved to /examples/jsm/geometries/TextGeometry.js"),super()}}function gx(){console.error("THREE.FontLoader has been moved to /examples/jsm/loaders/FontLoader.js")}function vx(){console.error("THREE.Font has been moved to /examples/jsm/loaders/FontLoader.js")}function _x(){console.error("THREE.ImmediateRenderObject has been removed.")}class yx extends kt{constructor(e,t,n){console.error('THREE.WebGLMultisampleRenderTarget has been removed. Use a normal render target and set the "samples" property to greater 0 to enable multisampling.'),super(e,t,n),this.samples=4}}class xx extends Yr{constructor(e,t,n,i){console.warn("THREE.DataTexture2DArray has been renamed to DataArrayTexture."),super(e,t,n,i)}}class Mx extends Ns{constructor(e,t,n,i){console.warn("THREE.DataTexture3D has been renamed to Data3DTexture."),super(e,t,n,i)}}typeof __THREE_DEVTOOLS__!="undefined"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Qo}}));typeof window!="undefined"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Qo);w.ACESFilmicToneMapping=Hu;w.AddEquation=Oi;w.AddOperation=Ou;w.AdditiveAnimationBlendMode=jl;w.AdditiveBlending=ul;w.AlphaFormat=qu;w.AlwaysDepth=Ru;w.AlwaysStencilFunc=cd;w.AmbientLight=Cc;w.AmbientLightProbe=lf;w.AnimationClip=Ps;w.AnimationLoader=Q0;w.AnimationMixer=ff;w.AnimationObjectGroup=df;w.AnimationUtils=ft;w.ArcCurve=sc;w.ArrayCamera=ec;w.ArrowHelper=Ly;w.Audio=Nc;w.AudioAnalyser=hf;w.AudioContext=Dc;w.AudioListener=sy;w.AudioLoader=of;w.AxesHelper=Mf;w.AxisHelper=ix;w.BackSide=jt;w.BasicDepthPacking=od;w.BasicShadowMap=Zf;w.BinaryTextureLoader=lx;w.Bone=pa;w.BooleanKeyframeTrack=ar;w.BoundingBoxHelper=rx;w.Box2=jr;w.Box3=en;w.Box3Helper=Ry;w.BoxBufferGeometry=Yn;w.BoxGeometry=Yn;w.BoxHelper=xf;w.BufferAttribute=tt;w.BufferGeometry=Ue;w.BufferGeometryLoader=rf;w.ByteType=ku;w.Cache=nr;w.Camera=Os;w.CameraHelper=Ay;w.CanvasRenderer=hx;w.CanvasTexture=zd;w.CapsuleBufferGeometry=Fr;w.CapsuleGeometry=Fr;w.CatmullRomCurve3=ac;w.CineonToneMapping=Bu;w.CircleBufferGeometry=Ur;w.CircleGeometry=Ur;w.ClampToEdgeWrapping=zt;w.Clock=cf;w.Color=Me;w.ColorKeyframeTrack=Ec;w.ColorManagement=an;w.CompressedTexture=rc;w.CompressedTextureLoader=ey;w.ConeBufferGeometry=Br;w.ConeGeometry=Br;w.CubeCamera=sa;w.CubeReflectionMapping=di;w.CubeRefractionMapping=fi;w.CubeTexture=Zr;w.CubeTextureLoader=$d;w.CubeUVReflectionMapping=qr;w.CubicBezierCurve=ga;w.CubicBezierCurve3=lc;w.CubicInterpolant=qd;w.CullFaceBack=hl;w.CullFaceFront=fu;w.CullFaceFrontBack=Yf;w.CullFaceNone=du;w.Curve=Qt;w.CurvePath=Gd;w.CustomBlending=mu;w.CustomToneMapping=zu;w.CylinderBufferGeometry=gi;w.CylinderGeometry=gi;w.Cylindrical=xy;w.Data3DTexture=Ns;w.DataArrayTexture=Yr;w.DataTexture=qi;w.DataTexture2DArray=xx;w.DataTexture3D=Mx;w.DataTextureLoader=jd;w.DataUtils=Iy;w.DecrementStencilOp=op;w.DecrementWrapStencilOp=lp;w.DefaultLoadingManager=Kd;w.DepthFormat=hi;w.DepthStencilFormat=Ki;w.DepthTexture=tc;w.DirectionalLight=Rc;w.DirectionalLightHelper=Sy;w.DiscreteInterpolant=Yd;w.DodecahedronBufferGeometry=Hr;w.DodecahedronGeometry=Hr;w.DoubleSide=Zi;w.DstAlphaFactor=Eu;w.DstColorFactor=bu;w.DynamicBufferAttribute=Yy;w.DynamicCopyUsage=Ep;w.DynamicDrawUsage=Dr;w.DynamicReadUsage=yp;w.EdgesGeometry=hc;w.EdgesHelper=sx;w.EllipseCurve=ks;w.EqualDepth=Lu;w.EqualStencilFunc=dp;w.EquirectangularReflectionMapping=vs;w.EquirectangularRefractionMapping=_s;w.Euler=Ei;w.EventDispatcher=_i;w.ExtrudeBufferGeometry=Cn;w.ExtrudeGeometry=Cn;w.FaceColors=Fy;w.FileLoader=Ln;w.FlatShading=Yl;w.Float16BufferAttribute=Ed;w.Float32Attribute=tx;w.Float32BufferAttribute=Se;w.Float64Attribute=nx;w.Float64BufferAttribute=wd;w.FloatType=Wn;w.Fog=Hs;w.FogExp2=Bs;w.Font=vx;w.FontLoader=gx;w.FramebufferTexture=Hd;w.FrontSide=Yi;w.Frustum=Fs;w.GLBufferAttribute=mf;w.GLSL1=bp;w.GLSL3=Ul;w.GreaterDepth=Iu;w.GreaterEqualDepth=Pu;w.GreaterEqualStencilFunc=gp;w.GreaterStencilFunc=pp;w.GridHelper=yf;w.Group=zi;w.HalfFloatType=Gi;w.HemisphereLight=bc;w.HemisphereLightHelper=by;w.HemisphereLightProbe=af;w.IcosahedronBufferGeometry=zr;w.IcosahedronGeometry=zr;w.ImageBitmapLoader=sf;w.ImageLoader=Is;w.ImageUtils=yi;w.ImmediateRenderObject=_x;w.IncrementStencilOp=sp;w.IncrementWrapStencilOp=ap;w.InstancedBufferAttribute=ji;w.InstancedBufferGeometry=Ic;w.InstancedInterleavedBuffer=pf;w.InstancedMesh=nc;w.Int16Attribute=jy;w.Int16BufferAttribute=xd;w.Int32Attribute=Qy;w.Int32BufferAttribute=Md;w.Int8Attribute=Zy;w.Int8BufferAttribute=vd;w.IntType=Vu;w.InterleavedBuffer=sr;w.InterleavedBufferAttribute=mi;w.Interpolant=Kn;w.InterpolateDiscrete=Ms;w.InterpolateLinear=Es;w.InterpolateSmooth=ko;w.InvertStencilOp=cp;w.JSONLoader=ux;w.KeepStencilOp=Go;w.KeyframeTrack=yn;w.LOD=Ud;w.LatheBufferGeometry=Ji;w.LatheGeometry=Ji;w.Layers=na;w.LensFlare=fx;w.LessDepth=Cu;w.LessEqualDepth=Xo;w.LessEqualStencilFunc=fp;w.LessStencilFunc=up;w.Light=_n;w.LightProbe=Vs;w.Line=Zn;w.Line3=gf;w.LineBasicMaterial=Dt;w.LineCurve=Gs;w.LineCurve3=kd;w.LineDashedMaterial=xc;w.LineLoop=ic;w.LinePieces=Ny;w.LineSegments=qt;w.LineStrip=Dy;w.LinearEncoding=An;w.LinearFilter=_t;w.LinearInterpolant=Mc;w.LinearMipMapLinearFilter=Qf;w.LinearMipMapNearestFilter=Jf;w.LinearMipmapLinearFilter=ir;w.LinearMipmapNearestFilter=$l;w.LinearSRGBColorSpace=ci;w.LinearToneMapping=Fu;w.Loader=Vt;w.LoaderUtils=$o;w.LoadingManager=wc;w.LoopOnce=nd;w.LoopPingPong=rd;w.LoopRepeat=id;w.LuminanceAlphaFormat=Ku;w.LuminanceFormat=Zu;w.MOUSE=Xf;w.Material=Mt;w.MaterialLoader=nf;w.Math=ud;w.MathUtils=ud;w.Matrix3=Lt;w.Matrix4=Ae;w.MaxEquation=ml;w.Mesh=St;w.MeshBasicMaterial=$n;w.MeshDepthMaterial=la;w.MeshDistanceMaterial=ca;w.MeshFaceMaterial=By;w.MeshLambertMaterial=_c;w.MeshMatcapMaterial=yc;w.MeshNormalMaterial=vc;w.MeshPhongMaterial=mc;w.MeshPhysicalMaterial=pc;w.MeshStandardMaterial=Ma;w.MeshToonMaterial=gc;w.MinEquation=pl;w.MirroredRepeatWrapping=xs;w.MixOperation=Nu;w.MultiMaterial=Hy;w.MultiplyBlending=fl;w.MultiplyOperation=Ds;w.NearestFilter=Tt;w.NearestMipMapLinearFilter=jf;w.NearestMipMapNearestFilter=$f;w.NearestMipmapLinearFilter=Yo;w.NearestMipmapNearestFilter=qo;w.NeverDepth=Au;w.NeverStencilFunc=hp;w.NoBlending=Xn;w.NoColorSpace=np;w.NoColors=Oy;w.NoToneMapping=bn;w.NormalAnimationBlendMode=ta;w.NormalBlending=ki;w.NotEqualDepth=Du;w.NotEqualStencilFunc=mp;w.NumberKeyframeTrack=Cs;w.Object3D=Je;w.ObjectLoader=ty;w.ObjectSpaceNormalMap=ld;w.OctahedronBufferGeometry=Qi;w.OctahedronGeometry=Qi;w.OneFactor=yu;w.OneMinusDstAlphaFactor=wu;w.OneMinusDstColorFactor=Tu;w.OneMinusSrcAlphaFactor=Kl;w.OneMinusSrcColorFactor=Mu;w.OrthographicCamera=Us;w.PCFShadowMap=ql;w.PCFSoftShadowMap=pu;w.PMREMGenerator=Hl;w.ParametricGeometry=px;w.Particle=ky;w.ParticleBasicMaterial=Wy;w.ParticleSystem=Gy;w.ParticleSystemMaterial=Xy;w.Path=Or;w.PerspectiveCamera=It;w.Plane=wn;w.PlaneBufferGeometry=$i;w.PlaneGeometry=$i;w.PlaneHelper=Cy;w.PointCloud=zy;w.PointCloudMaterial=Vy;w.PointLight=Ac;w.PointLightHelper=Ey;w.Points=zs;w.PointsMaterial=or;w.PolarGridHelper=Ty;w.PolyhedronBufferGeometry=Rn;w.PolyhedronGeometry=Rn;w.PositionalAudio=ay;w.PropertyBinding=nt;w.PropertyMixer=uf;w.QuadraticBezierCurve=va;w.QuadraticBezierCurve3=_a;w.Quaternion=Ot;w.QuaternionKeyframeTrack=$r;w.QuaternionLinearInterpolant=Zd;w.REVISION=Qo;w.RGBADepthPacking=ad;w.RGBAFormat=$t;w.RGBAIntegerFormat=ed;w.RGBA_ASTC_10x10_Format=Dl;w.RGBA_ASTC_10x5_Format=Ll;w.RGBA_ASTC_10x6_Format=Pl;w.RGBA_ASTC_10x8_Format=Il;w.RGBA_ASTC_12x10_Format=Nl;w.RGBA_ASTC_12x12_Format=Ol;w.RGBA_ASTC_4x4_Format=El;w.RGBA_ASTC_5x4_Format=wl;w.RGBA_ASTC_5x5_Format=bl;w.RGBA_ASTC_6x5_Format=Tl;w.RGBA_ASTC_6x6_Format=Sl;w.RGBA_ASTC_8x5_Format=Al;w.RGBA_ASTC_8x6_Format=Rl;w.RGBA_ASTC_8x8_Format=Cl;w.RGBA_BPTC_Format=Fl;w.RGBA_ETC2_EAC_Format=Ml;w.RGBA_PVRTC_2BPPV1_Format=yl;w.RGBA_PVRTC_4BPPV1_Format=_l;w.RGBA_S3TC_DXT1_Format=Bo;w.RGBA_S3TC_DXT3_Format=Ho;w.RGBA_S3TC_DXT5_Format=zo;w.RGBFormat=Yu;w.RGB_ETC1_Format=td;w.RGB_ETC2_Format=xl;w.RGB_PVRTC_2BPPV1_Format=vl;w.RGB_PVRTC_4BPPV1_Format=gl;w.RGB_S3TC_DXT1_Format=Uo;w.RGFormat=Ju;w.RGIntegerFormat=Qu;w.RawShaderMaterial=fc;w.Ray=Mi;w.Raycaster=_y;w.RectAreaLight=Lc;w.RedFormat=$u;w.RedIntegerFormat=ju;w.ReinhardToneMapping=Uu;w.RepeatWrapping=ys;w.ReplaceStencilOp=rp;w.ReverseSubtractEquation=vu;w.RingBufferGeometry=kr;w.RingGeometry=kr;w.SRGBColorSpace=En;w.Scene=ha;w.SceneUtils=dx;w.ShaderChunk=Ke;w.ShaderLib=vn;w.ShaderMaterial=ln;w.ShadowMaterial=dc;w.Shape=Tn;w.ShapeBufferGeometry=er;w.ShapeGeometry=er;w.ShapePath=Py;w.ShapeUtils=Sn;w.ShortType=Gu;w.Skeleton=ma;w.SkeletonHelper=vf;w.SkinnedMesh=fa;w.SmoothShading=Kf;w.Source=Hi;w.Sphere=xi;w.SphereBufferGeometry=tr;w.SphereGeometry=tr;w.Spherical=yy;w.SphericalHarmonics3=Pc;w.SplineCurve=ya;w.SpotLight=Sc;w.SpotLightHelper=My;w.Sprite=da;w.SpriteMaterial=ua;w.SrcAlphaFactor=Zl;w.SrcAlphaSaturateFactor=Su;w.SrcColorFactor=xu;w.StaticCopyUsage=Mp;w.StaticDrawUsage=Ir;w.StaticReadUsage=_p;w.StereoCamera=iy;w.StreamCopyUsage=wp;w.StreamDrawUsage=vp;w.StreamReadUsage=xp;w.StringKeyframeTrack=lr;w.SubtractEquation=gu;w.SubtractiveBlending=dl;w.TOUCH=qf;w.TangentSpaceNormalMap=rr;w.TetrahedronBufferGeometry=Gr;w.TetrahedronGeometry=Gr;w.TextGeometry=mx;w.Texture=At;w.TextureLoader=Jd;w.TorusBufferGeometry=Vr;w.TorusGeometry=Vr;w.TorusKnotBufferGeometry=Wr;w.TorusKnotGeometry=Wr;w.Triangle=xt;w.TriangleFanDrawMode=tp;w.TriangleStripDrawMode=ep;w.TrianglesDrawMode=sd;w.TubeBufferGeometry=Xr;w.TubeGeometry=Xr;w.UVMapping=ea;w.Uint16Attribute=Jy;w.Uint16BufferAttribute=ia;w.Uint32Attribute=ex;w.Uint32BufferAttribute=ra;w.Uint8Attribute=Ky;w.Uint8BufferAttribute=_d;w.Uint8ClampedAttribute=$y;w.Uint8ClampedBufferAttribute=yd;w.Uniform=Ea;w.UniformsLib=_e;w.UniformsUtils=bd;w.UnsignedByteType=pi;w.UnsignedInt248Type=Vi;w.UnsignedIntType=fs;w.UnsignedShort4444Type=Wu;w.UnsignedShort5551Type=Xu;w.UnsignedShortType=Pr;w.VSMShadowMap=Ar;w.Vector2=le;w.Vector3=D;w.Vector4=st;w.VectorKeyframeTrack=Ls;w.Vertex=qy;w.VertexColors=Uy;w.VideoTexture=Bd;w.WebGL1Renderer=Od;w.WebGL3DRenderTarget=md;w.WebGLArrayRenderTarget=pd;w.WebGLCubeRenderTarget=oa;w.WebGLMultipleRenderTargets=gd;w.WebGLMultisampleRenderTarget=yx;w.WebGLRenderTarget=kt;w.WebGLRenderTargetCube=cx;w.WebGLRenderer=at;w.WebGLUtils=Nd;w.WireframeGeometry=uc;w.WireframeHelper=ox;w.WrapAroundEnding=ws;w.XHRLoader=ax;w.ZeroCurvatureEnding=Ui;w.ZeroFactor=_u;w.ZeroSlopeEnding=Bi;w.ZeroStencilOp=ip;w._SRGBAFormat=Zo;w.sRGBEncoding=dt;var jo={exports:{}};/*!
 * uevent (v2.1.1)
 * @copyright 2015-2022 Damien "Mistic" Sorel <contact@git.strangeplanet.fr>
 * @licence MIT
 */(function(r,e){(function(t,n){n(e)})(Xl,function(t){var n=function(){return!0},i=function(){return!1},s=function(){function v(g,E,b){Object.defineProperties(this,{target:{get:function(){return g},set:function(){},enumerable:!0},type:{get:function(){return E},set:function(){},enumerable:!0},args:{get:function(){return b},set:function(){},enumerable:!0}}),this.isDefaultPrevented=i,this.isPropagationStopped=i}var m=v.prototype;return m.preventDefault=function(){this.isDefaultPrevented=n},m.stopPropagation=function(){this.isPropagationStopped=n},v}(),o=s,a=function(){function v(){}var m=v.prototype;return m.on=function(E,b){var C=this;if(this.__events=this.__events||{},typeof E=="object")for(var S in E)E.hasOwnProperty(S)&&(this.__events[S]=this.__events[S]||[],this.__events[S].push(E[S]));else E.split(" ").forEach(function(A){C.__events[A]=C.__events[A]||[],C.__events[A].push(b)});return this},m.off=function(E,b){var C=this;if(this.__events=this.__events||{},typeof E=="object"){for(var S in E)if(E.hasOwnProperty(S)&&S in this.__events){var A=this.__events[S].indexOf(E[S]);A!==-1&&this.__events[S].splice(A,1)}}else E?E.split(" ").forEach(function(O){if(O in C.__events)if(b){var V=C.__events[O].indexOf(b);V!==-1&&C.__events[O].splice(V,1)}else C.__events[O].length=0}):this.__events={};return this},m.once=function(E,b){var C=this;if(this.__once=this.__once||{},typeof E=="object")for(var S in E)E.hasOwnProperty(S)&&(this.__once[S]=this.__once[S]||[],this.__once[S].push(E[S]));else E.split(" ").forEach(function(A){C.__once[A]=C.__once[A]||[],C.__once[A].push(b)});return this},m.trigger=function(E){var b=Array.prototype.slice.call(arguments,1),C=new o(this,E,b);if(this.__events&&E in this.__events)for(var S=0,A=this.__events[E].length;S<A;S++){var O=this.__events[E][S];if(typeof O=="object"?O.handleEvent(C):O.call.apply(O,[this,C].concat(b)),C.isPropagationStopped())break}if(this.__once&&E in this.__once){for(var V=0,U=this.__once[E].length;V<U;V++){var Q=this.__once[E][V];if(typeof Q=="object"?Q.handleEvent(C):Q.call.apply(Q,[this,C].concat(b)),C.isPropagationStopped())break}delete this.__once[E]}return C},m.change=function(E,b){var C=Array.prototype.slice.call(arguments,2),S=new o(this,E,C);if(S.value=b,this.__events&&E in this.__events)for(var A=0,O=this.__events[E].length;A<O;A++){var V=this.__events[E][A];if(typeof V=="object"?S.value=V.handleEvent(S):S.value=V.call.apply(V,[this,S,S.value].concat(C)),S.isPropagationStopped())break}return S.value},v}(),c=a;function h(v){return v=typeof v=="function"?v.prototype:v,["on","off","once","trigger","change"].forEach(function(m){v[m]=c.prototype[m]}),v}var u={EventEmitter:c,Event:o,mixin:h},f=u.EventEmitter,d=u.Event,p=u.mixin;t.Event=d,t.EventEmitter=f,t.default=u,t.mixin=p,Object.defineProperty(t,"__esModule",{value:!0})})})(jo,jo.exports);/*!
* Photo Sphere Viewer 4.6.1
* @copyright 2014-2015 Jérémy Heleine
* @copyright 2015-2022 Damien "Mistic" Sorel
* @licence MIT (https://opensource.org/licenses/MIT)
*/(function(r,e){(function(t,n){n(e,w,jo.exports)})(Xl,function(t,n,i){function s(T){this.message=T,"captureStackTrace"in Error?Error.captureStackTrace(this,s):this.stack=new Error().stack}s.prototype=Object.create(Error.prototype),s.prototype.name="PSVError",s.prototype.constructor=s;var o=function(){function T(x){this.psv=x}var y=T.prototype;return y.destroy=function(){delete this.psv},y.supportsTransition=function(M){return!1},y.supportsPreload=function(M){return!1},y.loadTexture=function(M,l){throw new s("loadTexture not implemented")},y.createMesh=function(M){throw new s("createMesh not implemented")},y.setTexture=function(M,l,_){throw new s("setTexture not implemented")},y.setTextureOpacity=function(M,l){throw new s("setTextureOpacity not implemented")},y.disposeTexture=function(M){throw new s("disposeTexture not implemented")},T}();o.id=null,o.supportsDownload=!1;function a(T,y){for(var x=0;x<y.length;x++){var M=y[x];M.enumerable=M.enumerable||!1,M.configurable=!0,"value"in M&&(M.writable=!0),Object.defineProperty(T,M.key,M)}}function c(T,y,x){return y&&a(T.prototype,y),x&&a(T,x),Object.defineProperty(T,"prototype",{writable:!1}),T}function h(){return h=Object.assign||function(T){for(var y=1;y<arguments.length;y++){var x=arguments[y];for(var M in x)Object.prototype.hasOwnProperty.call(x,M)&&(T[M]=x[M])}return T},h.apply(this,arguments)}function u(T,y){T.prototype=Object.create(y.prototype),T.prototype.constructor=T,f(T,y)}function f(T,y){return f=Object.setPrototypeOf||function(M,l){return M.__proto__=l,M},f(T,y)}function d(T){if(T===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return T}var p=1500,v=4,m=300,g=500,E=100,b=2e3,C=300,S=10,A="photoSphereViewer",O="psvSphere",V={ROTATE_LAT_UP:"rotateLatitudeUp",ROTATE_LAT_DOWN:"rotateLatitudeDown",ROTATE_LONG_RIGHT:"rotateLongitudeRight",ROTATE_LONG_LEFT:"rotateLongitudeLeft",ZOOM_IN:"zoomIn",ZOOM_OUT:"zoomOut",TOGGLE_AUTOROTATE:"toggleAutorotate"},U={AUTOROTATE:"autorotate",BEFORE_RENDER:"before-render",BEFORE_ROTATE:"before-rotate",CLICK:"click",CLOSE_PANEL:"close-panel",CONFIG_CHANGED:"config-changed",DOUBLE_CLICK:"dblclick",FULLSCREEN_UPDATED:"fullscreen-updated",HIDE_NOTIFICATION:"hide-notification",HIDE_OVERLAY:"hide-overlay",HIDE_TOOLTIP:"hide-tooltip",KEY_PRESS:"key-press",LOAD_PROGRESS:"load-progress",OPEN_PANEL:"open-panel",PANORAMA_LOADED:"panorama-loaded",POSITION_UPDATED:"position-updated",READY:"ready",RENDER:"render",SHOW_NOTIFICATION:"show-notification",SHOW_OVERLAY:"show-overlay",SHOW_TOOLTIP:"show-tooltip",SIZE_UPDATED:"size-updated",STOP_ALL:"stop-all",ZOOM_UPDATED:"zoom-updated"},Q={GET_ANIMATE_POSITION:"get-animate-position",GET_ROTATE_POSITION:"get-rotate-position"},Z={ENTER_OBJECT:"enter-object",HOVER_OBJECT:"hover-object",LEAVE_OBJECT:"leave-object"},L={MENU:"menu",TWO_FINGERS:"twoFingers",CTRL_ZOOM:"ctrlZoom",ERROR:"error",DESCRIPTION:"description"},B={linear:function(y){return y},inQuad:function(y){return y*y},outQuad:function(y){return y*(2-y)},inOutQuad:function(y){return y<.5?2*y*y:-1+(4-2*y)*y},inCubic:function(y){return y*y*y},outCubic:function(y){return--y*y*y+1},inOutCubic:function(y){return y<.5?4*y*y*y:(y-1)*(2*y-2)*(2*y-2)+1},inQuart:function(y){return y*y*y*y},outQuart:function(y){return 1- --y*y*y*y},inOutQuart:function(y){return y<.5?8*y*y*y*y:1-8*--y*y*y*y},inQuint:function(y){return y*y*y*y*y},outQuint:function(y){return 1+--y*y*y*y*y},inOutQuint:function(y){return y<.5?16*y*y*y*y*y:1+16*--y*y*y*y*y},inSine:function(y){return 1-Math.cos(y*(Math.PI/2))},outSine:function(y){return Math.sin(y*(Math.PI/2))},inOutSine:function(y){return .5-.5*Math.cos(Math.PI*y)},inExpo:function(y){return Math.pow(2,10*(y-1))},outExpo:function(y){return 1-Math.pow(2,-10*y)},inOutExpo:function(y){return(y=y*2-1)<0?.5*Math.pow(2,10*y):1-.5*Math.pow(2,-10*y)},inCirc:function(y){return 1-Math.sqrt(1-y*y)},outCirc:function(y){return Math.sqrt(1-(y-1)*(y-1))},inOutCirc:function(y){return(y*=2)<1?.5-.5*Math.sqrt(1-y*y):.5+.5*Math.sqrt(1-(y-=2)*y)}},Y={Enter:"Enter",Control:"Control",Escape:"Escape",Space:" ",PageUp:"PageUp",PageDown:"PageDown",ArrowLeft:"ArrowLeft",ArrowUp:"ArrowUp",ArrowRight:"ArrowRight",ArrowDown:"ArrowDown",Delete:"Delete",Plus:"+",Minus:"-"},z=Object.freeze({__proto__:null,DEFAULT_TRANSITION:p,MOVE_THRESHOLD:v,DBLCLICK_DELAY:m,LONGTOUCH_DELAY:g,TWOFINGERSOVERLAY_DELAY:E,CTRLZOOM_TIMEOUT:b,INERTIA_WINDOW:C,SPHERE_RADIUS:S,VIEWER_DATA:A,MESH_USER_DATA:O,ACTIONS:V,EVENTS:U,CHANGE_EVENTS:Q,OBJECT_EVENTS:Z,IDS:L,EASINGS:B,KEY_CODES:Y}),N={loaded:!1,pixelRatio:1,isWebGLSupported:!1,isTouchEnabled:null,maxTextureWidth:0,mouseWheelEvent:null,fullscreenEvent:null};N.load=function(){if(!N.loaded){var T=P();N.loaded=!0,N.pixelRatio=window.devicePixelRatio||1,N.isWebGLSupported=T!=null,N.isTouchEnabled=F(),N.maxTextureWidth=X(T),N.mouseWheelEvent=te(),N.fullscreenEvent=pe()}};var R=null;N.getMaxCanvasWidth=function(){return R===null&&(R=J(N.maxTextureWidth)),R};function P(){var T=document.createElement("canvas"),y=["webgl","experimental-webgl","moz-webgl","webkit-3d"],x=null;return T.getContext&&y.some(function(M){try{return x=T.getContext(M),x!==null}catch{return!1}})?x:null}function F(){return new Promise(function(T){var y=function x(M){T(!!M),window.removeEventListener("touchstart",x)};window.addEventListener("touchstart",y,!1),setTimeout(y,1e4)})}function X(T){return T!==null?T.getParameter(T.MAX_TEXTURE_SIZE):0}function J(T){var y=document.createElement("canvas"),x=y.getContext("2d");for(y.width=T,y.height=T/2;y.width>1024;){x.fillStyle="white",x.fillRect(0,0,1,1);try{if(x.getImageData(0,0,1,1).data[0]===255)return y.width}catch{}y.width/=2,y.height/=2}throw new s("Unable to detect system capabilities")}function te(){return"onwheel"in document.createElement("div")?"wheel":document.onmousewheel!==void 0?"mousewheel":"DOMMouseScroll"}var oe={exitFullscreen:"fullscreenchange",webkitExitFullscreen:"webkitfullscreenchange",mozCancelFullScreen:"mozfullscreenchange",msExitFullscreen:"MSFullscreenChange"};function pe(){var T=Object.keys(oe).filter(function(y){return y in document});return T.length?oe[T[0]]:null}function Le(T,y,x){x===void 0?T.classList.toggle(y):x&&!T.classList.contains(y)?T.classList.add(y):x||T.classList.remove(y)}function Oe(T,y){y&&y.split(" ").forEach(function(x){Le(T,x,!0)})}function K(T,y){y&&y.split(" ").forEach(function(x){Le(T,x,!1)})}function Qe(T,y){var x=T;do{if(x===y)return!0;x=x.parentNode}while(x);return!1}function ze(T,y){if(!T.matches)return null;var x=T;do{if(x.matches(y))return x;x=x instanceof SVGElement?x.parentNode:x.parentElement}while(x);return null}function Ve(T){for(var y=0,x=0,M=T;M;)y+=M.offsetLeft-M.scrollLeft+M.clientLeft,x+=M.offsetTop-M.scrollTop+M.clientTop,M=M.offsetParent;return{left:y,top:x}}function de(T){return(document.fullscreenElement||document.webkitFullscreenElement)===T}function qe(T){(T.requestFullscreen||T.webkitRequestFullscreen).call(T)}function re(){(document.exitFullscreen||document.webkitExitFullscreen).call(document)}function se(T,y){return window.getComputedStyle(T,null)[y]}function ue(T){var y=10,x=40,M=800,l=0,_=0,k=0,W=0;return"detail"in T&&(_=T.detail),"wheelDelta"in T&&(_=-T.wheelDelta/120),"wheelDeltaY"in T&&(_=-T.wheelDeltaY/120),"wheelDeltaX"in T&&(l=-T.wheelDeltaX/120),"axis"in T&&T.axis===T.HORIZONTAL_AXIS&&(l=_,_=0),k=l*y,W=_*y,"deltaY"in T&&(W=T.deltaY),"deltaX"in T&&(k=T.deltaX),(k||W)&&T.deltaMode&&(T.deltaMode===1?(k*=x,W*=x):(k*=M,W*=M)),k&&!l&&(l=k<1?-1:1),W&&!_&&(_=W<1?-1:1),{spinX:l,spinY:_,pixelX:k,pixelY:W}}function be(T,y,x){return Math.max(y,Math.min(x,T))}function ye(T,y){var x=T%y;return x<0&&(x+=y),x}function We(T){return Number.isInteger?Number.isInteger(T):typeof T=="number"&&Number.isFinite(T)&&Math.floor(T)===T}function Fe(T){return Math.log(T)/Math.log(2)%1===0}function Ne(T){return T.reduce(function(y,x){return y+x},0)}function ht(T,y){return Math.sqrt(Math.pow(T.x-y.x,2)+Math.pow(T.y-y.y,2))}function rt(T,y){var x=[0,Math.PI*2,-Math.PI*2];return x.reduce(function(M,l){var _=y-T+l;return Math.abs(_)<Math.abs(M)?_:M},1/0)}function G(T,y){return Math.acos(Math.cos(T.latitude)*Math.cos(y.latitude)*Math.cos(T.longitude-y.longitude)+Math.sin(T.latitude)*Math.sin(y.latitude))}function I(T,y){var x=T[0],M=T[1],l=y[0],_=y[1],k=(l-x)*Math.cos((M+_)/2),W=_-M;return Math.sqrt(k*k+W*W)}function ne(T){return T.replace(/[A-Z](?:(?=[^A-Z])|[A-Z]*(?=[A-Z][^A-Z]|$))/g,function(y,x){return(x>0?"-":"")+y.toLowerCase()})}function ce(T,y){var x,M,l,_,k=0,W=function(){k=Date.now(),_=void 0,l=T.apply(x,M),_||(x=M=null)};return function(){var he=Date.now();k||(k=he);var ve=y-(he-k);return x=this,M=arguments,ve<=0||ve>y?(_&&(clearTimeout(_),_=void 0),k=he,l=T.apply(x,M),_||(x=M=null)):_||(_=setTimeout(W,ve)),l}}function xe(T){if(typeof T=="object"&&T!==null){if(typeof Object.getPrototypeOf=="function"){var y=Object.getPrototypeOf(T);return y===Object.prototype||y===null}return Object.prototype.toString.call(T)==="[object Object]"}return!1}function we(T,y){var x=y;return function M(l,_){return Array.isArray(_)?(!l||!Array.isArray(l)?l=[]:l.length=0,_.forEach(function(k,W){l[W]=M(null,k)})):typeof _=="object"?((!l||Array.isArray(l))&&(l={}),Object.keys(_).forEach(function(k){typeof _[k]!="object"||!_[k]||!xe(_[k])?l[k]=_[k]:_[k]!=x&&(l[k]?M(l[k],_[k]):l[k]=M(null,_[k]))})):l=_,l}(T,y)}function Ie(T){return we(null,T)}function ie(T){return!T||Object.keys(T).length===0&&T.constructor===Object}function Ce(T,y){Object.keys(T).forEach(function(x){y(T[x],x)})}function Xe(T){return T==null}function Ee(){for(var T=arguments.length,y=new Array(T),x=0;x<T;x++)y[x]=arguments[x];for(var M=0,l=y;M<l.length;M++){var _=l[M];if(!Xe(_))return _}}function q(T,y){if(T)for(var x=0,M=[["_",T]].concat(Object.entries(T));x<M.length;x++){var l=M[x],_=l[1];if(_.prototype instanceof y)return _}return null}function ge(){var T=new Error("Loading was aborted.");return T.name="AbortError",T}function me(T){return(T==null?void 0:T.name)==="AbortError"}function Re(T){console.warn("PhotoSphereViewer: "+T)}function Te(T){return[["x","y"],["longitude","latitude"]].some(function(y){var x=y[0],M=y[1];return T[x]!==void 0&&T[M]!==void 0})}function Pe(T,y){var x=T.match("<GPano:"+y+">(.*)</GPano:"+y+">");if(x!==null){var M=parseInt(x[1],10);return isNaN(M)?null:M}if(x=T.match("GPano:"+y+'="(.*?)"'),x!==null){var l=parseInt(x[1],10);return isNaN(l)?null:l}return null}var fe={top:"0%",bottom:"100%",left:"0%",right:"100%",center:"50%"};function Ge(T){if(!T)return{x:.5,y:.5};if(typeof T=="object")return T;var y=T.toLocaleLowerCase().split(" ").slice(0,2);y.length===1&&(fe[y[0]]!==void 0?y=[y[0],"center"]:y=[y[0],y[0]]);var x=y[1]!=="left"&&y[1]!=="right"&&y[0]!=="top"&&y[0]!=="bottom";y=y.map(function(l){return fe[l]||l}),x||y.reverse();var M=y.join(" ").match(/^([0-9.]+)% ([0-9.]+)%$/);return M?{x:parseFloat(M[1])/100,y:parseFloat(M[2])/100}:{x:.5,y:.5}}var lt={0:"left",.5:"center",1:"right"},$e={0:"top",.5:"center",1:"bottom"};function Yt(T,y,x){if(x===void 0&&(x=!0),!T)return y.split(" ");if(typeof T=="string"){var M=Ge(T);if(!(M.x in lt)||!(M.y in $e))throw new s('Unable to parse position "'+T+'"');T=[$e[M.y],lt[M.x]]}if(!x&&T[0]==="center"&&T[1]==="center")throw new s('Unable to parse position "center center"');return T}function Wt(T){var y;if(typeof T=="string"){var x=T.toString().trim(),M=parseFloat(x.replace(/^(-?[0-9]+(?:\.[0-9]*)?).*$/,"$1")),l=x.replace(/^-?[0-9]+(?:\.[0-9]*)?(.*)$/,"$1").trim();switch(l.match(/(pm|per minute)$/)&&(M/=60),l){case"dpm":case"degrees per minute":case"dps":case"degrees per second":y=n.Math.degToRad(M);break;case"rdpm":case"radians per minute":case"rdps":case"radians per second":y=M;break;case"rpm":case"revolutions per minute":case"rps":case"revolutions per second":y=M*Math.PI*2;break;default:throw new s('Unknown speed unit "'+l+'"')}}else y=T;return y}function tn(T,y,x){y===void 0&&(y=!1),x===void 0&&(x=y);var M;if(typeof T=="string"){var l=T.toLowerCase().trim().match(/^(-?[0-9]+(?:\.[0-9]*)?)(.*)$/);if(!l)throw new s('Unknown angle "'+T+'"');var _=parseFloat(l[1]),k=l[2];if(k)switch(k){case"deg":case"degs":M=n.Math.degToRad(_);break;case"rad":case"rads":M=_;break;default:throw new s('Unknown angle unit "'+k+'"')}else M=_}else if(typeof T=="number"&&!isNaN(T))M=T;else throw new s('Unknown angle "'+T+'"');return M=ye(y?M+Math.PI:M,Math.PI*2),y?be(M-Math.PI,-Math.PI/(x?2:1),Math.PI/(x?2:1)):M}function jn(T){var y=new n.Texture(T);return y.needsUpdate=!0,y.minFilter=n.LinearFilter,y.generateMipmaps=!1,y}var Ws=new n.Quaternion;function wi(T,y){Ws.setFromEuler(y).invert(),T.applyQuaternion(Ws)}var Pn=function(){function T(x){var M=this;this.__callbacks=[],x?((!x.easing||typeof x.easing=="string")&&(x.easing=B[x.easing||"linear"]),this.__start=null,this.options=x,x.delay?this.__delayTimeout=setTimeout(function(){M.__delayTimeout=null,M.__animationFrame=window.requestAnimationFrame(function(l){return M.__run(l)})},x.delay):this.__animationFrame=window.requestAnimationFrame(function(l){return M.__run(l)})):this.__resolved=!0}var y=T.prototype;return y.__run=function(M){var l=this;this.__start===null&&(this.__start=M);var _=(M-this.__start)/this.options.duration,k={};_<1?(Ce(this.options.properties,function(W,he){W&&(k[he]=W.start+(W.end-W.start)*l.options.easing(_))}),this.options.onTick(k,_),this.__animationFrame=window.requestAnimationFrame(function(W){return l.__run(W)})):(Ce(this.options.properties,function(W,he){W&&(k[he]=W.end)}),this.options.onTick(k,1),this.__animationFrame=window.requestAnimationFrame(function(){l.__resolved=!0,l.__resolve(!0)}))},y.__resolve=function(M){this.__callbacks.forEach(function(l){return l(M)}),this.__callbacks.length=0},y.then=function(M,l){var _=this;return M===void 0&&(M=null),l===void 0&&(l=null),l&&Re("Animation#then does not accept a rejection handler anymore"),this.__resolved||this.__cancelled?Promise.resolve(this.__resolved).then(M):new Promise(function(k){_.__callbacks.push(k)}).then(M)},y.cancel=function(){!this.__cancelled&&!this.__resolved&&(this.__cancelled=!0,this.__resolve(!1),this.__delayTimeout&&(window.clearTimeout(this.__delayTimeout),this.__delayTimeout=null),this.__animationFrame&&(window.cancelAnimationFrame(this.__animationFrame),this.__animationFrame=null))},y.catch=function(){return Re("Animation#catch is not supported anymore"),this.then()},y.finally=function(M){return Re("Animation#finally is not supported anymore"),this.then(M)},T.resolve=function(){Re("Animation.resolve is not supported anymore")},T}(),In=function(){function T(x,M,l,_,k){if(M===void 0&&(M=0),l===void 0&&(l=-1/0),_===void 0&&(_=1/0),k===void 0&&(k=!1),this.fn=x,this.mode=T.STOP,this.speed=0,this.speedMult=1,this.currentSpeed=0,this.target=0,this.current=M,this.min=l,this.max=_,this.loopValue=k,k&&l!==0)throw new s("invalid config");this.fn&&this.fn(M)}var y=T.prototype;return y.setSpeed=function(M){this.speed=M},y.goto=function(M,l){l===void 0&&(l=1),this.mode=T.POSITION,this.target=this.loopValue?ye(M,this.max):be(M,this.min,this.max),this.speedMult=l},y.step=function(M,l){l===void 0&&(l=1),this.mode!==T.POSITION&&(this.target=this.current),this.goto(this.target+M,l)},y.roll=function(M,l){M===void 0&&(M=!1),l===void 0&&(l=1),this.mode=T.INFINITE,this.target=M?-1/0:1/0,this.speedMult=l},y.stop=function(){this.mode=T.STOP},y.setValue=function(M){return this.target=this.loopValue?ye(M,this.max):be(M,this.min,this.max),this.mode=T.STOP,this.target!==this.current?(this.current=this.target,this.fn&&this.fn(this.current),!0):!1},y.update=function(M){if(this.mode===T.POSITION){this.loopValue&&Math.abs(this.target-this.current)>this.max/2&&(this.current=this.current<this.target?this.current+this.max:this.current-this.max);var l=this.currentSpeed*this.currentSpeed/(this.speed*this.speedMult*4);Math.abs(this.target-this.current)<=l&&(this.mode=T.STOP)}var _=this.mode===T.STOP?0:this.speed*this.speedMult;this.target<this.current&&(_=-_),this.currentSpeed<_?this.currentSpeed=Math.min(_,this.currentSpeed+M/1e3*this.speed*this.speedMult*2):this.currentSpeed>_&&(this.currentSpeed=Math.max(_,this.currentSpeed-M/1e3*this.speed*this.speedMult*2));var k=null;return this.current>this.target&&this.currentSpeed?k=Math.max(this.target,this.current+this.currentSpeed*M/1e3):this.current<this.target&&this.currentSpeed&&(k=Math.min(this.target,this.current+this.currentSpeed*M/1e3)),k!==null&&(k=this.loopValue?ye(k,this.max):be(k,this.min,this.max),k!==this.current)?(this.current=k,this.fn&&this.fn(this.current),!0):!1},T}();In.STOP=0,In.INFINITE=1,In.POSITION=2;var Xs=function(){function T(x,M){this.fn=M,this.dynamics=x,this.fn&&this.fn(this.current)}var y=T.prototype;return y.setSpeed=function(M){Ce(this.dynamics,function(l){l.setSpeed(M)})},y.goto=function(M,l){var _=this;l===void 0&&(l=1),Ce(M,function(k,W){_.dynamics[W].goto(k,l)})},y.step=function(M,l){var _=this;l===void 0&&(l=1),Ce(M,function(k,W){_.dynamics[W].step(k,l)})},y.roll=function(M,l){var _=this;l===void 0&&(l=1),Ce(M,function(k,W){_.dynamics[W].roll(k,l)})},y.stop=function(){Ce(this.dynamics,function(M){return M.stop()})},y.setValue=function(M){var l=this,_=!1;return Ce(M,function(k,W){_|=l.dynamics[W].setValue(k)}),_&&this.fn&&this.fn(this.current),_},y.update=function(M){var l=!1;return Ce(this.dynamics,function(_){l|=_.update(M)}),l&&this.fn&&this.fn(this.current),l},c(T,[{key:"current",get:function(){var M={};return Ce(this.dynamics,function(l,_){M[_]=l.current}),M}}]),T}(),bi=function(T){u(y,T);function y(M){var l,_=M.psv,k=M.container,W=M.direction,he=M.onUpdate;return l=T.call(this)||this,l.psv=_,l.container=k,l.prop={onUpdate:he,direction:W,mousedown:!1,mouseover:!1},l.container.addEventListener("click",d(l)),l.container.addEventListener("mousedown",d(l)),l.container.addEventListener("mouseenter",d(l)),l.container.addEventListener("mouseleave",d(l)),l.container.addEventListener("touchstart",d(l)),l.container.addEventListener("mousemove",d(l),!0),l.container.addEventListener("touchmove",d(l),!0),window.addEventListener("mouseup",d(l)),window.addEventListener("touchend",d(l)),l}var x=y.prototype;return x.destroy=function(){window.removeEventListener("mouseup",this),window.removeEventListener("touchend",this)},x.handleEvent=function(l){switch(l.type){case"click":l.stopPropagation();break;case"mousedown":this.__onMouseDown(l);break;case"mouseenter":this.__onMouseEnter(l);break;case"mouseleave":this.__onMouseLeave(l);break;case"touchstart":this.__onTouchStart(l);break;case"mousemove":this.__onMouseMove(l);break;case"touchmove":this.__onTouchMove(l);break;case"mouseup":this.__onMouseUp(l);break;case"touchend":this.__onTouchEnd(l);break}},x.__onMouseDown=function(l){this.prop.mousedown=!0,this.__update(l,!0)},x.__onMouseEnter=function(l){this.prop.mouseover=!0,this.__update(l,!0)},x.__onTouchStart=function(l){this.prop.mouseover=!0,this.prop.mousedown=!0,this.__update(l.changedTouches[0],!0)},x.__onMouseMove=function(l){(this.prop.mousedown||this.prop.mouseover)&&(l.stopPropagation(),this.__update(l,!0))},x.__onTouchMove=function(l){(this.prop.mousedown||this.prop.mouseover)&&(l.stopPropagation(),this.__update(l.changedTouches[0],!0))},x.__onMouseUp=function(l){this.prop.mousedown&&(this.prop.mousedown=!1,this.__update(l,!1))},x.__onMouseLeave=function(l){this.prop.mouseover&&(this.prop.mouseover=!1,this.__update(l,!0))},x.__onTouchEnd=function(l){this.prop.mousedown&&(this.prop.mouseover=!1,this.prop.mousedown=!1,this.__update(l.changedTouches[0],!1))},x.__update=function(l,_){var k=this.container.getBoundingClientRect(),W=l[this.vertical?"clientY":"clientX"],he=k[this.vertical?"bottom":"left"],ve=k[this.vertical?"height":"width"],De=Math.abs((he-W)/ve);this.prop.onUpdate({value:De,click:!_,mousedown:this.prop.mousedown,mouseover:this.prop.mouseover,cursor:l})},c(y,[{key:"vertical",get:function(){return this.prop.direction===y.VERTICAL}}]),y}(i.EventEmitter);bi.VERTICAL=1,bi.HORIZONTAL=2;var H=Object.freeze({__proto__:null,toggleClass:Le,addClasses:Oe,removeClasses:K,hasParent:Qe,getClosest:ze,getPosition:Ve,isFullscreenEnabled:de,requestFullscreen:qe,exitFullscreen:re,getStyle:se,normalizeWheel:ue,bound:be,loop:ye,isInteger:We,isPowerOfTwo:Fe,sum:Ne,distance:ht,getShortestArc:rt,getAngle:G,greatArcDistance:I,dasherize:ne,throttle:ce,isPlainObject:xe,deepmerge:we,clone:Ie,isEmpty:ie,each:Ce,isNil:Xe,firstNonNull:Ee,pluginInterop:q,getAbortError:ge,isAbortError:me,logWarn:Re,isExtendedPosition:Te,getXMPValue:Pe,parsePosition:Ge,cleanPosition:Yt,parseSpeed:Wt,parseAngle:tn,createTexture:jn,applyEulerInverse:wi,Animation:Pn,Dynamic:In,MultiDynamic:Xs,Slider:bi}),$=function(T){u(y,T);function y(M,l){var _;if(_=T.call(this,M)||this,_.config=h({resolution:64},l),!Fe(_.config.resolution))throw new s("EquirectangularAdapter resolution must be power of two");return _.SPHERE_SEGMENTS=_.config.resolution,_.SPHERE_HORIZONTAL_SEGMENTS=_.SPHERE_SEGMENTS/2,_}var x=y.prototype;return x.supportsTransition=function(){return!0},x.supportsPreload=function(){return!0},x.loadTexture=function(l,_){var k=this;return typeof l!="string"?((Array.isArray(l)||typeof l=="object"&&!!l.left)&&Re("Cubemap support now requires an additional adapter, see https://photo-sphere-viewer.js.org/guide/adapters"),Promise.reject(new s("Invalid panorama url, are you using the right adapter?"))):(this.psv.config.useXmpData?this.__loadXMP(l,function(W){return k.psv.loader.setProgress(W)}).then(function(W){return k.psv.textureLoader.loadImage(l).then(function(he){return{img:he,xmpPanoData:W}})}):this.psv.textureLoader.loadImage(l,function(W){return k.psv.loader.setProgress(W)}).then(function(W){return{img:W,xmpPanoData:null}})).then(function(W){var he,ve,De,ut,pt,wt,ns,Qn,is,Xt=W.img,Rt=W.xmpPanoData;typeof _=="function"&&(_=_(Xt));var ei={fullWidth:Ee((he=_)==null?void 0:he.fullWidth,Rt==null?void 0:Rt.fullWidth,Xt.width),fullHeight:Ee((ve=_)==null?void 0:ve.fullHeight,Rt==null?void 0:Rt.fullHeight,Xt.height),croppedWidth:Ee((De=_)==null?void 0:De.croppedWidth,Rt==null?void 0:Rt.croppedWidth,Xt.width),croppedHeight:Ee((ut=_)==null?void 0:ut.croppedHeight,Rt==null?void 0:Rt.croppedHeight,Xt.height),croppedX:Ee((pt=_)==null?void 0:pt.croppedX,Rt==null?void 0:Rt.croppedX,0),croppedY:Ee((wt=_)==null?void 0:wt.croppedY,Rt==null?void 0:Rt.croppedY,0),poseHeading:Ee((ns=_)==null?void 0:ns.poseHeading,Rt==null?void 0:Rt.poseHeading,0),posePitch:Ee((Qn=_)==null?void 0:Qn.posePitch,Rt==null?void 0:Rt.posePitch,0),poseRoll:Ee((is=_)==null?void 0:is.poseRoll,Rt==null?void 0:Rt.poseRoll,0)};(ei.croppedWidth!==Xt.width||ei.croppedHeight!==Xt.height)&&Re(`Invalid panoData, croppedWidth and/or croppedHeight is not coherent with loaded image.
    panoData: `+ei.croppedWidth+"x"+ei.croppedHeight+", image: "+Xt.width+"x"+Xt.height),(_||Rt)&&ei.fullWidth!==ei.fullHeight*2&&Re("Invalid panoData, fullWidth should be twice fullHeight");var Vf=k.__createEquirectangularTexture(Xt,ei);return{panorama:l,texture:Vf,panoData:ei}})},x.__loadXMP=function(l,_){var k=this;return this.psv.textureLoader.loadFile(l,_).then(function(W){return k.__loadBlobAsString(W)}).then(function(W){var he=W.indexOf("<x:xmpmeta"),ve=W.indexOf("</x:xmpmeta>"),De=W.substring(he,ve);return he!==-1&&ve!==-1&&De.includes("GPano:")?{fullWidth:Pe(De,"FullPanoWidthPixels"),fullHeight:Pe(De,"FullPanoHeightPixels"),croppedWidth:Pe(De,"CroppedAreaImageWidthPixels"),croppedHeight:Pe(De,"CroppedAreaImageHeightPixels"),croppedX:Pe(De,"CroppedAreaLeftPixels"),croppedY:Pe(De,"CroppedAreaTopPixels"),poseHeading:Pe(De,"PoseHeadingDegrees"),posePitch:Pe(De,"PosePitchDegrees"),poseRoll:Pe(De,"PoseRollDegrees")}:null})},x.__loadBlobAsString=function(l){return new Promise(function(_,k){var W=new FileReader;W.onload=function(){return _(W.result)},W.onerror=k,W.readAsText(l)})},x.__createEquirectangularTexture=function(l,_){if(_.fullWidth>N.maxTextureWidth||_.croppedWidth!==_.fullWidth||_.croppedHeight!==_.fullHeight){var k=N.getMaxCanvasWidth()/_.fullWidth,W=h({},_);k<1&&(W.fullWidth*=k,W.fullHeight*=k,W.croppedWidth*=k,W.croppedHeight*=k,W.croppedX*=k,W.croppedY*=k);var he=document.createElement("canvas");he.width=W.fullWidth,he.height=W.fullHeight;var ve=he.getContext("2d");return ve.drawImage(l,W.croppedX,W.croppedY,W.croppedWidth,W.croppedHeight),jn(he)}return jn(l)},x.createMesh=function(l){l===void 0&&(l=1);var _=new n.SphereGeometry(S*l,this.SPHERE_SEGMENTS,this.SPHERE_HORIZONTAL_SEGMENTS,-Math.PI/2).scale(-1,1,1),k=new n.MeshBasicMaterial;return new n.Mesh(_,k)},x.setTexture=function(l,_){var k;(k=l.material.map)==null||k.dispose(),l.material.map=_.texture},x.setTextureOpacity=function(l,_){l.material.opacity=_,l.material.transparent=_<1},x.disposeTexture=function(l){var _;(_=l.texture)==null||_.dispose()},y}(o);$.id="equirectangular",$.supportsDownload=!0;var ee=function(){function T(x,M){this.psv=x.psv||x,this.parent=x,this.parent.children.push(this),this.children=[],this.prop={visible:!0},this.container=document.createElement("div"),this.container.className=M,this.parent.container.appendChild(this.container)}var y=T.prototype;return y.destroy=function(){this.parent.container.removeChild(this.container);var M=this.parent.children.indexOf(this);M!==-1&&this.parent.children.splice(M,1),this.children.slice().forEach(function(l){return l.destroy()}),this.children.length=0,delete this.container,delete this.parent,delete this.psv,delete this.prop},y.refreshUi=function(){var M=this;this.children.every(function(l){return l.refreshUi(),M.psv.prop.uiRefresh===!0})},y.toggle=function(){this.isVisible()?this.hide():this.show()},y.hide=function(){this.container.style.display="none",this.prop.visible=!1},y.show=function(){this.container.style.display="",this.prop.visible=!0},y.isVisible=function(){return this.prop.visible},T}(),j=function(T){u(y,T);function y(M,l,_,k){var W;return l===void 0&&(l=""),_===void 0&&(_=!1),k===void 0&&(k=!0),W=T.call(this,M,"psv-button "+l)||this,W.prop=h({},W.prop,{id:W.constructor.id,collapsable:_,enabled:!0,supported:!0,collapsed:!1,active:!1,width:W.container.offsetWidth}),W.constructor.icon&&W.__setIcon(W.constructor.icon),W.prop.id&&W.psv.config.lang[W.prop.id]&&(W.container.title=W.psv.config.lang[W.prop.id]),k&&(W.container.tabIndex=0),W.container.addEventListener("click",function(he){W.prop.enabled&&W.onClick(),he.stopPropagation()}),W.container.addEventListener("keydown",function(he){he.key===Y.Enter&&W.prop.enabled&&(W.onClick(),he.stopPropagation())}),W}var x=y.prototype;return x.checkSupported=function(){var l=this,_=this.isSupported();xe(_)?(_.initial===!1&&(this.hide(),this.prop.supported=!1),_.promise.then(function(k){!l.prop||(l.prop.supported=k,k?l.show():l.hide())})):(this.prop.supported=_,_||this.hide())},x.isSupported=function(){return!0},x.toggleActive=function(l){this.prop.active=l!==void 0?l:!this.prop.active,Le(this.container,"psv-button--active",this.prop.active),this.constructor.iconActive&&this.__setIcon(this.prop.active?this.constructor.iconActive:this.constructor.icon)},x.show=function(l){l===void 0&&(l=!0),this.isVisible()||(this.prop.visible=!0,this.prop.collapsed||(this.container.style.display=""),l&&this.psv.refreshUi("show button "+this.prop.id))},x.hide=function(l){l===void 0&&(l=!0),this.isVisible()&&(this.prop.visible=!1,this.container.style.display="none",l&&this.psv.refreshUi("hide button "+this.prop.id))},x.disable=function(){this.container.classList.add("psv-button--disabled"),this.prop.enabled=!1},x.enable=function(){this.container.classList.remove("psv-button--disabled"),this.prop.enabled=!0},x.collapse=function(){this.prop.collapsed=!0,this.container.style.display="none"},x.uncollapse=function(){this.prop.collapsed=!1,this.prop.visible&&(this.container.style.display="")},x.__setIcon=function(l,_){_===void 0&&(_=this.container),l?(_.innerHTML=l,_.querySelector("svg").classList.add("psv-button-svg")):_.innerHTML=""},x.onClick=function(){throw new s('onClick not implemented for button "'+this.prop.id+'".')},y}(ee);j.id=null,j.groupId=null,j.icon=null,j.iconActive=null;var ae=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 41 41"><path fill="currentColor" d="M40.5 14.1c-.1-.1-1.2-.5-2.898-1-.102 0-.202-.1-.202-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.399 2.7.899.1 0 .2.101.2.199C6.3 34.4 12.9 39 20.5 39c7.602 0 14.102-4.6 16.9-11.1 0-.102.1-.102.199-.2 1.699-.601 2.699-1 2.801-1l.6-.3V14.3l-.5-.2zM6.701 11.5C9.7 7 14.8 4 20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.799-1-8.799-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5zM25.1 20.3L18.7 24c-.3.2-.7 0-.7-.5v-7.4c0-.4.4-.6.7-.4l6.399 3.8c.301.1.301.6.001.8zm9.4 8.901A16.421 16.421 0 0 1 20.5 37c-5.9 0-11.1-3.1-14-7.898-.2-.302.1-.602.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.602-2 .298-.1.5.198.398.499z"/><!--Created by Nick Bluth from the Noun Project--></svg>
`,He=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 41 41"><path fill="currentColor" d="M40.5 14.1c-.1-.1-1.2-.5-2.899-1-.101 0-.2-.1-.2-.2C34.5 6.5 28 2 20.5 2S6.6 6.5 3.7 12.9c0 .1-.1.1-.2.2-1.7.6-2.8 1-2.9 1l-.6.3v12.1l.6.2c.1 0 1.1.4 2.7.9.1 0 .2.1.2.199C6.3 34.4 12.9 39 20.5 39c7.601 0 14.101-4.6 16.9-11.1 0-.101.1-.101.2-.2 1.699-.6 2.699-1 2.8-1l.6-.3V14.3l-.5-.2zM20.5 4c5.8 0 10.9 3 13.8 7.5.2.3-.1.6-.399.5-3.8-1-8.8-2-13.6-2-4.7 0-9.5 1-13.2 2-.3.1-.5-.2-.4-.5C9.7 7 14.8 4 20.5 4zm0 33c-5.9 0-11.1-3.1-14-7.899-.2-.301.1-.601.4-.5 3.9 1 8.9 2.1 13.6 2.1 5 0 9.9-1 13.601-2 .3-.1.5.2.399.5A16.422 16.422 0 0 1 20.5 37zm18.601-12.1c0 .1-.101.3-.2.3-2.5.9-10.4 3.6-18.4 3.6-7.1 0-15.6-2.699-18.3-3.6C2.1 25.2 2 25 2 24.9V16c0-.1.1-.3.2-.3 2.6-.9 10.6-3.6 18.2-3.6 7.5 0 15.899 2.7 18.5 3.6.1 0 .2.2.2.3v8.9z"/><path fill="currentColor" d="M18.7 24l6.4-3.7c.3-.2.3-.7 0-.8l-6.4-3.8c-.3-.2-.7 0-.7.4v7.4c0 .5.4.7.7.5z"/><!--Created by Nick Bluth from the Noun Project--></svg>
`,ke=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-button--hover-scale psv-autorotate-button",!0)||this,l.psv.on(U.AUTOROTATE,d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(U.AUTOROTATE,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case U.AUTOROTATE:this.toggleActive(l.args[0]);break}},x.onClick=function(){this.psv.toggleAutorotate()},y}(j);ke.id="autorotate",ke.icon=He,ke.iconActive=ae;var Ye=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-custom-button",l.collapsable!==!1,l.tabbable!==!1)||this,_.config=l,_.config.id?_.prop.id=_.config.id:_.prop.id="psvButton-"+Math.random().toString(36).substr(2,9),_.config.className&&Oe(_.container,_.config.className),_.config.title&&(_.container.title=_.config.title),_.config.content&&(_.container.innerHTML=_.config.content),_.prop.width=_.container.offsetWidth,_.config.enabled===!1&&_.disable(),_.config.visible===!1&&_.hide(),_}var x=y.prototype;return x.destroy=function(){delete this.config,T.prototype.destroy.call(this)},x.onClick=function(){this.config.onClick&&this.config.onClick.apply(this.psv)},y}(j),Be=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-caption")||this,_.prop=h({},_.prop,{id:_.constructor.id,collapsable:!1,width:0,contentWidth:0}),_.content=document.createElement("div"),_.content.className="psv-caption-content",_.container.appendChild(_.content),_.setCaption(l),_}var x=y.prototype;return x.destroy=function(){delete this.content,T.prototype.destroy.call(this)},x.setCaption=function(l){this.show(),this.content.innerHTML=l,this.prop.contentWidth=l?this.content.offsetWidth:0,this.refreshUi()},x.refreshUi=function(){var l=this.container.offsetWidth;l>=this.prop.contentWidth?this.show():l<this.prop.contentWidth&&this.hide(),this.__refreshButton()},x.hide=function(){this.content.style.display="none",this.prop.visible=!1},x.show=function(){this.content.style.display="",this.prop.visible=!0},x.__refreshButton=function(){var l;(l=this.psv.navbar.getButton(ot.id,!1))==null||l.refreshUi(!0)},y}(ee);Be.id="caption";var it=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 64 64"><path fill="currentColor" d="M28.3 26.1c-1 2.6-1.9 4.8-2.6 7-2.5 7.4-5 14.7-7.2 22-1.3 4.4.5 7.2 4.3 7.8 1.3.2 2.8.2 4.2-.1 8.2-2 11.9-8.6 15.7-15.2l-2.2 2a18.8 18.8 0 0 1-7.4 5.2 2 2 0 0 1-1.6-.2c-.2-.1 0-1 0-1.4l.8-1.8L41.9 28c.5-1.4.9-3 .7-4.4-.2-2.6-3-4.4-6.3-4.4-8.8.2-15 4.5-19.5 11.8-.2.3-.2.6-.3 1.3 3.7-2.8 6.8-6.1 11.8-6.2z"/><circle fill="currentColor" cx="39.3" cy="9.2" r="8.2"/><!--Created by Arafat Uddin from the Noun Project--></svg>
`,Ze=1,je=2,ot=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-button--hover-scale psv-description-button")||this,l.prop=h({},l.prop,{mode:null}),l.psv.on(U.HIDE_NOTIFICATION,d(l)),l.psv.on(U.SHOW_NOTIFICATION,d(l)),l.psv.on(U.CLOSE_PANEL,d(l)),l.psv.on(U.OPEN_PANEL,d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(U.HIDE_NOTIFICATION,this),this.psv.off(U.SHOW_NOTIFICATION,this),this.psv.off(U.CLOSE_PANEL,this),this.psv.off(U.OPEN_PANEL,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){if(!!this.prop.mode){var _=!1;switch(l.type){case U.HIDE_NOTIFICATION:_=this.prop.mode===Ze;break;case U.SHOW_NOTIFICATION:_=this.prop.mode===Ze&&l.args[0]!==L.DESCRIPTION;break;case U.CLOSE_PANEL:_=this.prop.mode===je;break;case U.OPEN_PANEL:_=this.prop.mode===je&&l.args[0]!==L.DESCRIPTION;break}_&&(this.toggleActive(!1),this.prop.mode=null)}},x.hide=function(l){T.prototype.hide.call(this,l),this.prop.mode&&this.__close()},x.refreshUi=function(l){if(l===void 0&&(l=!1),l){var _=this.psv.navbar.getButton(Be.id,!1),k=_&&!_.isVisible(),W=!!this.psv.config.description;k||W?this.show(!1):this.hide(!1)}},x.onClick=function(){this.prop.mode?this.__close():this.__open()},x.__close=function(){switch(this.prop.mode){case Ze:this.psv.notification.hide(L.DESCRIPTION);break;case je:this.psv.panel.hide(L.DESCRIPTION);break}},x.__open=function(){this.toggleActive(!0),this.psv.config.description?(this.prop.mode=je,this.psv.panel.show({id:L.DESCRIPTION,content:(this.psv.config.caption?"<p>"+this.psv.config.caption+"</p>":"")+this.psv.config.description})):(this.prop.mode=Ze,this.psv.notification.show({id:L.DESCRIPTION,content:this.psv.config.caption}))},y}(j);ot.id="description",ot.icon=it;var Dn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M83.3 35.6h-17V3H32.2v32.6H16.6l33.6 32.7 33-32.7z"/><path fill="currentColor" d="M83.3 64.2v16.3H16.6V64.2H-.1v32.6H100V64.2H83.3z"/><!--Created by Michael Zenaty from the Noun Project--></svg>
`,xn=function(T){u(y,T);function y(M){return T.call(this,M,"psv-button--hover-scale psv-download-button",!0)||this}var x=y.prototype;return x.onClick=function(){var l=this,_=document.createElement("a");_.href=this.psv.config.downloadUrl||this.psv.config.panorama,_.download=_.href.split("/").pop(),this.psv.container.appendChild(_),_.click(),setTimeout(function(){l.psv.container.removeChild(_)},100)},x.refreshUi=function(){var l=this.psv.adapter.constructor.supportsDownload||this.psv.config.downloadUrl;l&&!this.prop.visible?this.show():!l&&this.prop.visible&&this.hide()},y}(j);xn.id="download",xn.icon=Dn;var Jn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M100 40H87.1V18.8h-21V6H100zM100 93.2H66V80.3h21.1v-21H100zM34 93.2H0v-34h12.9v21.1h21zM12.9 40H0V6h34v12.9H12.8z"/><!--Created by Garrett Knoll from the Noun Project--></svg>
`,nn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M66 7h13v21h21v13H66zM66 60.3h34v12.9H79v21H66zM0 60.3h34v34H21V73.1H0zM21 7h13v34H0V28h21z"/><!--Created by Garrett Knoll from the Noun Project--></svg>
`,et=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-button--hover-scale psv-fullscreen-button")||this,l.psv.on(U.FULLSCREEN_UPDATED,d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(U.FULLSCREEN_UPDATED,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case U.FULLSCREEN_UPDATED:this.toggleActive(l.args[0]);break}},x.onClick=function(){this.psv.toggleFullscreen()},y}(j);et.id="fullscreen",et.icon=Jn,et.iconActive=nn;var Nn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 10 80 80"><g fill="currentColor"><circle r="10" cx="20" cy="20"/><circle r="10" cx="50" cy="20"/><circle r="10" cx="80" cy="20"/><circle r="10" cx="20" cy="50"/><circle r="10" cx="50" cy="50"/><circle r="10" cx="80" cy="50"/><circle r="10" cx="20" cy="80"/><circle r="10" cx="50" cy="80"/><circle r="10" cx="80" cy="80"/></g><!-- Created by Richard Kun\xE1k from the Noun Project--></svg>
`,ct=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-button--hover-scale psv-menu-button")||this,l.psv.on(U.OPEN_PANEL,d(l)),l.psv.on(U.CLOSE_PANEL,d(l)),T.prototype.hide.call(d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(U.OPEN_PANEL,this),this.psv.off(U.CLOSE_PANEL,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case U.OPEN_PANEL:this.toggleActive(l.args[0]===L.MENU);break;case U.CLOSE_PANEL:this.toggleActive(!1);break}},x.hide=function(l){T.prototype.hide.call(this,l),this.__hideMenu()},x.show=function(l){T.prototype.show.call(this,l),this.prop.active&&this.__showMenu()},x.onClick=function(){this.prop.active?this.__hideMenu():this.__showMenu()},x.__showMenu=function(){var l=this;this.psv.panel.show({id:L.MENU,content:y.MENU_TEMPLATE(this.parent.collapsed,this.psv,ne(y.BUTTON_DATA)),noMargin:!0,clickHandler:function(k){var W=k.target?ze(k.target,"li"):void 0,he=W?W.dataset[y.BUTTON_DATA]:void 0;he&&(l.parent.getButton(he).onClick(),l.__hideMenu())}})},x.__hideMenu=function(){this.psv.panel.hide(L.MENU)},y}(j);ct.id="menu",ct.icon=Nn,ct.BUTTON_DATA="psvButton",ct.MENU_TEMPLATE=function(T,y,x){return`
<div class="psv-panel-menu psv-panel-menu--stripped">
  <h1 class="psv-panel-menu-title">`+Nn+" "+y.config.lang.menu+`</h1>
  <ul class="psv-panel-menu-list">
    `+T.map(function(M){return`
    <li data-`+x+'="'+M.prop.id+`" class="psv-panel-menu-item" tabindex="0">
      <span class="psv-panel-menu-item-icon">`+M.container.innerHTML+`</span>
      <span class="psv-panel-menu-item-label">`+M.container.title+`</span>
    </li>
    `}).join("")+`
  </ul>
</div>
`};var rn=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="40 40 432 432"><g transform="rotate(0, 256, 256)"><path fill="currentColor" d="M425.23 210.55H227.39a5 5 0 01-3.53-8.53l56.56-56.57a45.5 45.5 0 000-64.28 45.15 45.15 0 00-32.13-13.3 45.15 45.15 0 00-32.14 13.3L41.32 256l174.83 174.83a45.15 45.15 0 0032.14 13.3 45.15 45.15 0 0032.13-13.3 45.5 45.5 0 000-64.28l-56.57-56.57a5 5 0 013.54-8.53h197.84c25.06 0 45.45-20.39 45.45-45.45s-20.4-45.45-45.45-45.45z"/></g><!-- Created by Flatart from the Noun Project --></svg>
`,sn=function(){function T(x){x===void 0&&(x=200),this.delay=x,this.time=0,this.timeout=null}var y=T.prototype;return y.down=function(){this.timeout&&(clearTimeout(this.timeout),this.timeout=null),this.time=new Date().getTime()},y.up=function(M){var l=this;if(!!this.time){var _=new Date().getTime()-this.time;_<this.delay?this.timeout=setTimeout(function(){M(),l.timeout=null,l.time=0},this.delay):(M(),this.time=0)}},T}();function Mn(T){var y=0;switch(T){case"up":y=90;break;case"right":y=180;break;case"down":y=-90;break;default:y=0;break}return rn.replace("rotate(0","rotate("+y)}var On=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-button--hover-scale psv-move-button")||this,_.container.title=_.psv.config.lang.move,_.prop=h({},_.prop,{value:l,handler:new sn}),_.container.addEventListener("mousedown",d(_)),_.container.addEventListener("keydown",d(_)),_.container.addEventListener("keyup",d(_)),_.psv.container.addEventListener("mouseup",d(_)),_.psv.container.addEventListener("touchend",d(_)),_}var x=y.prototype;return x.destroy=function(){this.__onMouseUp(),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"mousedown":this.__onMouseDown();break;case"mouseup":this.__onMouseUp();break;case"touchend":this.__onMouseUp();break;case"keydown":l.key===Y.Enter&&this.__onMouseDown();break;case"keyup":l.key===Y.Enter&&this.__onMouseUp();break}},x.isSupported=function(){return{initial:!0,promise:N.isTouchEnabled.then(function(l){return!l})}},x.onClick=function(){},x.__onMouseDown=function(){!this.prop.enabled||(this.psv.__stopAll(),this.psv.dynamics.position.roll(this.prop.value),this.prop.handler.down())},x.__onMouseUp=function(){var l=this;!this.prop.enabled||this.prop.handler.up(function(){return l.psv.dynamics.position.stop()})},y}(j);On.groupId="move";var Et=function(T){u(y,T);function y(x){return T.call(this,x,{latitude:!0})||this}return y}(On);Et.id="moveDown",Et.icon=Mn("down");var Fn=function(T){u(y,T);function y(x){return T.call(this,x,{longitude:!0})||this}return y}(On);Fn.id="moveLeft",Fn.icon=Mn("left");var Ti=function(T){u(y,T);function y(x){return T.call(this,x,{longitude:!1})||this}return y}(On);Ti.id="moveRight",Ti.icon=Mn("right");var Bt=function(T){u(y,T);function y(x){return T.call(this,x,{latitude:!1})||this}return y}(On);Bt.id="moveUp",Bt.icon=Mn("up");var wa=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-button--hover-scale psv-zoom-button")||this,_.prop=h({},_.prop,{value:l,handler:new sn}),_.container.addEventListener("mousedown",d(_)),_.container.addEventListener("keydown",d(_)),_.container.addEventListener("keyup",d(_)),_.psv.container.addEventListener("mouseup",d(_)),_.psv.container.addEventListener("touchend",d(_)),_}var x=y.prototype;return x.destroy=function(){this.__onMouseUp(),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"mousedown":this.__onMouseDown();break;case"mouseup":this.__onMouseUp();break;case"touchend":this.__onMouseUp();break;case"keydown":l.key===Y.Enter&&this.__onMouseDown();break;case"keyup":l.key===Y.Enter&&this.__onMouseUp();break}},x.isSupported=function(){return{initial:!0,promise:N.isTouchEnabled.then(function(l){return!l})}},x.onClick=function(){},x.__onMouseDown=function(){!this.prop.enabled||(this.psv.dynamics.zoom.roll(this.prop.value),this.prop.handler.down())},x.__onMouseUp=function(){var l=this;!this.prop.enabled||this.prop.handler.up(function(){return l.psv.dynamics.zoom.stop()})},y}(j);wa.groupId="zoom";var Tf=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill="currentColor" d="M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z"/><path fill="currentColor" d="M8.728 4.009H6.744v2.737H4.006V8.73h2.738v2.736h1.984V8.73h2.737V6.746H8.728z"/><!--Created by Ryan Canning from the Noun Project--></svg>
`,ba=function(T){u(y,T);function y(x){return T.call(this,x,!1)||this}return y}(wa);ba.id="zoomIn",ba.icon=Tf;var Sf=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20"><path fill="currentColor" d="M14.043 12.22a7.738 7.738 0 1 0-1.823 1.822l4.985 4.985c.503.504 1.32.504 1.822 0a1.285 1.285 0 0 0 0-1.822l-4.984-4.985zm-6.305 1.043a5.527 5.527 0 1 1 0-11.053 5.527 5.527 0 0 1 0 11.053z"/><path fill="currentColor" d="M4.006 6.746h7.459V8.73H4.006z"/><!--Created by Ryan Canning from the Noun Project--></svg>
`,Ta=function(T){u(y,T);function y(x){return T.call(this,x,!0)||this}return y}(wa);Ta.id="zoomOut",Ta.icon=Sf;var Sa=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-zoom-range",!1,!1)||this,l.prop=h({},l.prop,{mediaMinWidth:0}),l.zoomRange=document.createElement("div"),l.zoomRange.className="psv-zoom-range-line",l.container.appendChild(l.zoomRange),l.zoomValue=document.createElement("div"),l.zoomValue.className="psv-zoom-range-handle",l.zoomRange.appendChild(l.zoomValue),l.slider=new bi({container:l.container,direction:bi.HORIZONTAL,onUpdate:function(k){return l.__onSliderUpdate(k)}}),l.prop.mediaMinWidth=parseInt(se(l.container,"maxWidth"),10),l.psv.on(U.ZOOM_UPDATED,d(l)),l.psv.prop.ready?l.__moveZoomValue(l.psv.getZoomLevel()):l.psv.once(U.READY,d(l)),l.refreshUi(),l}var x=y.prototype;return x.destroy=function(){this.slider.destroy(),delete this.zoomRange,delete this.zoomValue,this.psv.off(U.ZOOM_UPDATED,this),T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case U.ZOOM_UPDATED:this.__moveZoomValue(l.args[0]);break;case U.READY:this.__moveZoomValue(this.psv.getZoomLevel());break}},x.isSupported=function(){return{initial:!0,promise:N.isTouchEnabled.then(function(l){return!l})}},x.refreshUi=function(){this.prop.supported&&(this.psv.prop.size.width<=this.prop.mediaMinWidth&&this.prop.visible?this.hide():this.psv.prop.size.width>this.prop.mediaMinWidth&&!this.prop.visible&&this.show())},x.onClick=function(){},x.__moveZoomValue=function(l){this.zoomValue.style.left=l/100*this.zoomRange.offsetWidth-this.zoomValue.offsetWidth/2+"px"},x.__onSliderUpdate=function(l){l.mousedown&&this.psv.zoom(l.value*100)},y}(j);Sa.id="zoomRange",Sa.groupId="zoom";var Qr=function(T){u(y,T);function y(M){var l;return l=T.call(this)||this,l.psv=M,l}var x=y.prototype;return x.init=function(){},x.destroy=function(){delete this.psv},y}(i.EventEmitter);Qr.id=null;var cn,hn={panorama:null,container:null,adapter:null,plugins:[],caption:null,description:null,downloadUrl:null,loadingImg:null,loadingTxt:"Loading...",size:null,fisheye:!1,minFov:30,maxFov:90,defaultZoomLvl:50,defaultLong:0,defaultLat:0,sphereCorrection:null,moveSpeed:1,zoomSpeed:1,autorotateDelay:null,autorotateSpeed:"2rpm",autorotateLat:null,moveInertia:!0,mousewheel:!0,mousemove:!0,captureCursor:!1,mousewheelCtrlKey:!1,touchmoveTwoFingers:!1,useXmpData:!0,panoData:null,requestHeaders:null,canvasBackground:"#000",withCredentials:!1,navbar:["autorotate","zoom","move","download","description","caption","fullscreen"],lang:{autorotate:"Automatic rotation",zoom:"Zoom",zoomOut:"Zoom out",zoomIn:"Zoom in",move:"Move",download:"Download",fullscreen:"Fullscreen",menu:"Menu",twoFingers:"Use two fingers to navigate",ctrlZoom:"Use ctrl + scroll to zoom the image",loadError:"The panorama can't be loaded"},keyboard:(cn={},cn[Y.ArrowUp]=V.ROTATE_LAT_UP,cn[Y.ArrowDown]=V.ROTATE_LAT_DOWN,cn[Y.ArrowRight]=V.ROTATE_LONG_RIGHT,cn[Y.ArrowLeft]=V.ROTATE_LONG_LEFT,cn[Y.PageUp]=V.ZOOM_IN,cn[Y.PageDown]=V.ZOOM_OUT,cn[Y.Plus]=V.ZOOM_IN,cn[Y.Minus]=V.ZOOM_OUT,cn[Y.Space]=V.TOGGLE_AUTOROTATE,cn)},Hc={panorama:"Use setPanorama method to change the panorama",panoData:"Use setPanorama method to change the panorama",container:"Cannot change viewer container",adapter:"Cannot change adapter",plugins:"Cannot change plugins"},qs={zoomButtonIncrement:"zoomButtonIncrement is deprecated, use zoomSpeed",mousewheelSpeed:"mousewheelSpeed is deprecated, use zoomSpeed",sphereCorrectionReorder:"sphereCorrectionReorder is deprecated"},Ys={container:function(y){if(!y)throw new s("No value given for container.");return y},adapter:function(y){if(y?Array.isArray(y)?y=[q(y[0],o),y[1]]:y=[q(y,o)]:y=[$],!y[0])throw new s("Un undefined value with given for adapter.");return y},defaultLong:function(y){return tn(y)},defaultLat:function(y){return tn(y,!0)},minFov:function(y,x){return x.maxFov<y&&(Re("maxFov cannot be lower than minFov"),y=x.maxFov),be(y,1,179)},maxFov:function(y,x){return y<x.minFov&&(y=x.minFov),be(y,1,179)},lang:function(y){return Array.isArray(y.twoFingers)&&(Re("lang.twoFingers must not be an array"),y.twoFingers=y.twoFingers[0]),h({},hn.lang,y)},keyboard:function(y){return y===!0?Ie(hn.keyboard):y},autorotateLat:function(y,x){return tn(y===null?x.defaultLat:y,!0)},autorotateSpeed:function(y){return Wt(y)},fisheye:function(y){return y===!0?1:y===!1?0:y},plugins:function(y){return y.map(function(x){if(Array.isArray(x)?x=[q(x[0],Qr),x[1]]:x=[q(x,Qr)],!x[0])throw new s("Un undefined value was given for plugins.");return x})}};function Af(T){var y=Ie(hn);we(y,T);var x={};return Ce(y,function(M,l){if(qs[l]){Re(qs[l]);return}if(!Object.prototype.hasOwnProperty.call(hn,l))throw new s("Unknown option "+l);Ys[l]?x[l]=Ys[l](M,y):x[l]=M}),x}var Aa={},es={};function zc(T,y){if(!T.id)throw new s("Button ID is required");if(Aa[T.id]=T,T.groupId&&(es[T.groupId]=es[T.groupId]||[],es[T.groupId].push(T)),typeof y=="string")switch(y){case"start":hn.navbar.unshift(T.id);break;case"end":hn.navbar.push(T.id);break;default:var x=y.split(":"),M=x[0],l=x[1];hn.navbar.splice(hn.navbar.indexOf(M)+(l==="right"?1:0),0,T.id)}}[ke,Ta,Sa,ba,ot,xn,et,Fn,Ti,Bt,Et].forEach(zc);var Rf=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-navbar")||this,l.children=[],l.collapsed=[],l}var x=y.prototype;return x.setButtons=function(l){var _=this;this.children.slice().forEach(function(W){return W.destroy()}),this.children.length=0;var k=this.__cleanButtons(l);k.indexOf(Be.id)!==-1&&k.indexOf(ot.id)===-1&&k.splice(k.indexOf(Be.id),0,ot.id),k.forEach(function(W){if(typeof W=="object")new Ye(_,W);else if(Aa[W])new Aa[W](_);else if(es[W])es[W].forEach(function(he){return new he(_)});else if(W===Be.id)new Be(_,_.psv.config.caption);else throw new s("Unknown button "+W)}),new ct(this),this.children.forEach(function(W){typeof W.checkSupported=="function"&&W.checkSupported()})},x.setCaption=function(l){var _=this.getButton(Be.id,!1);_==null||_.setCaption(l)},x.getButton=function(l,_){_===void 0&&(_=!0);var k=null;return this.children.some(function(W){return W.prop.id===l?(k=W,!0):!1}),!k&&_&&Re('button "'+l+'" not found in the navbar'),k},x.show=function(){this.container.classList.add("psv-navbar--open"),this.prop.visible=!0},x.hide=function(){this.container.classList.remove("psv-navbar--open"),this.prop.visible=!1},x.refreshUi=function(){if(T.prototype.refreshUi.call(this),this.psv.prop.uiRefresh===!0){var l=this.container.offsetWidth,_=0,k=[],W=[];if(this.children.forEach(function(ve){ve.prop.visible&&(_+=ve.prop.width,k.push(ve),ve.prop.collapsable&&W.push(ve))}),!k.length)return;l<_&&W.length>0?(W.forEach(function(ve){return ve.collapse()}),this.collapsed=W,this.getButton(ct.id).show(!1)):l>=_&&this.collapsed.length>0&&(this.collapsed.forEach(function(ve){return ve.uncollapse()}),this.collapsed=[],this.getButton(ct.id).hide(!1));var he=this.getButton(Be.id,!1);he&&he.refreshUi()}},x.__cleanButtons=function(l){return l===!0?Ie(hn.navbar):typeof l=="string"?l.split(/[ ,]/):l||[]},y}(ee),Cf=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-loader-container")||this,l.loader=document.createElement("div"),l.loader.className="psv-loader",l.container.appendChild(l.loader),l.canvas=document.createElement("canvas"),l.canvas.className="psv-loader-canvas",l.canvas.width=l.loader.clientWidth*N.pixelRatio,l.canvas.height=l.loader.clientWidth*N.pixelRatio,l.loader.appendChild(l.canvas),l.prop=h({},l.prop,{tickness:(l.loader.offsetWidth-l.loader.clientWidth)/2*N.pixelRatio,current:null}),l.refreshUi(),l.hide(),l}var x=y.prototype;return x.destroy=function(){delete this.loader,delete this.canvas,T.prototype.destroy.call(this)},x.refreshUi=function(){if(this.prop.current!==(this.psv.config.loadingImg||this.psv.config.loadingTxt)){this.prop.current&&this.loader.removeChild(this.loader.lastChild);var l;if(this.psv.config.loadingImg?(l=document.createElement("img"),l.className="psv-loader-image",l.src=this.psv.config.loadingImg):this.psv.config.loadingTxt&&(l=document.createElement("div"),l.className="psv-loader-text",l.innerHTML=this.psv.config.loadingTxt),l){var _=Math.round(Math.sqrt(2*Math.pow((this.canvas.width/2-this.prop.tickness/2)/N.pixelRatio,2)));l.style.maxWidth=_+"px",l.style.maxHeight=_+"px",this.loader.appendChild(l)}this.prop.current=this.psv.config.loadingImg||this.psv.config.loadingTxt}},x.setProgress=function(l){var _=this.canvas.getContext("2d");_.clearRect(0,0,this.canvas.width,this.canvas.height),_.lineWidth=this.prop.tickness,_.strokeStyle=se(this.loader,"color"),_.beginPath(),_.arc(this.canvas.width/2,this.canvas.height/2,this.canvas.width/2-this.prop.tickness/2,-Math.PI/2,be(l,0,100)/100*2*Math.PI-Math.PI/2),_.stroke(),this.psv.trigger(U.LOAD_PROGRESS,Math.round(l))},y}(ee),Lf=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-notification")||this,l.prop=h({},l.prop,{visible:!1,contentId:void 0,timeout:null}),l.content=document.createElement("div"),l.content.className="psv-notification-content",l.container.appendChild(l.content),l.content.addEventListener("click",function(){return l.hide()}),l}var x=y.prototype;return x.destroy=function(){delete this.content,T.prototype.destroy.call(this)},x.isVisible=function(l){return this.prop.visible&&(!l||!this.prop.contentId||this.prop.contentId===l)},x.toggle=function(){throw new s("Notification cannot be toggled")},x.show=function(l){var _=this;this.prop.timeout&&(clearTimeout(this.prop.timeout),this.prop.timeout=null),typeof l=="string"&&(l={content:l}),this.prop.contentId=l.id,this.content.innerHTML=l.content,this.container.classList.add("psv-notification--visible"),this.prop.visible=!0,this.psv.trigger(U.SHOW_NOTIFICATION,l.id),l.timeout&&(this.prop.timeout=setTimeout(function(){return _.hide(l.id)},l.timeout))},x.hide=function(l){if(this.isVisible(l)){var _=this.prop.contentId;this.container.classList.remove("psv-notification--visible"),this.prop.visible=!1,this.prop.contentId=void 0,this.psv.trigger(U.HIDE_NOTIFICATION,_)}},y}(ee),Pf=function(T){u(y,T);function y(M){var l;return l=T.call(this,M,"psv-overlay")||this,l.prop=h({},l.prop,{contentId:void 0,dissmisable:!0}),l.image=document.createElement("div"),l.image.className="psv-overlay-image",l.container.appendChild(l.image),l.text=document.createElement("div"),l.text.className="psv-overlay-text",l.container.appendChild(l.text),l.subtext=document.createElement("div"),l.subtext.className="psv-overlay-subtext",l.container.appendChild(l.subtext),l.psv.on(U.CLICK,d(l)),l.psv.on(U.KEY_PRESS,d(l)),T.prototype.hide.call(d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(U.CLICK,this),this.psv.off(U.KEY_PRESS,this),delete this.image,delete this.text,delete this.subtext,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case U.CLICK:this.isVisible()&&this.prop.dissmisable&&(this.hide(),l.stopPropagation());break;case U.KEY_PRESS:this.isVisible()&&this.prop.dissmisable&&l.args[0]===Y.Escape&&(this.hide(),l.preventDefault());break}},x.isVisible=function(l){return this.prop.visible&&(!l||!this.prop.contentId||this.prop.contentId===l)},x.toggle=function(){throw new s("Overlay cannot be toggled")},x.show=function(l){typeof l=="string"&&(l={text:l}),this.prop.contentId=l.id,this.prop.dissmisable=l.dissmisable!==!1,this.image.innerHTML=l.image||"",this.text.innerHTML=l.text||"",this.subtext.innerHTML=l.subtext||"",T.prototype.show.call(this),this.psv.trigger(U.SHOW_OVERLAY,l.id)},x.hide=function(l){if(this.isVisible(l)){var _=this.prop.contentId;T.prototype.hide.call(this),this.prop.contentId=void 0,this.psv.trigger(U.HIDE_OVERLAY,_)}},y}(ee),If=200,Df=function(T){u(y,T);function y(M){var l;l=T.call(this,M,"psv-panel")||this,l.prop=h({},l.prop,{visible:!1,contentId:void 0,mouseX:0,mouseY:0,mousedown:!1,clickHandler:null,keyHandler:null,width:{}});var _=document.createElement("div");_.className="psv-panel-resizer",l.container.appendChild(_);var k=document.createElement("div");return k.className="psv-panel-close-button",l.container.appendChild(k),l.content=document.createElement("div"),l.content.className="psv-panel-content",l.container.appendChild(l.content),l.container.addEventListener(N.mouseWheelEvent,function(W){return W.stopPropagation()}),k.addEventListener("click",function(){return l.hide()}),_.addEventListener("mousedown",d(l)),_.addEventListener("touchstart",d(l)),l.psv.container.addEventListener("mouseup",d(l)),l.psv.container.addEventListener("touchend",d(l)),l.psv.container.addEventListener("mousemove",d(l)),l.psv.container.addEventListener("touchmove",d(l)),l.psv.on(U.KEY_PRESS,d(l)),l}var x=y.prototype;return x.destroy=function(){this.psv.off(U.KEY_PRESS,this),this.psv.container.removeEventListener("mousemove",this),this.psv.container.removeEventListener("touchmove",this),this.psv.container.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchend",this),delete this.prop,delete this.content,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"mousedown":this.__onMouseDown(l);break;case"touchstart":this.__onTouchStart(l);break;case"mousemove":this.__onMouseMove(l);break;case"touchmove":this.__onTouchMove(l);break;case"mouseup":this.__onMouseUp(l);break;case"touchend":this.__onMouseUp(l);break;case U.KEY_PRESS:this.isVisible()&&l.args[0]===Y.Escape&&(this.hide(),l.preventDefault());break}},x.isVisible=function(l){return this.prop.visible&&(!l||!this.prop.contentId||this.prop.contentId===l)},x.toggle=function(){throw new s("Panel cannot be toggled")},x.show=function(l){var _=this,k=this.isVisible(l.id);typeof l=="string"&&(l={content:l}),this.prop.contentId=l.id,this.prop.visible=!0,this.prop.clickHandler&&(this.content.removeEventListener("click",this.prop.clickHandler),this.content.removeEventListener("keydown",this.prop.keyHandler),this.prop.clickHandler=null,this.prop.keyHandler=null),l.id&&this.prop.width[l.id]?this.container.style.width=this.prop.width[l.id]:l.width?this.container.style.width=l.width:this.container.style.width=null,this.content.innerHTML=l.content,this.content.scrollTop=0,this.container.classList.add("psv-panel--open"),Le(this.content,"psv-panel-content--no-margin",l.noMargin===!0),l.clickHandler&&(this.prop.clickHandler=l.clickHandler,this.prop.keyHandler=function(W){W.key===Y.Enter&&l.clickHandler(W)},this.content.addEventListener("click",this.prop.clickHandler),this.content.addEventListener("keydown",this.prop.keyHandler),k||setTimeout(function(){var W;(W=_.content.querySelector("a,button,[tabindex]"))==null||W.focus()},300)),this.psv.trigger(U.OPEN_PANEL,l.id)},x.hide=function(l){if(this.isVisible(l)){var _=this.prop.contentId;this.prop.visible=!1,this.prop.contentId=void 0,this.content.innerHTML=null,this.container.classList.remove("psv-panel--open"),this.prop.clickHandler&&(this.content.removeEventListener("click",this.prop.clickHandler),this.prop.clickHandler=null),this.psv.trigger(U.CLOSE_PANEL,_)}},x.__onMouseDown=function(l){l.stopPropagation(),this.__startResize(l)},x.__onTouchStart=function(l){l.stopPropagation(),this.__startResize(l.changedTouches[0])},x.__onMouseUp=function(l){this.prop.mousedown&&(l.stopPropagation(),this.prop.mousedown=!1,this.content.classList.remove("psv-panel-content--no-interaction"))},x.__onMouseMove=function(l){this.prop.mousedown&&(l.stopPropagation(),this.__resize(l))},x.__onTouchMove=function(l){this.prop.mousedown&&this.__resize(l.touches[0])},x.__startResize=function(l){this.prop.mouseX=l.clientX,this.prop.mouseY=l.clientY,this.prop.mousedown=!0,this.content.classList.add("psv-panel-content--no-interaction")},x.__resize=function(l){var _=l.clientX,k=l.clientY,W=Math.max(If,this.container.offsetWidth-(_-this.prop.mouseX))+"px";this.prop.contentId&&(this.prop.width[this.prop.contentId]=W),this.container.style.width=W,this.prop.mouseX=_,this.prop.mouseY=k},y}(ee),Nf=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="15 15 70 70"><path fill="currentColor" d="M50,16.2c-18.6,0-33.8,15.1-33.8,33.8S31.4,83.7,50,83.7S83.8,68.6,83.8,50S68.6,16.2,50,16.2z M50,80.2c-16.7,0-30.2-13.6-30.2-30.2S33.3,19.7,50,19.7S80.3,33.3,80.3,50S66.7,80.2,50,80.2z"/><rect fill="currentColor" x="48" y="31.7" width="4" height="28"/><rect fill="currentColor" x="48" y="63.2" width="4" height="5"/><!--Created by Shastry from the Noun Project--></svg>
`,ts=function(){function T(x){this.psv=x,this.config=x.config,this.prop=x.prop}var y=T.prototype;return y.destroy=function(){delete this.psv,delete this.config,delete this.prop},T}(),Ra=new n.Vector2,Un=new n.Vector3,Zs=new n.Euler(0,0,0,"ZXY"),Of=function(T){u(y,T);function y(M){return T.call(this,M)||this}var x=y.prototype;return x.fovToZoomLevel=function(l){var _=Math.round((l-this.config.minFov)/(this.config.maxFov-this.config.minFov)*100);return _-2*(_-50)},x.zoomLevelToFov=function(l){return this.config.maxFov+l/100*(this.config.minFov-this.config.maxFov)},x.vFovToHFov=function(l){return n.Math.radToDeg(2*Math.atan(Math.tan(n.Math.degToRad(l)/2)*this.prop.aspect))},x.speedToDuration=function(l,_){if(!l||typeof l!="number"){var k=l?Wt(l):this.config.autorotateSpeed;return _/Math.abs(k)*1e3}else return Math.abs(l)},x.textureCoordsToSphericalCoords=function(l){var _=this.prop.panoData;if(!_)throw new s("Current adapter does not support texture coordinates.");var k=(l.x+_.croppedX)/_.fullWidth*Math.PI*2,W=(l.y+_.croppedY)/_.fullHeight*Math.PI,he={longitude:k>=Math.PI?k-Math.PI:k+Math.PI,latitude:Math.PI/2-W};return!Zs.equals(this.psv.renderer.mesh.rotation)||!Zs.equals(this.psv.renderer.meshContainer.rotation)?(this.sphericalCoordsToVector3(he,Un),Un.applyEuler(this.psv.renderer.mesh.rotation),Un.applyEuler(this.psv.renderer.meshContainer.rotation),this.vector3ToSphericalCoords(Un)):he},x.sphericalCoordsToTextureCoords=function(l){var _=this.prop.panoData;if(!_)throw new s("Current adapter does not support texture coordinates.");(!Zs.equals(this.psv.renderer.mesh.rotation)||!Zs.equals(this.psv.renderer.meshContainer.rotation))&&(this.sphericalCoordsToVector3(l,Un),wi(Un,this.psv.renderer.meshContainer.rotation),wi(Un,this.psv.renderer.mesh.rotation),l=this.vector3ToSphericalCoords(Un));var k=l.longitude/Math.PI/2*_.fullWidth,W=l.latitude/Math.PI*_.fullHeight;return{x:Math.round(l.longitude<Math.PI?k+_.fullWidth/2:k-_.fullWidth/2)-_.croppedX,y:Math.round(_.fullHeight/2-W)-_.croppedY}},x.sphericalCoordsToVector3=function(l,_){return _||(_=new n.Vector3),_.x=S*-Math.cos(l.latitude)*Math.sin(l.longitude),_.y=S*Math.sin(l.latitude),_.z=S*Math.cos(l.latitude)*Math.cos(l.longitude),_},x.vector3ToSphericalCoords=function(l){var _=Math.acos(l.y/Math.sqrt(l.x*l.x+l.y*l.y+l.z*l.z)),k=Math.atan2(l.x,l.z);return{longitude:k<0?-k:Math.PI*2-k,latitude:Math.PI/2-_}},x.viewerCoordsToVector3=function(l){var _=this.getIntersections(l).filter(function(k){return k.object.userData[O]});return _?_.point:null},x.vector3ToViewerCoords=function(l){var _=l.clone();return _.project(this.psv.renderer.camera),{x:Math.round((_.x+1)/2*this.prop.size.width),y:Math.round((1-_.y)/2*this.prop.size.height)}},x.sphericalCoordsToViewerCoords=function(l){return this.vector3ToViewerCoords(this.sphericalCoordsToVector3(l,Un))},x.getIntersections=function(l){return Ra.x=2*l.x/this.prop.size.width-1,Ra.y=-2*l.y/this.prop.size.height+1,this.psv.renderer.raycaster.setFromCamera(Ra,this.psv.renderer.camera),this.psv.renderer.raycaster.intersectObjects(this.psv.renderer.scene.children,!0).filter(function(_){return!!_.object.userData})},x.cleanPosition=function(l){return l.x!==void 0&&l.y!==void 0?this.textureCoordsToSphericalCoords(l):{longitude:tn(l.longitude),latitude:tn(l.latitude,!0)}},x.cleanSphereCorrection=function(l){return{pan:tn((l==null?void 0:l.pan)||0),tilt:tn((l==null?void 0:l.tilt)||0,!0),roll:tn((l==null?void 0:l.roll)||0,!0,!1)}},x.cleanPanoramaPose=function(l){return{pan:n.Math.degToRad((l==null?void 0:l.poseHeading)||0),tilt:n.Math.degToRad((l==null?void 0:l.posePitch)||0),roll:n.Math.degToRad((l==null?void 0:l.poseRoll)||0)}},y}(ts),Ff=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 100 100"><path fill="currentColor" d="M33.38 33.2a1.96 1.96 0 0 0 1.5-3.23 10.61 10.61 0 0 1 7.18-17.51c.7-.06 1.31-.49 1.61-1.12a13.02 13.02 0 0 1 11.74-7.43c7.14 0 12.96 5.8 12.96 12.9 0 3.07-1.1 6.05-3.1 8.38-.7.82-.61 2.05.21 2.76.83.7 2.07.6 2.78-.22a16.77 16.77 0 0 0 4.04-10.91C72.3 7.54 64.72 0 55.4 0a16.98 16.98 0 0 0-14.79 8.7 14.6 14.6 0 0 0-12.23 14.36c0 3.46 1.25 6.82 3.5 9.45.4.45.94.69 1.5.69m45.74 43.55a22.13 22.13 0 0 1-5.23 12.4c-4 4.55-9.53 6.86-16.42 6.86-12.6 0-20.1-10.8-20.17-10.91a1.82 1.82 0 0 0-.08-.1c-5.3-6.83-14.55-23.82-17.27-28.87-.05-.1 0-.21.02-.23a6.3 6.3 0 0 1 8.24 1.85l9.38 12.59a1.97 1.97 0 0 0 3.54-1.17V25.34a4 4 0 0 1 1.19-2.87 3.32 3.32 0 0 1 2.4-.95c1.88.05 3.4 1.82 3.4 3.94v24.32a1.96 1.96 0 0 0 3.93 0v-33.1a3.5 3.5 0 0 1 7 0v35.39a1.96 1.96 0 0 0 3.93 0v-.44c.05-2.05 1.6-3.7 3.49-3.7 1.93 0 3.5 1.7 3.5 3.82v5.63c0 .24.04.48.13.71l.1.26a1.97 1.97 0 0 0 3.76-.37c.33-1.78 1.77-3.07 3.43-3.07 1.9 0 3.45 1.67 3.5 3.74l-1.77 18.1zM77.39 51c-1.25 0-2.45.32-3.5.9v-.15c0-4.27-3.33-7.74-7.42-7.74-1.26 0-2.45.33-3.5.9V16.69a7.42 7.42 0 0 0-14.85 0v1.86a7 7 0 0 0-3.28-.94 7.21 7.21 0 0 0-5.26 2.07 7.92 7.92 0 0 0-2.38 5.67v37.9l-5.83-7.82a10.2 10.2 0 0 0-13.35-2.92 4.1 4.1 0 0 0-1.53 5.48C20 64.52 28.74 80.45 34.07 87.34c.72 1.04 9.02 12.59 23.4 12.59 7.96 0 14.66-2.84 19.38-8.2a26.06 26.06 0 0 0 6.18-14.6l1.78-18.2v-.2c0-4.26-3.32-7.73-7.42-7.73z"/><!--Created by AomAm from the Noun Project--></svg>
`,Uf=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 17 79 79"><path fill="currentColor" d="M38.1 29.27c-.24 0-.44.2-.44.45v10.7a.45.45 0 00.9 0v-10.7c0-.25-.2-.45-.45-.45zm10.2 26.66a11.54 11.54 0 01-8.48-6.14.45.45 0 10-.8.41 12.45 12.45 0 009.22 6.62.45.45 0 00.07-.9zm24.55-13.08a23.04 23.04 0 00-22.56-23v7.07l-.01.05a2.83 2.83 0 012.39 2.78v14.03l.09-.02h8.84v-9.22a.45.45 0 11.9 0v9.22h10.35v-.9zm0 27.33V44.66H62.5c-.02 2.01-.52 4-1.47 5.76a.45.45 0 01-.61.18.45.45 0 01-.19-.61 11.54 11.54 0 001.36-5.33h-8.83l-.1-.01a2.83 2.83 0 01-2.83 2.84h-.04-.04a2.83 2.83 0 01-2.83-2.83v-14.9a2.82 2.82 0 012.47-2.8v-7.11a23.04 23.04 0 00-22.57 23v.91h14.72V29.88a8.2 8.2 0 015.02-7.57c.22-.1.5.01.59.24.1.23-.01.5-.24.6a7.3 7.3 0 00-4.47 6.73v13.88h3.9a.45.45 0 110 .9h-3.9v.15a7.32 7.32 0 0011.23 6.17.45.45 0 01.49.76 8.22 8.22 0 01-12.62-6.93v-.15H26.82v25.52a23.04 23.04 0 0023.01 23.01 23.04 23.04 0 0023.02-23.01zm1.8-27.33v27.33A24.85 24.85 0 0149.84 95a24.85 24.85 0 01-24.82-24.82V42.85a24.85 24.85 0 0124.82-24.82 24.85 24.85 0 0124.83 24.82zM57.98 29.88v9.36a.45.45 0 11-.9 0v-9.36a7.28 7.28 0 00-3.4-6.17.45.45 0 01.49-.76 8.18 8.18 0 013.8 6.93z"/><!-- Created by Icon Island from the Noun Project --></svg>
`,Bf=function(T){u(y,T);function y(M){var l;return l=T.call(this,M)||this,l.state={moveThreshold:v*N.pixelRatio,keyboardEnabled:!1,moving:!1,zooming:!1,startMouseX:0,startMouseY:0,mouseX:0,mouseY:0,mouseHistory:[],pinchDist:0,keyHandler:new sn,ctrlKeyDown:!1,dblclickData:null,dblclickTimeout:null,longtouchTimeout:null,twofingersTimeout:null,ctrlZoomTimeout:null},l.__onResize=ce(function(){return l.psv.autoSize()},50),l}var x=y.prototype;return x.init=function(){window.addEventListener("resize",this),window.addEventListener("keydown",this),window.addEventListener("keyup",this),this.psv.container.addEventListener("mouseenter",this),this.psv.container.addEventListener("mousedown",this),this.psv.container.addEventListener("mouseleave",this),this.psv.container.addEventListener("mousemove",this),window.addEventListener("mouseup",this),this.psv.container.addEventListener("touchstart",this),this.psv.container.addEventListener("touchmove",this),window.addEventListener("touchend",this),this.psv.container.addEventListener(N.mouseWheelEvent,this),N.fullscreenEvent&&document.addEventListener(N.fullscreenEvent,this)},x.destroy=function(){window.removeEventListener("resize",this),window.removeEventListener("keydown",this),window.removeEventListener("keyup",this),this.psv.container.removeEventListener("mouseenter",this),this.psv.container.removeEventListener("mousedown",this),this.psv.container.removeEventListener("mouseleave",this),this.psv.container.removeEventListener("mousemove",this),window.removeEventListener("mouseup",this),this.psv.container.removeEventListener("touchstart",this),this.psv.container.removeEventListener("touchmove",this),window.removeEventListener("touchend",this),this.psv.container.removeEventListener(N.mouseWheelEvent,this),N.fullscreenEvent&&document.removeEventListener(N.fullscreenEvent,this),clearTimeout(this.state.dblclickTimeout),clearTimeout(this.state.longtouchTimeout),clearTimeout(this.state.twofingersTimeout),clearTimeout(this.state.ctrlZoomTimeout),delete this.state,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"resize":this.__onResize();break;case"keydown":this.__onKeyDown(l);break;case"keyup":this.__onKeyUp();break;case"mouseup":this.__onMouseUp(l);break;case"touchend":this.__onTouchEnd(l);break;case N.fullscreenEvent:this.__fullscreenToggled();break}if(!ze(l.target,".psv-navbar")&&!ze(l.target,".psv-panel"))switch(l.type){case"mousedown":this.__onMouseDown(l);break;case"mouseenter":this.__onMouseEnter(l);break;case"mouseleave":this.__onMouseLeave(l);break;case"mousemove":this.__onMouseMove(l);break;case"touchstart":this.__onTouchStart(l);break;case"touchmove":this.__onTouchMove(l);break;case N.mouseWheelEvent:this.__onMouseWheel(l);break}},x.enableKeyboard=function(){this.state.keyboardEnabled=!0},x.disableKeyboard=function(){this.state.keyboardEnabled=!1},x.__onKeyDown=function(l){this.config.mousewheelCtrlKey&&(this.state.ctrlKeyDown=l.key===Y.Control,this.state.ctrlKeyDown&&(clearTimeout(this.state.ctrlZoomTimeout),this.psv.overlay.hide(L.CTRL_ZOOM)));var _=this.psv.trigger(U.KEY_PRESS,l.key);if(!_.isDefaultPrevented()&&!!this.state.keyboardEnabled){if(this.config.keyboard[l.key]===V.TOGGLE_AUTOROTATE)this.psv.toggleAutorotate();else if(this.config.keyboard[l.key]&&!this.state.keyHandler.time){switch(this.config.keyboard[l.key]){case V.ROTATE_LAT_UP:this.psv.dynamics.position.roll({latitude:!1});break;case V.ROTATE_LAT_DOWN:this.psv.dynamics.position.roll({latitude:!0});break;case V.ROTATE_LONG_RIGHT:this.psv.dynamics.position.roll({longitude:!1});break;case V.ROTATE_LONG_LEFT:this.psv.dynamics.position.roll({longitude:!0});break;case V.ZOOM_IN:this.psv.dynamics.zoom.roll(!1);break;case V.ZOOM_OUT:this.psv.dynamics.zoom.roll(!0);break}this.state.keyHandler.down()}}},x.__onKeyUp=function(){var l=this;this.state.ctrlKeyDown=!1,this.state.keyboardEnabled&&this.state.keyHandler.up(function(){l.psv.dynamics.position.stop(),l.psv.dynamics.zoom.stop()})},x.__onMouseDown=function(l){!this.config.mousemove||this.config.captureCursor||this.__startMove(l)},x.__onMouseEnter=function(l){!this.config.mousemove||!this.config.captureCursor||this.__startMove(l)},x.__onMouseUp=function(l){!this.config.mousemove||this.config.captureCursor||this.__stopMove(l)},x.__onMouseLeave=function(l){!this.config.mousemove||!this.config.captureCursor||this.__stopMove(l)},x.__onMouseMove=function(l){if(this.config.mousemove&&(l.buttons!==0?(l.preventDefault(),this.__move(l)):this.config.captureCursor&&this.__moveAbsolute(l)),!ie(this.prop.objectsObservers)){var _=Ve(this.psv.container),k={x:l.clientX-_.left,y:l.clientY-_.top},W=this.psv.dataHelper.getIntersections(k),he=function(De,ut,pt){De.listener.handleEvent(new CustomEvent(pt,{detail:{originalEvent:l,object:De.object,data:De.object.userData[ut],viewerPoint:k}}))};Ce(this.prop.objectsObservers,function(ve,De){var ut=W.find(function(pt){return pt.object.userData[De]});ut?(ve.object&&ut.object!==ve.object&&(he(ve,De,Z.LEAVE_OBJECT),delete ve.object),ve.object?he(ve,De,Z.HOVER_OBJECT):(ve.object=ut.object,he(ve,De,Z.ENTER_OBJECT))):ve.object&&(he(ve,De,Z.LEAVE_OBJECT),delete ve.object)})}},x.__onTouchStart=function(l){var _=this;!this.config.mousemove||(l.touches.length===1?(this.config.touchmoveTwoFingers||(this.__startMove(l.touches[0]),l.preventDefault()),this.prop.longtouchTimeout||(this.prop.longtouchTimeout=setTimeout(function(){_.__click(l.touches[0],!0),_.prop.longtouchTimeout=null},g))):l.touches.length===2&&(this.__cancelLongTouch(),this.__cancelTwoFingersOverlay(),this.__startMoveZoom(l),l.preventDefault()))},x.__onTouchEnd=function(l){!this.config.mousemove||(this.__cancelLongTouch(),this.__cancelTwoFingersOverlay(),l.touches.length===1?this.__stopMoveZoom():l.touches.length===0&&this.__stopMove(l.changedTouches[0]))},x.__onTouchMove=function(l){var _=this;!this.config.mousemove||(this.__cancelLongTouch(),l.touches.length===1?this.config.touchmoveTwoFingers?this.prop.twofingersTimeout||(this.prop.twofingersTimeout=setTimeout(function(){_.psv.overlay.show({id:L.TWO_FINGERS,image:Ff,text:_.config.lang.twoFingers})},E)):(l.preventDefault(),this.__move(l.touches[0])):l.touches.length===2&&(l.preventDefault(),this.__moveZoom(l),this.__cancelTwoFingersOverlay()))},x.__cancelLongTouch=function(){this.prop.longtouchTimeout&&(clearTimeout(this.prop.longtouchTimeout),this.prop.longtouchTimeout=null)},x.__cancelTwoFingersOverlay=function(){this.prop.twofingersTimeout&&(clearTimeout(this.prop.twofingersTimeout),this.prop.twofingersTimeout=null),this.psv.overlay.hide(L.TWO_FINGERS)},x.__onMouseWheel=function(l){var _=this;if(!!this.config.mousewheel){if(this.config.mousewheelCtrlKey&&!this.state.ctrlKeyDown){this.psv.overlay.show({id:L.CTRL_ZOOM,image:Uf,text:this.config.lang.ctrlZoom}),clearTimeout(this.state.ctrlZoomTimeout),this.state.ctrlZoomTimeout=setTimeout(function(){return _.psv.overlay.hide(L.CTRL_ZOOM)},b);return}l.preventDefault(),l.stopPropagation();var k=ue(l).spinY*5*this.config.zoomSpeed;k!==0&&this.psv.dynamics.zoom.step(-k,5)}},x.__fullscreenToggled=function(l){this.prop.fullscreen=l!==void 0?l:de(this.psv.container),this.config.keyboard&&(this.prop.fullscreen?this.psv.startKeyboardControl():this.psv.stopKeyboardControl()),this.psv.trigger(U.FULLSCREEN_UPDATED,this.prop.fullscreen)},x.__startMove=function(l){var _=this;this.psv.stopAutorotate(),this.psv.stopAnimation().then(function(){_.state.mouseX=l.clientX,_.state.mouseY=l.clientY,_.state.startMouseX=_.state.mouseX,_.state.startMouseY=_.state.mouseY,_.state.moving=!0,_.state.zooming=!1,_.state.mouseHistory.length=0,_.__logMouseMove(l)})},x.__startMoveZoom=function(l){var _={x:l.touches[0].clientX,y:l.touches[0].clientY},k={x:l.touches[1].clientX,y:l.touches[1].clientY};this.state.pinchDist=ht(_,k),this.state.mouseX=(_.x+k.x)/2,this.state.mouseY=(_.y+k.y)/2,this.state.startMouseX=this.state.mouseX,this.state.startMouseY=this.state.mouseY,this.state.moving=!0,this.state.zooming=!0},x.__stopMove=function(l){if(!ze(l.target,".psv-container")){this.state.moving=!1,this.state.mouseHistory.length=0;return}this.state.moving&&(Math.abs(l.clientX-this.state.startMouseX)<this.state.moveThreshold&&Math.abs(l.clientY-this.state.startMouseY)<this.state.moveThreshold?(this.__click(l),this.state.moving=!1):this.config.moveInertia?(this.__logMouseMove(l),this.__stopMoveInertia(l)):this.state.moving=!1,this.state.mouseHistory.length=0)},x.__stopMoveZoom=function(){this.state.mouseHistory.length=0,this.state.moving=!1,this.state.zooming=!1},x.__stopMoveInertia=function(l){var _=this,k={x:l.clientX-this.state.mouseHistory[0][1],y:l.clientY-this.state.mouseHistory[0][2]},W=Math.sqrt(k.x*k.x+k.y*k.y);this.prop.animationPromise=new Pn({properties:{clientX:{start:l.clientX,end:l.clientX+k.x},clientY:{start:l.clientY,end:l.clientY+k.y}},duration:W*C/100,easing:"outCirc",onTick:function(ve){_.__move(ve,!1)}}),this.prop.animationPromise.then(function(){_.state.moving=!1})},x.__click=function(l,_){var k=this;_===void 0&&(_=!1);var W=this.psv.container.getBoundingClientRect(),he={rightclick:_||l.button===2,target:l.target,clientX:l.clientX,clientY:l.clientY,viewerX:l.clientX-W.left,viewerY:l.clientY-W.top},ve=this.psv.dataHelper.getIntersections({x:he.viewerX,y:he.viewerY}),De=ve.find(function(wt){return wt.object.userData.psvSphere});if(De){var ut=this.psv.dataHelper.vector3ToSphericalCoords(De.point);he.longitude=ut.longitude,he.latitude=ut.latitude,he.objects=ve.map(function(wt){return wt.object}).filter(function(wt){return!wt.userData.psvSphere});try{var pt=this.psv.dataHelper.sphericalCoordsToTextureCoords(he);he.textureX=pt.x,he.textureY=pt.y}catch{he.textureX=NaN,he.textureY=NaN}this.state.dblclickTimeout?(Math.abs(this.state.dblclickData.clientX-he.clientX)<this.state.moveThreshold&&Math.abs(this.state.dblclickData.clientY-he.clientY)<this.state.moveThreshold&&this.psv.trigger(U.DOUBLE_CLICK,this.state.dblclickData),clearTimeout(this.state.dblclickTimeout),this.state.dblclickTimeout=null,this.state.dblclickData=null):(this.psv.trigger(U.CLICK,he),this.state.dblclickData=Ie(he),this.state.dblclickTimeout=setTimeout(function(){k.state.dblclickTimeout=null,k.state.dblclickData=null},m))}},x.__move=function(l,_){if(this.state.moving){var k=l.clientX,W=l.clientY,he={longitude:(k-this.state.mouseX)/this.prop.size.width*this.config.moveSpeed*n.Math.degToRad(this.prop.hFov),latitude:(W-this.state.mouseY)/this.prop.size.height*this.config.moveSpeed*n.Math.degToRad(this.prop.vFov)},ve=this.psv.getPosition();this.psv.rotate({longitude:ve.longitude-he.longitude,latitude:ve.latitude+he.latitude}),this.state.mouseX=k,this.state.mouseY=W,_!==!1&&this.__logMouseMove(l)}},x.__moveAbsolute=function(l){if(this.state.moving){var _=this.psv.container.getBoundingClientRect();this.psv.dynamics.position.goto({longitude:((l.clientX-_.left)/_.width-.5)*Math.PI*2,latitude:-((l.clientY-_.top)/_.height-.5)*Math.PI},10)}},x.__moveZoom=function(l){if(this.state.zooming&&this.state.moving){var _={x:l.touches[0].clientX,y:l.touches[0].clientY},k={x:l.touches[1].clientX,y:l.touches[1].clientY},W=ht(_,k),he=80*(W-this.state.pinchDist)/this.prop.size.width*this.config.zoomSpeed;this.psv.zoom(this.psv.getZoomLevel()+he),this.__move({clientX:(_.x+k.x)/2,clientY:(_.y+k.y)/2}),this.state.pinchDist=W}},x.__logMouseMove=function(l){var _=Date.now();this.state.mouseHistory.push([_,l.clientX,l.clientY]);for(var k=null,W=0;W<this.state.mouseHistory.length;)this.state.mouseHistory[0][W]<_-C?this.state.mouseHistory.splice(W,1):k&&this.state.mouseHistory[0][W]-k>C/10?(this.state.mouseHistory.splice(0,W),W=0,k=this.state.mouseHistory[0][W]):(W++,k=this.state.mouseHistory[0][W])},y}(ts),Hf=function(T){u(y,T);function y(M){var l,_;return _=T.call(this,M)||this,_.renderer=new n.WebGLRenderer({alpha:!0,antialias:!0}),_.renderer.setPixelRatio(N.pixelRatio),_.renderer.domElement.className="psv-canvas",_.scene=new n.Scene,_.camera=new n.PerspectiveCamera(50,16/9,1,2*S),_.mesh=_.psv.adapter.createMesh(),_.mesh.userData=(l={},l[O]=!0,l),_.meshContainer=new n.Group,_.meshContainer.add(_.mesh),_.scene.add(_.meshContainer),_.raycaster=new n.Raycaster,_.timestamp=null,_.ready=!1,_.canvasContainer=document.createElement("div"),_.canvasContainer.className="psv-canvas-container",_.canvasContainer.style.background=_.psv.config.canvasBackground,_.canvasContainer.style.cursor=_.psv.config.mousemove?"move":"default",_.canvasContainer.appendChild(_.renderer.domElement),_.psv.container.appendChild(_.canvasContainer),M.on(U.SIZE_UPDATED,d(_)),M.on(U.ZOOM_UPDATED,d(_)),M.on(U.POSITION_UPDATED,d(_)),M.on(U.CONFIG_CHANGED,d(_)),_.hide(),_}var x=y.prototype;return x.destroy=function(){this.renderer.setAnimationLoop(null),this.__cleanTHREEScene(this.scene),this.psv.container.removeChild(this.canvasContainer),delete this.canvasContainer,delete this.renderer,delete this.scene,delete this.camera,delete this.mesh,delete this.meshContainer,delete this.raycaster,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case U.SIZE_UPDATED:this.__onSizeUpdated();break;case U.ZOOM_UPDATED:this.__onZoomUpdated();break;case U.POSITION_UPDATED:this.__onPositionUpdated();break;case U.CONFIG_CHANGED:l.args[0].includes("fisheye")&&this.__onPositionUpdated(),l.args[0].includes("mousemove")&&(this.canvasContainer.style.cursor=this.psv.config.mousemove?"move":"default");break}},x.hide=function(){this.canvasContainer.style.opacity=0},x.show=function(){this.canvasContainer.style.opacity=1},x.__onSizeUpdated=function(){this.renderer.setSize(this.prop.size.width,this.prop.size.height),this.camera.aspect=this.prop.aspect,this.camera.updateProjectionMatrix(),this.prop.needsUpdate=!0},x.__onZoomUpdated=function(){this.camera.fov=this.prop.vFov,this.camera.updateProjectionMatrix(),this.prop.needsUpdate=!0},x.__onPositionUpdated=function(){this.camera.position.set(0,0,0),this.camera.lookAt(this.prop.direction),this.config.fisheye&&this.camera.position.copy(this.prop.direction).multiplyScalar(this.config.fisheye/2).negate(),this.prop.needsUpdate=!0},x.__renderLoop=function(l){var _=this.timestamp!==null?l-this.timestamp:0;this.timestamp=l,this.psv.trigger(U.BEFORE_RENDER,l,_),Ce(this.psv.dynamics,function(k){return k.update(_)}),this.prop.needsUpdate&&(this.render(),this.prop.needsUpdate=!1)},x.render=function(){this.renderer.render(this.scene,this.camera),this.psv.trigger(U.RENDER)},x.setTexture=function(l){var _=this;this.prop.panoData=l.panoData,this.psv.adapter.setTexture(this.mesh,l),this.ready||(this.renderer.setAnimationLoop(function(k){return _.__renderLoop(k)}),this.ready=!0),this.psv.needsUpdate(),this.psv.trigger(U.PANORAMA_LOADED,l)},x.setPanoramaPose=function(l,_){_===void 0&&(_=this.mesh);var k=this.psv.dataHelper.cleanPanoramaPose(l);_.rotation.set(-k.tilt,-k.pan,-k.roll,"ZXY")},x.setSphereCorrection=function(l,_){_===void 0&&(_=this.meshContainer);var k=this.psv.dataHelper.cleanSphereCorrection(l);_.rotation.set(k.tilt,k.pan,k.roll,"ZXY")},x.transition=function(l,_){var k=this,W=Te(_),he="zoom"in _,ve=new n.Group,De=this.psv.adapter.createMesh(.5);if(this.psv.adapter.setTexture(De,l,!0),this.psv.adapter.setTextureOpacity(De,0),this.setPanoramaPose(l.panoData,De),this.setSphereCorrection(_.sphereCorrection,ve),W){var ut=this.psv.dataHelper.cleanPosition(_),pt=this.psv.getPosition(),wt=new n.Vector3(0,1,0);ve.rotateOnWorldAxis(wt,ut.longitude-pt.longitude);var ns=new n.Vector3(0,1,0).cross(this.camera.getWorldDirection(new n.Vector3)).normalize();ve.rotateOnWorldAxis(ns,ut.latitude-pt.latitude)}ve.add(De),this.scene.add(ve);var Qn=new Pn({properties:{opacity:{start:0,end:1},zoom:he?{start:this.psv.getZoomLevel(),end:_.zoom}:void 0},duration:_.transition,easing:"outCubic",onTick:function(Xt){k.psv.adapter.setTextureOpacity(De,Xt.opacity),k.psv.adapter.setTextureOpacity(k.mesh,1-Xt.opacity),he&&k.psv.zoom(Xt.zoom),k.psv.needsUpdate()}});return Qn.then(function(is){is?(k.setTexture(l),k.psv.adapter.setTextureOpacity(k.mesh,1),k.setPanoramaPose(l.panoData),k.setSphereCorrection(_.sphereCorrection),W&&k.psv.rotate(_)):k.psv.adapter.disposeTexture(l),k.scene.remove(ve),De.geometry.dispose(),De.geometry=null}),Qn},x.__cleanTHREEScene=function(l){var _=this;l.traverse(function(k){k.geometry&&k.geometry.dispose(),k.material&&(Array.isArray(k.material)?k.material.forEach(function(W){W.map&&W.map.dispose(),W.dispose()}):(k.material.map&&k.material.map.dispose(),k.material.dispose())),k.dispose&&!(k instanceof n.Scene)&&k.dispose(),k!==l&&_.__cleanTHREEScene(k)})},y}(ts),zf=function(T){u(y,T);function y(M){var l;return l=T.call(this,M)||this,l.loader=new n.FileLoader,l.loader.setResponseType("blob"),l.config.withCredentials&&l.loader.setWithCredentials(!0),l.config.requestHeaders&&typeof l.config.requestHeaders=="object"&&l.loader.setRequestHeader(l.config.requestHeaders),l}var x=y.prototype;return x.destroy=function(){this.abortLoading(),T.prototype.destroy.call(this)},x.loadTexture=function(l,_){return this.psv.adapter.loadTexture(l,_)},x.abortLoading=function(){},x.loadFile=function(l,_){var k=this;return this.config.requestHeaders&&typeof this.config.requestHeaders=="function"&&this.loader.setRequestHeader(this.config.requestHeaders(l)),new Promise(function(W,he){var ve=0;_&&_(ve),k.loader.load(l,function(De){ve=100,_&&_(ve),W(De)},function(De){if(De.lengthComputable){var ut=De.loaded/De.total*100;ut>ve&&(ve=ut,_&&_(ve))}},function(De){he(De)})})},x.loadImage=function(l,_){return this.loadFile(l,_).then(function(k){return new Promise(function(W,he){var ve=document.createElementNS("http://www.w3.org/1999/xhtml","img");ve.onload=function(){URL.revokeObjectURL(ve.src),W(ve)},ve.onerror=he,ve.src=URL.createObjectURL(k)})})},x.preloadPanorama=function(l){return this.psv.adapter.supportsPreload(l)?this.psv.adapter.loadTexture(l):Promise.resolve()},y}(ts),un={NONE:0,SHOWING:1,HIDING:2,READY:3},kc=function(T){u(y,T);function y(M,l){var _;return _=T.call(this,M,"psv-tooltip")||this,_.prop=h({},_.prop,l,{state:un.NONE,width:0,height:0,pos:"",data:null}),_.content=document.createElement("div"),_.content.className="psv-tooltip-content",_.container.appendChild(_.content),_.arrow=document.createElement("div"),_.arrow.className="psv-tooltip-arrow",_.container.appendChild(_.arrow),_.container.addEventListener("transitionend",d(_)),_.container.style.top="-1000px",_.container.style.left="-1000px",_}var x=y.prototype;return x.destroy=function(){delete this.arrow,delete this.content,T.prototype.destroy.call(this)},x.handleEvent=function(l){switch(l.type){case"transitionend":this.__onTransitionEnd(l);break}},x.toggle=function(){throw new s("Tooltip cannot be toggled")},x.show=function(l){if(this.prop.state!==un.NONE)throw new s("Initialized tooltip cannot be re-initialized");l.className&&Oe(this.container,l.className),this.content.innerHTML=l.content;var _=this.container.getBoundingClientRect();this.prop.width=_.right-_.left,this.prop.height=_.bottom-_.top,this.prop.state=un.READY,this.move(l),this.prop.data=l.data,this.prop.state=un.SHOWING,this.psv.trigger(U.SHOW_TOOLTIP,this.prop.data,this)},x.move=function(l){if(this.prop.state!==un.SHOWING&&this.prop.state!==un.READY)throw new s("Uninitialized tooltip cannot be moved");var _=this.container,k=this.arrow,W={posClass:Yt(l.position,"top center",!1),width:this.prop.width,height:this.prop.height,top:0,left:0,arrowTop:0,arrowLeft:0};this.__computeTooltipPosition(W,l);var he=!1;W.top<this.prop.offset?(W.posClass[0]="bottom",he=!0):W.top+W.height>this.psv.prop.size.height-this.prop.offset&&(W.posClass[0]="top",he=!0),W.left<this.prop.offset?(W.posClass[1]="right",he=!0):W.left+W.width>this.psv.prop.size.width-this.prop.offset&&(W.posClass[1]="left",he=!0),he&&this.__computeTooltipPosition(W,l),_.style.top=W.top+"px",_.style.left=W.left+"px",k.style.top=W.arrowTop+"px",k.style.left=W.arrowLeft+"px";var ve=W.posClass.join("-");ve!==this.prop.pos&&(_.classList.remove("psv-tooltip--"+this.prop.pos),this.prop.pos=ve,_.classList.add("psv-tooltip--"+this.prop.pos))},x.hide=function(){this.container.classList.remove("psv-tooltip--visible"),this.prop.state=un.HIDING,this.psv.trigger(U.HIDE_TOOLTIP,this.prop.data)},x.__onTransitionEnd=function(l){if(l.propertyName==="transform")switch(this.prop.state){case un.SHOWING:this.container.classList.add("psv-tooltip--visible"),this.prop.state=un.READY;break;case un.HIDING:this.prop.state=un.NONE,this.destroy();break}},x.__computeTooltipPosition=function(l,_){var k=!1;switch(_.box||(_.box={width:0,height:0}),l.posClass[0]){case"bottom":l.top=_.top+_.box.height+this.prop.offset+this.prop.arrow,l.arrowTop=-this.prop.arrow*2,k=!0;break;case"center":l.top=_.top+_.box.height/2-l.height/2,l.arrowTop=l.height/2-this.prop.arrow;break;case"top":l.top=_.top-l.height-this.prop.offset-this.prop.arrow,l.arrowTop=l.height,k=!0;break}switch(l.posClass[1]){case"right":k?(l.left=_.left+_.box.width/2-this.prop.offset-this.prop.arrow,l.arrowLeft=this.prop.offset):(l.left=_.left+_.box.width+this.prop.offset+this.prop.arrow,l.arrowLeft=-this.prop.arrow*2);break;case"center":l.left=_.left+_.box.width/2-l.width/2,l.arrowLeft=l.width/2-this.prop.arrow;break;case"left":k?(l.left=_.left-l.width+_.box.width/2+this.prop.offset+this.prop.arrow,l.arrowLeft=l.width-this.prop.offset-this.prop.arrow*2):(l.left=_.left-l.width-this.prop.offset-this.prop.arrow,l.arrowLeft=l.width);break}},y}(ee),kf=function(T){u(y,T);function y(M){var l;l=T.call(this,M)||this;var _=new kc(l.psv);return l.size={arrow:parseInt(se(_.arrow,"borderTopWidth"),10),offset:parseInt(se(_.container,"outlineWidth"),10)},_.destroy(),l}var x=y.prototype;return x.destroy=function(){delete this.size,T.prototype.destroy.call(this)},x.create=function(l){var _=new kc(this.psv,this.size);return _.show(l),_},y}(ts);n.Cache.enabled=!0;var Gf=function(T){u(y,T);function y(M){var l;if(l=T.call(this)||this,N.load(),!N.isWebGLSupported)throw new s("WebGL is not supported.");if(N.maxTextureWidth===0)throw new s("Unable to detect system capabilities");return l.prop={ready:!1,uiRefresh:!1,needsUpdate:!1,fullscreen:!1,direction:new n.Vector3(0,0,S),vFov:null,hFov:null,aspect:null,autorotateEnabled:!1,animationPromise:null,loadingPromise:null,startTimeout:null,objectsObservers:{},size:{width:0,height:0},panoData:{fullWidth:0,fullHeight:0,croppedWidth:0,croppedHeight:0,croppedX:0,croppedY:0,poseHeading:0,posePitch:0,poseRoll:0}},l.config=Af(M),l.parent=typeof M.container=="string"?document.getElementById(M.container):M.container,l.parent[A]=d(l),l.container=document.createElement("div"),l.container.classList.add("psv-container"),l.parent.appendChild(l.container),l.adapter=new l.config.adapter[0](d(l),l.config.adapter[1]),l.children=[],l.plugins={},l.renderer=new Hf(d(l)),l.textureLoader=new zf(d(l)),l.eventsHandler=new Bf(d(l)),l.dataHelper=new Of(d(l)),l.loader=new Cf(d(l)),l.navbar=new Rf(d(l)),l.panel=new Df(d(l)),l.tooltip=new kf(d(l)),l.notification=new Lf(d(l)),l.overlay=new Pf(d(l)),l.dynamics={zoom:new In(function(_){l.prop.vFov=l.dataHelper.zoomLevelToFov(_),l.prop.hFov=l.dataHelper.vFovToHFov(l.prop.vFov),l.trigger(U.ZOOM_UPDATED,_)},l.config.defaultZoomLvl,0,100),position:new Xs({longitude:new In(null,l.config.defaultLong,0,2*Math.PI,!0),latitude:new In(null,l.config.defaultLat,-Math.PI/2,Math.PI/2)},function(_){l.dataHelper.sphericalCoordsToVector3(_,l.prop.direction),l.trigger(U.POSITION_UPDATED,_)})},l.__updateSpeeds(),l.eventsHandler.init(),l.__resizeRefresh=ce(function(){return l.refreshUi("resize")},500),l.resize(l.config.size),l.config.plugins.forEach(function(_){var k=_[0],W=_[1];l.plugins[k.id]=new k(d(l),W)}),Ce(l.plugins,function(_){return _.init==null?void 0:_.init()}),l.navbar.setButtons(l.config.navbar),l.config.panorama&&l.setPanorama(l.config.panorama),N.isTouchEnabled.then(function(_){return Le(l.container,"psv--is-touch",_)}),l.once(U.RENDER,function(){l.config.navbar&&(l.container.classList.add("psv--has-navbar"),l.navbar.show()),l.config.autorotateDelay&&(l.prop.startTimeout=setTimeout(function(){return l.startAutorotate()},l.config.autorotateDelay)),l.prop.ready=!0,setTimeout(function(){l.refreshUi("init"),l.trigger(U.READY)},0)}),l}var x=y.prototype;return x.destroy=function(){this.__stopAll(),this.stopKeyboardControl(),this.exitFullscreen(),this.eventsHandler.destroy(),this.renderer.destroy(),this.textureLoader.destroy(),this.dataHelper.destroy(),this.adapter.destroy(),this.children.slice().forEach(function(l){return l.destroy()}),this.children.length=0,Ce(this.plugins,function(l){return l.destroy()}),delete this.plugins,this.parent.removeChild(this.container),delete this.parent[A],delete this.parent,delete this.container,delete this.loader,delete this.navbar,delete this.panel,delete this.tooltip,delete this.notification,delete this.overlay,delete this.config},x.refreshUi=function(l){var _=this;!this.prop.ready||(this.prop.uiRefresh?this.prop.uiRefresh!=="new"&&(this.prop.uiRefresh="new",setTimeout(function(){_.prop.uiRefresh=!1,_.refreshUi(l)})):(this.prop.uiRefresh=!0,this.children.every(function(k){return k.refreshUi(),_.prop.uiRefresh===!0}),this.prop.uiRefresh=!1))},x.getPlugin=function(l){if(typeof l=="string")return this.plugins[l];var _=q(l,Qr);return _?this.plugins[_.id]:void 0},x.getPosition=function(){return this.dataHelper.cleanPosition(this.dynamics.position.current)},x.getZoomLevel=function(){return this.dynamics.zoom.current},x.getSize=function(){return h({},this.prop.size)},x.isAutorotateEnabled=function(){return this.prop.autorotateEnabled},x.isFullscreenEnabled=function(){return N.fullscreenEvent?de(this.container):this.prop.fullscreen},x.needsUpdate=function(){this.prop.needsUpdate=!0},x.autoSize=function(){(this.container.clientWidth!==this.prop.size.width||this.container.clientHeight!==this.prop.size.height)&&(this.prop.size.width=Math.round(this.container.clientWidth),this.prop.size.height=Math.round(this.container.clientHeight),this.prop.aspect=this.prop.size.width/this.prop.size.height,this.prop.hFov=this.dataHelper.vFovToHFov(this.prop.vFov),this.trigger(U.SIZE_UPDATED,this.getSize()),this.__resizeRefresh())},x.setPanorama=function(l,_){var k,W=this;_===void 0&&(_={}),this.textureLoader.abortLoading(),(k=this.prop.transitionAnimation)==null||k.cancel(),this.prop.ready||("sphereCorrection"in _||(_.sphereCorrection=this.config.sphereCorrection),"panoData"in _||(_.panoData=this.config.panoData)),(_.transition===void 0||_.transition===!0)&&(_.transition=p),_.showLoader===void 0&&(_.showLoader=!0),_.caption===void 0&&(_.caption=this.config.caption),_.description===void 0&&(_.description=this.config.description);var he=Te(_),ve="zoom"in _;(he||ve)&&this.__stopAll(),this.hideError(),this.config.panorama=l,this.config.caption=_.caption,this.config.description=_.description;var De=function(wt){if(W.loader.hide(),W.prop.loadingPromise=null,me(wt))return!1;if(wt)throw W.navbar.setCaption(""),W.showError(W.config.lang.loadError),console.error(wt),wt;return W.navbar.setCaption(W.config.caption),!0};this.navbar.setCaption("<em>"+(this.config.loadingTxt||"")+"</em>"),(_.showLoader||!this.prop.ready)&&this.loader.show();var ut=this.adapter.loadTexture(this.config.panorama,_.panoData).then(function(pt){if(pt.panorama!==W.config.panorama)throw W.adapter.disposeTexture(pt),ge();return pt});return!_.transition||!this.prop.ready||!this.adapter.supportsTransition(this.config.panorama)?this.prop.loadingPromise=ut.then(function(pt){W.renderer.show(),W.renderer.setTexture(pt),W.renderer.setPanoramaPose(pt.panoData),W.renderer.setSphereCorrection(_.sphereCorrection),ve&&W.zoom(_.zoom),he&&W.rotate(_)}).then(De,De):this.prop.loadingPromise=ut.then(function(pt){return W.loader.hide(),W.prop.transitionAnimation=W.renderer.transition(pt,_),W.prop.transitionAnimation.then(function(wt){if(W.prop.transitionAnimation=null,!wt)throw ge()})}).then(De,De),this.prop.loadingPromise},x.setOptions=function(l){var _=this;Ce(l,function(k,W){if(qs[W]){Re(qs[W]);return}if(!Object.prototype.hasOwnProperty.call(hn,W))throw new s("Unknown option "+W);if(Hc[W])throw new s(Hc[W]);switch(Ys[W]?_.config[W]=Ys[W](k,l):_.config[W]=k,W){case"caption":case"description":_.navbar.setCaption(_.config.caption);break;case"size":_.resize(k);break;case"sphereCorrection":_.renderer.setSphereCorrection(k);break;case"navbar":case"lang":_.navbar.setButtons(_.config.navbar);break;case"moveSpeed":case"zoomSpeed":_.__updateSpeeds();break;case"minFov":case"maxFov":_.dynamics.zoom.setValue(_.dataHelper.fovToZoomLevel(_.prop.vFov)),_.trigger(U.ZOOM_UPDATED,_.getZoomLevel());break;case"canvasBackground":_.renderer.canvasContainer.style.background=_.config.canvasBackground;break}}),this.needsUpdate(),this.refreshUi("set options"),this.trigger(U.CONFIG_CHANGED,Object.keys(l))},x.setOption=function(l,_){var k;this.setOptions((k={},k[l]=_,k))},x.startAutorotate=function(l){l===void 0&&(l=!1),!(l&&!this.isAutorotateEnabled())&&(l||this.__stopAll(),this.dynamics.position.roll({longitude:this.config.autorotateSpeed<0},Math.abs(this.config.autorotateSpeed/this.config.moveSpeed)),this.dynamics.position.goto({latitude:this.config.autorotateLat},Math.abs(this.config.autorotateSpeed/this.config.moveSpeed)),this.prop.autorotateEnabled=!0,l||this.trigger(U.AUTOROTATE,!0))},x.stopAutorotate=function(){this.prop.startTimeout&&(clearTimeout(this.prop.startTimeout),this.prop.startTimeout=null),this.isAutorotateEnabled()&&(this.dynamics.position.stop(),this.prop.autorotateEnabled=!1,this.trigger(U.AUTOROTATE,!1))},x.toggleAutorotate=function(){this.isAutorotateEnabled()?this.stopAutorotate():this.startAutorotate()},x.showError=function(l){this.overlay.show({id:L.ERROR,image:Nf,text:l,dissmisable:!1})},x.hideError=function(){this.overlay.hide(L.ERROR)},x.rotate=function(l){var _=this.trigger(U.BEFORE_ROTATE,l);if(!_.isDefaultPrevented()){var k=this.change(Q.GET_ROTATE_POSITION,this.dataHelper.cleanPosition(l));this.dynamics.position.setValue(k)}},x.animate=function(l){var _=this;this.__stopAll();var k=Te(l),W="zoom"in l,he={},ve;if(k){var De=this.change(Q.GET_ANIMATE_POSITION,this.dataHelper.cleanPosition(l)),ut=this.getPosition(),pt=rt(ut.longitude,De.longitude);he.longitude={start:ut.longitude,end:ut.longitude+pt},he.latitude={start:ut.latitude,end:De.latitude},ve=this.dataHelper.speedToDuration(l.speed,G(ut,De))}if(W){var wt=Math.abs(l.zoom-this.getZoomLevel());he.zoom={start:this.getZoomLevel(),end:l.zoom},ve||(ve=this.dataHelper.speedToDuration(l.speed,Math.PI/4*wt/100))}return ve?(this.prop.animationPromise=new Pn({properties:he,duration:ve,easing:"inOutSine",onTick:function(Qn){k&&_.rotate(Qn),W&&_.zoom(Qn.zoom)}}),this.prop.animationPromise):(k&&this.rotate(l),W&&this.zoom(l.zoom),new Pn)},x.stopAnimation=function(){var l=this;return this.prop.animationPromise?new Promise(function(_){l.prop.animationPromise.then(_),l.prop.animationPromise.cancel(),l.prop.animationPromise=null}):Promise.resolve()},x.zoom=function(l){this.dynamics.zoom.setValue(l)},x.zoomIn=function(l){l===void 0&&(l=1),this.dynamics.zoom.step(l)},x.zoomOut=function(l){l===void 0&&(l=1),this.dynamics.zoom.step(-l)},x.resize=function(l){var _=this;["width","height"].forEach(function(k){l&&l[k]&&(/^[0-9.]+$/.test(l[k])&&(l[k]+="px"),_.parent.style[k]=l[k])}),this.autoSize()},x.enterFullscreen=function(){N.fullscreenEvent?qe(this.container):(this.container.classList.add("psv-container--fullscreen"),this.autoSize(),this.eventsHandler.__fullscreenToggled(!0))},x.exitFullscreen=function(){this.isFullscreenEnabled()&&(N.fullscreenEvent?re():(this.container.classList.remove("psv-container--fullscreen"),this.autoSize(),this.eventsHandler.__fullscreenToggled(!1)))},x.toggleFullscreen=function(){this.isFullscreenEnabled()?this.exitFullscreen():this.enterFullscreen()},x.startKeyboardControl=function(){this.eventsHandler.enableKeyboard()},x.stopKeyboardControl=function(){this.eventsHandler.disableKeyboard()},x.observeObjects=function(l,_){var k=this;return this.prop.objectsObservers[l]={listener:_},function(){delete k.prop.objectsObservers[l]}},x.__stopAll=function(){this.stopAutorotate(),this.stopAnimation(),this.trigger(U.STOP_ALL)},x.__updateSpeeds=function(){this.dynamics.zoom.setSpeed(this.config.zoomSpeed*50),this.dynamics.position.setSpeed(n.Math.degToRad(this.config.moveSpeed*50))},y}(i.EventEmitter);t.AbstractAdapter=o,t.AbstractButton=j,t.AbstractComponent=ee,t.AbstractPlugin=Qr,t.Animation=Pn,t.CONSTANTS=z,t.DEFAULTS=hn,t.EquirectangularAdapter=$,t.PSVError=s,t.SYSTEM=N,t.Viewer=Gf,t.registerButton=zc,t.utils=H,Object.defineProperty(t,"__esModule",{value:!0})})})(Wo,Wo.exports);var Jo={exports:{}};/*!
* Photo Sphere Viewer 4.6.1
* @copyright 2014-2015 Jérémy Heleine
* @copyright 2015-2022 Damien "Mistic" Sorel
* @licence MIT (https://opensource.org/licenses/MIT)
*/(function(r,e){(function(t,n){n(e,w,Wo.exports,jo.exports)})(Xl,function(t,n,i){function s(){return s=Object.assign||function(B){for(var Y=1;Y<arguments.length;Y++){var z=arguments[Y];for(var N in z)Object.prototype.hasOwnProperty.call(z,N)&&(B[N]=z[N])}return B},s.apply(this,arguments)}function o(B,Y){B.prototype=Object.create(Y.prototype),B.prototype.constructor=B,a(B,Y)}function a(B,Y){return a=Object.setPrototypeOf||function(N,R){return N.__proto__=R,N},a(B,Y)}function c(B){if(B===void 0)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return B}var h=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="9 9 81 81"><path fill="currentColor" d="M37.5 90S9.9 51.9 9.9 36.6 22.2 9 37.5 9s27.6 12.4 27.6 27.6S37.5 90 37.5 90zm0-66.3c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11zM86.7 55H70c-1.8 0-3.3-1.5-3.3-3.3s1.5-3.3 3.3-3.3h16.7c1.8 0 3.3 1.5 3.3 3.3S88.5 55 86.7 55zm0-25h-15a3.3 3.3 0 0 1-3.3-3.3c0-1.8 1.5-3.3 3.3-3.3h15c1.8 0 3.3 1.5 3.3 3.3 0 1.8-1.5 3.3-3.3 3.3zM56.5 73h30c1.8 0 3.3 1.5 3.3 3.3 0 1.8-1.5 3.3-3.3 3.3h-30a3.3 3.3 0 0 1-3.3-3.3 3.2 3.2 0 0 1 3.3-3.3z"/><!--Created by Rohith M S from the Noun Project--></svg>
`,u={GOTO_MARKER_DONE:"goto-marker-done",LEAVE_MARKER:"leave-marker",OVER_MARKER:"over-marker",RENDER_MARKERS_LIST:"render-markers-list",SELECT_MARKER:"select-marker",SELECT_MARKER_LIST:"select-marker-list",UNSELECT_MARKER:"unselect-marker",HIDE_MARKERS:"hide-markers",SET_MARKERS:"set-markers",SHOW_MARKERS:"show-markers"},f="http://www.w3.org/2000/svg",d="psvMarker",p="marker",v="markersList",m=function(Y,z,N){return`
<div class="psv-panel-menu psv-panel-menu--stripped">
  <h1 class="psv-panel-menu-title">`+h+" "+z+`</h1>
  <ul class="psv-panel-menu-list">
    `+Y.map(function(R){return`
    <li data-`+N+'="'+R.config.id+`" class="psv-panel-menu-item" tabindex="0">
      `+(R.type==="image"?'<span class="psv-panel-menu-item-icon"><img src="'+R.config.image+'"/></span>':"")+`
      <span class="psv-panel-menu-item-label">`+R.getListContent()+`</span>
    </li>
    `}).join("")+`
  </ul>
</div>
`};function g(B,Y){var z=[0,Math.PI*2,-Math.PI*2];return z.reduce(function(N,R){var P=Y-B+R;return Math.abs(P)<Math.abs(N)?P:N},1/0)}function E(B){this.message=B,"captureStackTrace"in Error?Error.captureStackTrace(this,E):this.stack=new Error().stack}E.prototype=Object.create(Error.prototype),E.prototype.name="PSVError",E.prototype.constructor=E;function b(B){console.warn("PhotoSphereViewer: "+B)}new n.Quaternion;function C(B,Y,z){var N=B[0],R=B[1],P=Y[0],F=Y[1],X=i.utils.greatArcDistance(B,Y),J=Math.sin((1-z)*X)/Math.sin(X),te=Math.sin(z*X)/Math.sin(X),oe=J*Math.cos(R)*Math.cos(N)+te*Math.cos(F)*Math.cos(P),pe=J*Math.cos(R)*Math.sin(N)+te*Math.cos(F)*Math.sin(P),Le=J*Math.sin(R)+te*Math.sin(F);return[Math.atan2(pe,oe),Math.atan2(Le,Math.sqrt(oe*oe+pe*pe))]}function S(B){for(var Y=[B[0]],z=0,N=1;N<B.length;N++){var R=B[N-1][0]-B[N][0];R>Math.PI?z+=1:R<-Math.PI&&(z-=1),Y.push([B[N][0]+z*2*Math.PI,B[N][1]])}var P=Y.reduce(function(F,X){return[F[0]+X[0],F[1]+X[1]]});return[i.utils.parseAngle(P[0]/B.length),P[1]/B.length]}function A(B){for(var Y=0,z=[],N=0;N<B.length-1;N++){var R=i.utils.greatArcDistance(B[N],B[N+1])*i.CONSTANTS.SPHERE_RADIUS;z.push(R),Y+=R}for(var P=0,F=0;F<B.length-1;F++){if(P+z[F]>Y/2){var X=(Y/2-P)/z[F];return C(B[F],B[F+1],X)}P+=z[F]}return B[Math.round(B.length/2)]}var O={image:"image",imageLayer:"imageLayer",html:"html",polygonPx:"polygonPx",polygonRad:"polygonRad",polylinePx:"polylinePx",polylineRad:"polylineRad",square:"square",rect:"rect",circle:"circle",ellipse:"ellipse",path:"path"},V=function(){function B(z,N){if(!z.id)throw new i.PSVError("missing marker id");this.psv=N,this.id=z.id,this.type=B.getType(z,!1),this.visible=!0,this.$el=null,this.config={},this.data=void 0,this.tooltip=null,this.props={dynamicSize:!1,anchor:null,position:null,position2D:null,positions3D:null,width:null,height:null,def:null},this.loader=null,this.is3d()&&(this.loader=new n.TextureLoader,this.psv.config.withCredentials&&this.loader.setWithCredentials(!0),this.psv.config.requestHeaders&&typeof this.psv.config.requestHeaders=="object"&&this.loader.setRequestHeader(this.psv.config.requestHeaders)),this.isNormal()?this.$el=document.createElement("div"):this.isPolygon()?this.$el=document.createElementNS(f,"polygon"):this.isPolyline()?this.$el=document.createElementNS(f,"polyline"):this.isSvg()&&(this.$el=document.createElementNS(f,this.type)),this.is3d()||(this.$el.id="psv-marker-"+this.id,this.$el[d]=this),this.update(z)}var Y=B.prototype;return Y.destroy=function(){delete this.$el[d],delete this.$el,delete this.config,delete this.props,delete this.psv},Y.is3d=function(){return this.type===O.imageLayer},Y.isNormal=function(){return this.type===O.image||this.type===O.html},Y.isPoly=function(){return this.isPolygon()||this.isPolyline()},Y.isPolyPx=function(){return this.type===O.polygonPx||this.type===O.polylinePx},Y.isPolyRad=function(){return this.type===O.polygonRad||this.type===O.polylineRad},Y.isPolygon=function(){return this.type===O.polygonPx||this.type===O.polygonRad},Y.isPolyline=function(){return this.type===O.polylinePx||this.type===O.polylineRad},Y.isSvg=function(){return this.type===O.square||this.type===O.rect||this.type===O.circle||this.type===O.ellipse||this.type===O.path},Y.getScale=function(N,R){if(!this.config.scale)return 1;if(typeof this.config.scale=="function")return this.config.scale(N,R);var P=1;if(Array.isArray(this.config.scale.zoom)){var F=this.config.scale.zoom;P*=F[0]+(F[1]-F[0])*i.CONSTANTS.EASINGS.inQuad(N/100)}if(Array.isArray(this.config.scale.longitude)){var X=this.config.scale.longitude,J=n.Math.degToRad(this.psv.prop.hFov)/2,te=Math.abs(g(this.props.position.longitude,R.longitude));P*=X[1]+(X[0]-X[1])*i.CONSTANTS.EASINGS.outQuad(Math.max(0,(J-te)/J))}return P},Y.getListContent=function(){var N;return this.config.listContent?this.config.listContent:(N=this.config.tooltip)!=null&&N.content?this.config.tooltip.content:this.config.html?this.config.html:this.id},Y.showTooltip=function(N){var R;if(this.visible&&(R=this.config.tooltip)!=null&&R.content&&this.props.position2D){var P={content:this.config.tooltip.content,position:this.config.tooltip.position,data:this};if(this.isPoly()){var F=i.utils.getPosition(this.psv.container);P.box={width:this.psv.tooltip.size.arrow*2,height:this.psv.tooltip.size.arrow*2},N?(P.top=N.clientY-F.top-this.psv.tooltip.size.arrow/2,P.left=N.clientX-F.left-this.psv.tooltip.size.arrow):(P.top=this.props.position2D.y,P.left=this.props.position2D.x)}else P.top=this.props.position2D.y,P.left=this.props.position2D.x,P.box={width:this.props.width,height:this.props.height};this.tooltip?this.tooltip.move(P):this.tooltip=this.psv.tooltip.create(P)}},Y.hideTooltip=function(){this.tooltip&&(this.tooltip.hide(),this.tooltip=null)},Y.update=function(N){var R=B.getType(N,!0);if(R!==void 0&&R!==this.type)throw new i.PSVError("cannot change marker type");if(i.utils.deepmerge(this.config,N),typeof this.config.tooltip=="string"&&(this.config.tooltip={content:this.config.tooltip}),this.data=this.config.data,this.visible=this.config.visible!==!1,!this.is3d()){var P;this.isNormal()?this.$el.setAttribute("class","psv-marker psv-marker--normal"):this.$el.setAttribute("class","psv-marker psv-marker--svg"),this.config.className&&i.utils.addClasses(this.$el,this.config.className),this.config.tooltip&&i.utils.addClasses(this.$el,"psv-marker--has-tooltip"),this.config.content&&i.utils.addClasses(this.$el,"psv-marler--has-content"),this.$el.style.opacity=(P=this.config.opacity)!=null?P:1,this.config.style&&i.utils.deepmerge(this.$el.style,this.config.style)}this.props.anchor=i.utils.parsePosition(this.config.anchor),this.config.scale&&(typeof this.config.scale=="number"&&(b("Single value marker scale is deprecated, please use an array of two values."),this.config.scale={zoom:[0,this.config.scale]}),Array.isArray(this.config.scale)&&(this.config.scale={zoom:this.config.scale})),this.isNormal()?this.__updateNormal():this.isPoly()?this.__updatePoly():this.isSvg()?this.__updateSvg():this.is3d()&&this.__update3d()},Y.__updateNormal=function(){if(!i.utils.isExtendedPosition(this.config))throw new i.PSVError("missing marker position, latitude/longitude or x/y");if(this.config.image&&(!this.config.width||!this.config.height))throw new i.PSVError("missing marker width/height");this.config.width&&this.config.height?(this.props.dynamicSize=!1,this.props.width=this.config.width,this.props.height=this.config.height,this.$el.style.width=this.config.width+"px",this.$el.style.height=this.config.height+"px"):this.props.dynamicSize=!0,this.config.image?(this.props.def=this.config.image,this.$el.style.backgroundImage="url("+this.config.image+")"):this.config.html&&(this.props.def=this.config.html,this.$el.innerHTML=this.config.html),this.$el.style.transformOrigin=this.props.anchor.x*100+"% "+this.props.anchor.y*100+"%",this.props.position=this.psv.dataHelper.cleanPosition(this.config),this.props.positions3D=[this.psv.dataHelper.sphericalCoordsToVector3(this.props.position)]},Y.__updateSvg=function(){var N=this;if(!i.utils.isExtendedPosition(this.config))throw new i.PSVError("missing marker position, latitude/longitude or x/y");switch(this.props.dynamicSize=!0,this.type){case O.square:this.props.def={x:0,y:0,width:this.config.square,height:this.config.square};break;case O.rect:Array.isArray(this.config.rect)?this.props.def={x:0,y:0,width:this.config.rect[0],height:this.config.rect[1]}:this.props.def={x:0,y:0,width:this.config.rect.width,height:this.config.rect.height};break;case O.circle:this.props.def={cx:this.config.circle,cy:this.config.circle,r:this.config.circle};break;case O.ellipse:Array.isArray(this.config.ellipse)?this.props.def={cx:this.config.ellipse[0],cy:this.config.ellipse[1],rx:this.config.ellipse[0],ry:this.config.ellipse[1]}:this.props.def={cx:this.config.ellipse.rx,cy:this.config.ellipse.ry,rx:this.config.ellipse.rx,ry:this.config.ellipse.ry};break;case O.path:this.props.def={d:this.config.path};break}i.utils.each(this.props.def,function(R,P){N.$el.setAttributeNS(null,P,R)}),this.config.svgStyle?i.utils.each(this.config.svgStyle,function(R,P){N.$el.setAttributeNS(null,i.utils.dasherize(P),R)}):this.$el.setAttributeNS(null,"fill","rgba(0,0,0,0.5)"),this.props.position=this.psv.dataHelper.cleanPosition(this.config),this.props.positions3D=[this.psv.dataHelper.sphericalCoordsToVector3(this.props.position)]},Y.__updatePoly=function(){var N=this;this.props.dynamicSize=!0,this.config.svgStyle?(i.utils.each(this.config.svgStyle,function(X,J){N.$el.setAttributeNS(null,i.utils.dasherize(J),X)}),this.isPolyline()&&!this.config.svgStyle.fill&&this.$el.setAttributeNS(null,"fill","none")):this.isPolygon()?this.$el.setAttributeNS(null,"fill","rgba(0,0,0,0.5)"):this.isPolyline()&&(this.$el.setAttributeNS(null,"fill","none"),this.$el.setAttributeNS(null,"stroke","rgb(0,0,0)"));var R=this.config.polygonPx||this.config.polygonRad||this.config.polylinePx||this.config.polylineRad;if(!Array.isArray(R[0]))for(var P=0;P<R.length;P++)R.splice(P,2,[R[P],R[P+1]]);this.isPolyPx()?this.props.def=R.map(function(X){var J=N.psv.dataHelper.textureCoordsToSphericalCoords({x:X[0],y:X[1]});return[J.longitude,J.latitude]}):this.props.def=R.map(function(X){return[i.utils.parseAngle(X[0]),i.utils.parseAngle(X[1],!0)]});var F=this.isPolygon()?S(this.props.def):A(this.props.def);this.props.position={longitude:F[0],latitude:F[1]},this.props.positions3D=this.props.def.map(function(X){return N.psv.dataHelper.sphericalCoordsToVector3({longitude:X[0],latitude:X[1]})})},Y.__update3d=function(){var N=this;if(!this.config.width||!this.config.height)throw new i.PSVError("missing marker width/height");switch(this.props.dynamicSize=!1,this.props.width=this.config.width,this.props.height=this.config.height,this.props.position=this.psv.dataHelper.cleanPosition(this.config),this.props.positions3D=[this.psv.dataHelper.sphericalCoordsToVector3(this.props.position)],this.type){case O.imageLayer:if(!this.$el){var R,P,F=new n.MeshBasicMaterial({transparent:!0,opacity:(R=this.config.opacity)!=null?R:1,depthTest:!1}),X=new n.PlaneGeometry(1,1),J=new n.Mesh(X,F);J.userData=(P={},P[d]=this,P),this.$el=new n.Group().add(J),Object.defineProperty(this.$el,"visible",{enumerable:!0,get:function(){return this.children[0].userData[d].visible},set:function(oe){this.children[0].userData[d].visible=oe}})}switch(this.props.def!==this.config.imageLayer&&(this.psv.config.requestHeaders&&typeof this.psv.config.requestHeaders=="function"&&this.loader.setRequestHeader(this.psv.config.requestHeaders(this.config.imageLayer)),this.$el.children[0].material.map=this.loader.load(this.config.imageLayer,function(te){te.anisotropy=4,N.psv.needsUpdate()}),this.props.def=this.config.imageLayer),this.$el.children[0].position.set(this.props.anchor.x-.5,this.props.anchor.y-.5,0),this.$el.position.copy(this.props.positions3D[0]),this.config.orientation){case"horizontal":this.$el.lookAt(0,this.$el.position.y,0),this.$el.rotateX(this.props.position.latitude<0?-Math.PI/2:Math.PI/2);break;case"vertical-left":this.$el.lookAt(0,0,0),this.$el.rotateY(-Math.PI*.4);break;case"vertical-right":this.$el.lookAt(0,0,0),this.$el.rotateY(Math.PI*.4);break;default:this.$el.lookAt(0,0,0);break}this.$el.scale.set(this.config.width/100*i.SYSTEM.pixelRatio,this.config.height/100*i.SYSTEM.pixelRatio,1);break}},B.getType=function(N,R){R===void 0&&(R=!1);var P=[];if(i.utils.each(O,function(F){N[F]&&P.push(F)}),P.length===0&&!R)throw new i.PSVError("missing marker content, either "+Object.keys(O).join(", "));if(P.length>1)throw new i.PSVError("multiple marker content, either "+Object.keys(O).join(", "));return P[0]},B}(),U=`<svg xmlns="http://www.w3.org/2000/svg" viewBox="10 9 81 81"><path fill="currentColor" d="M50.5 90S22.9 51.9 22.9 36.6 35.2 9 50.5 9s27.6 12.4 27.6 27.6S50.5 90 50.5 90zm0-66.3c-6.1 0-11 4.9-11 11s4.9 11 11 11 11-4.9 11-11-4.9-11-11-11z"/><!--Created by Rohith M S from the Noun Project--></svg>
`,Q=function(B){o(Y,B);function Y(N){var R;return R=B.call(this,N,"psv-button--hover-scale psv-markers-button",!0)||this,R.plugin=R.psv.getPlugin("markers"),R.plugin&&(R.plugin.on(u.SHOW_MARKERS,c(R)),R.plugin.on(u.HIDE_MARKERS,c(R)),R.toggleActive(!0)),R.hide(),R}var z=Y.prototype;return z.destroy=function(){this.plugin&&(this.plugin.off(u.SHOW_MARKERS,this),this.plugin.off(u.HIDE_MARKERS,this)),B.prototype.destroy.call(this)},z.isSupported=function(){return!!this.plugin},z.handleEvent=function(R){switch(R.type){case u.SHOW_MARKERS:this.toggleActive(!0);break;case u.HIDE_MARKERS:this.toggleActive(!1);break}},z.onClick=function(){this.plugin.prop.visible?this.plugin.hide():this.plugin.show()},Y}(i.AbstractButton);Q.id="markers",Q.icon=U;var Z=function(B){o(Y,B);function Y(N){var R;return R=B.call(this,N,"psv-button--hover-scale psv-markers-list-button",!0)||this,R.plugin=R.psv.getPlugin("markers"),R.plugin&&(R.psv.on(i.CONSTANTS.EVENTS.OPEN_PANEL,c(R)),R.psv.on(i.CONSTANTS.EVENTS.CLOSE_PANEL,c(R))),R.hide(),R}var z=Y.prototype;return z.destroy=function(){this.psv.off(i.CONSTANTS.EVENTS.OPEN_PANEL,this),this.psv.off(i.CONSTANTS.EVENTS.CLOSE_PANEL,this),B.prototype.destroy.call(this)},z.isSupported=function(){return!!this.plugin},z.handleEvent=function(R){switch(R.type){case i.CONSTANTS.EVENTS.OPEN_PANEL:this.toggleActive(R.args[0]===v);break;case i.CONSTANTS.EVENTS.CLOSE_PANEL:this.toggleActive(!1);break}},z.onClick=function(){this.plugin.toggleMarkersList()},Y}(i.AbstractButton);Z.id="markersList",Z.icon=h,i.DEFAULTS.lang[Q.id]="Markers",i.DEFAULTS.lang[Z.id]="Markers list",i.registerButton(Q,"caption:left"),i.registerButton(Z,"caption:left");var L=function(B){o(Y,B);function Y(N,R){var P;return P=B.call(this,N)||this,P.markers={},P.prop={visible:!0,currentMarker:null,hoveringMarker:null,stopObserver:null},P.config=s({clickEventOnMarker:!1},R),((R==null?void 0:R.listButton)===!1||(R==null?void 0:R.hideButton)===!1)&&i.utils.logWarn("MarkersPlugin: listButton and hideButton options are deprecated. Please define the global navbar options according to your needs."),P.container=document.createElement("div"),P.container.className="psv-markers",P.container.style.cursor=P.psv.config.mousemove?"move":"default",P.svgContainer=document.createElementNS(f,"svg"),P.svgContainer.setAttribute("class","psv-markers-svg-container"),P.container.appendChild(P.svgContainer),P.container.addEventListener("mouseenter",c(P),!0),P.container.addEventListener("mouseleave",c(P),!0),P.container.addEventListener("mousemove",c(P),!0),P.container.addEventListener("contextmenu",c(P)),P}var z=Y.prototype;return z.init=function(){var R=this;B.prototype.init.call(this),this.psv.container.appendChild(this.container),this.psv.on(i.CONSTANTS.EVENTS.CLICK,this),this.psv.on(i.CONSTANTS.EVENTS.DOUBLE_CLICK,this),this.psv.on(i.CONSTANTS.EVENTS.RENDER,this),this.psv.on(i.CONSTANTS.EVENTS.CONFIG_CHANGED,this),this.config.markers&&this.psv.once(i.CONSTANTS.EVENTS.READY,function(){R.setMarkers(R.config.markers),delete R.config.markers})},z.destroy=function(){var R,P;this.clearMarkers(!1),(R=(P=this.prop).stopObserver)==null||R.call(P),this.psv.off(i.CONSTANTS.EVENTS.CLICK,this),this.psv.off(i.CONSTANTS.EVENTS.DOUBLE_CLICK,this),this.psv.off(i.CONSTANTS.EVENTS.RENDER,this),this.psv.off(i.CONSTANTS.EVENTS.CONFIG_CHANGED,this),this.psv.container.removeChild(this.container),delete this.svgContainer,delete this.markers,delete this.container,B.prototype.destroy.call(this)},z.handleEvent=function(R){switch(R.type){case"mouseenter":this.__onMouseEnter(R,this.__getTargetMarker(R.target));break;case"mouseleave":this.__onMouseLeave(R,this.__getTargetMarker(R.target));break;case"mousemove":this.__onMouseMove(R,this.__getTargetMarker(R.target));break;case"contextmenu":R.preventDefault();break;case i.CONSTANTS.EVENTS.CLICK:this.__onClick(R,R.args[0],!1);break;case i.CONSTANTS.EVENTS.DOUBLE_CLICK:this.__onClick(R,R.args[0],!0);break;case i.CONSTANTS.EVENTS.RENDER:this.renderMarkers();break;case i.CONSTANTS.OBJECT_EVENTS.ENTER_OBJECT:this.__onMouseEnter(R.detail.originalEvent,R.detail.data);break;case i.CONSTANTS.OBJECT_EVENTS.LEAVE_OBJECT:this.__onMouseLeave(R.detail.originalEvent,R.detail.data);break;case i.CONSTANTS.OBJECT_EVENTS.HOVER_OBJECT:this.__onMouseMove(R.detail.originalEvent,R.detail.data);break;case i.CONSTANTS.EVENTS.CONFIG_CHANGED:this.container.style.cursor=this.psv.config.mousemove?"move":"default";break}},z.show=function(){this.prop.visible=!0,this.renderMarkers(),this.trigger(u.SHOW_MARKERS)},z.hide=function(){this.prop.visible=!1,this.renderMarkers(),this.trigger(u.HIDE_MARKERS)},z.toggleAllTooltips=function(){this.prop.showAllTooltips=!this.prop.showAllTooltips,this.renderMarkers()},z.showAllTooltips=function(){this.prop.showAllTooltips=!0,this.renderMarkers()},z.hideAllTooltips=function(){this.prop.showAllTooltips=!1,this.renderMarkers()},z.getNbMarkers=function(){return Object.keys(this.markers).length},z.getMarkers=function(){return Object.values(this.markers)},z.addMarker=function(R,P){if(P===void 0&&(P=!0),this.markers[R.id])throw new i.PSVError('marker "'+R.id+'" already exists');var F=new V(R,this.psv);return F.isNormal()?this.container.appendChild(F.$el):F.isPoly()||F.isSvg()?this.svgContainer.appendChild(F.$el):F.is3d()&&this.psv.renderer.scene.add(F.$el),this.markers[F.id]=F,P&&(this.renderMarkers(),this.__refreshUi(),this.__checkObjectsObserver(),this.trigger(u.SET_MARKERS,this.getMarkers())),F},z.getMarker=function(R){var P=typeof R=="object"?R.id:R;if(!this.markers[P])throw new i.PSVError('cannot find marker "'+P+'"');return this.markers[P]},z.getCurrentMarker=function(){return this.prop.currentMarker},z.updateMarker=function(R,P){P===void 0&&(P=!0);var F=this.getMarker(R.id);return F.update(R),P&&(this.renderMarkers(),this.__refreshUi(),F.is3d()&&this.psv.needsUpdate(),this.trigger(u.SET_MARKERS,this.getMarkers())),F},z.removeMarker=function(R,P){P===void 0&&(P=!0);var F=this.getMarker(R);F.isNormal()?this.container.removeChild(F.$el):F.isPoly()||F.isSvg()?this.svgContainer.removeChild(F.$el):F.is3d()&&(this.psv.renderer.scene.remove(F.$el),this.psv.needsUpdate()),this.prop.hoveringMarker===F&&(this.prop.hoveringMarker=null),this.prop.currentMarker===F&&(this.prop.currentMarker=null),F.hideTooltip(),F.destroy(),delete this.markers[F.id],P&&(this.__refreshUi(),this.__checkObjectsObserver(),this.trigger(u.SET_MARKERS,this.getMarkers()))},z.removeMarkers=function(R,P){var F=this;P===void 0&&(P=!0),R.forEach(function(X){return F.removeMarker(X,!1)}),P&&(this.__refreshUi(),this.__checkObjectsObserver(),this.trigger(u.SET_MARKERS,this.getMarkers()))},z.setMarkers=function(R,P){var F=this;P===void 0&&(P=!0),this.clearMarkers(!1),i.utils.each(R,function(X){return F.addMarker(X,!1)}),P&&(this.renderMarkers(),this.__refreshUi(),this.__checkObjectsObserver(),this.trigger(u.SET_MARKERS,this.getMarkers()))},z.clearMarkers=function(R){var P=this;R===void 0&&(R=!0),i.utils.each(this.markers,function(F){return P.removeMarker(F,!1)}),R&&(this.renderMarkers(),this.__refreshUi(),this.__checkObjectsObserver(),this.trigger(u.SET_MARKERS,this.getMarkers()))},z.gotoMarker=function(R,P){var F=this,X=this.getMarker(R);return this.psv.animate(s({},X.props.position,{speed:P})).then(function(){F.trigger(u.GOTO_MARKER_DONE,X)})},z.hideMarker=function(R){this.toggleMarker(R,!1)},z.showMarker=function(R){this.toggleMarker(R,!0)},z.toggleMarker=function(R,P){P===void 0&&(P=null);var F=this.getMarker(R);F.visible=P===null?!F.visible:P,F.is3d()?this.psv.needsUpdate():this.renderMarkers()},z.showMarkerPanel=function(R){var P,F=this.getMarker(R);F!=null&&(P=F.config)!=null&&P.content?this.psv.panel.show({id:p,content:F.config.content}):this.psv.panel.hide(p)},z.toggleMarkersList=function(){this.psv.panel.prop.contentId===v?this.hideMarkersList():this.showMarkersList()},z.showMarkersList=function(){var R=this,P=[];i.utils.each(this.markers,function(F){F.visible&&!F.config.hideList&&P.push(F)}),P=this.change(u.RENDER_MARKERS_LIST,P),this.psv.panel.show({id:v,content:m(P,this.psv.config.lang[Q.id],i.utils.dasherize(d)),noMargin:!0,clickHandler:function(X){var J=X.target?i.utils.getClosest(X.target,"li"):void 0,te=J?J.dataset[d]:void 0;if(te){var oe=R.getMarker(te);R.trigger(u.SELECT_MARKER_LIST,oe),R.gotoMarker(oe,1e3),R.hideMarkersList()}}})},z.hideMarkersList=function(){this.psv.panel.hide(v)},z.renderMarkers=function(){var R=this,P=this.psv.getZoomLevel(),F=this.psv.getPosition();i.utils.each(this.markers,function(X){var J=R.prop.visible&&X.visible,te=null;if(J&&X.is3d())te=R.__getMarkerPosition(X),J=R.__isMarkerVisible(X,te);else if(J&&X.isPoly()){var oe=R.__getPolyPositions(X);if(J=oe.length>(X.isPolygon()?2:1),J){te=R.__getMarkerPosition(X);var pe=oe.map(function(Qe){return Qe.x-te.x+","+(Qe.y-te.y)}).join(" ");X.$el.setAttributeNS(null,"points",pe),X.$el.setAttributeNS(null,"transform","translate("+te.x+" "+te.y+")")}}else if(J&&(X.props.dynamicSize&&R.__updateMarkerSize(X),te=R.__getMarkerPosition(X),J=R.__isMarkerVisible(X,te),J)){var Le=X.getScale(P,F);if(X.isSvg()){var Oe=te.x+X.props.width*X.props.anchor.x*(1-Le),K=te.y+X.props.width*X.props.anchor.y*(1-Le);X.$el.setAttributeNS(null,"transform","translate("+Oe+", "+K+") scale("+Le+", "+Le+")")}else X.$el.style.transform="translate3D("+te.x+"px, "+te.y+"px, 0px) scale("+Le+", "+Le+")"}X.props.position2D=J?te:null,X.is3d()||i.utils.toggleClass(X.$el,"psv-marker--visible",J),J&&(R.prop.showAllTooltips||X===R.prop.hoveringMarker&&!X.isPoly())?X.showTooltip():(!J||X!==R.prop.hoveringMarker)&&X.hideTooltip()})},z.__isMarkerVisible=function(R,P){return R.props.positions3D[0].dot(this.psv.prop.direction)>0&&P.x+R.props.width>=0&&P.x-R.props.width<=this.psv.prop.size.width&&P.y+R.props.height>=0&&P.y-R.props.height<=this.psv.prop.size.height},z.__updateMarkerSize=function(R){i.utils.addClasses(R.$el,"psv-marker--transparent");var P;R.isSvg()?(P=R.$el.getAttributeNS(null,"transform"),R.$el.removeAttributeNS(null,"transform")):(P=R.$el.style.transform,R.$el.style.transform="");var F=R.$el.getBoundingClientRect();R.props.width=F.width,R.props.height=F.height,i.utils.removeClasses(R.$el,"psv-marker--transparent"),P&&(R.isSvg()?R.$el.setAttributeNS(null,"transform",P):R.$el.style.transform=P),R.props.dynamicSize=!1},z.__getMarkerPosition=function(R){if(R.isPoly())return this.psv.dataHelper.sphericalCoordsToViewerCoords(R.props.position);var P=this.psv.dataHelper.vector3ToViewerCoords(R.props.positions3D[0]);return P.x-=R.props.width*R.props.anchor.x,P.y-=R.props.height*R.props.anchor.y,P},z.__getPolyPositions=function(R){var P=this,F=R.props.positions3D.length,X=R.props.positions3D.map(function(te){return{vector:te,visible:te.dot(P.psv.prop.direction)>0}}),J=[];return X.forEach(function(te,oe){if(!te.visible){var pe=[oe===0?X[F-1]:X[oe-1],oe===F-1?X[0]:X[oe+1]];pe.forEach(function(Le){Le.visible&&J.push({visible:Le,invisible:te,index:oe})})}}),J.reverse().forEach(function(te){X.splice(te.index,0,{vector:P.__getPolyIntermediaryPoint(te.visible.vector,te.invisible.vector),visible:!0})}),X.filter(function(te){return te.visible}).map(function(te){return P.psv.dataHelper.vector3ToViewerCoords(te.vector)})},z.__getPolyIntermediaryPoint=function(R,P){var F=this.psv.prop.direction.clone().normalize(),X=new n.Vector3().crossVectors(R,P).normalize(),J=new n.Vector3().crossVectors(X,R).normalize(),te=R.clone().multiplyScalar(-F.dot(J)),oe=J.clone().multiplyScalar(F.dot(R)),pe=new n.Vector3().addVectors(te,oe).normalize(),Le=new n.Vector3().crossVectors(pe,F);return pe.applyAxisAngle(Le,.01).multiplyScalar(i.CONSTANTS.SPHERE_RADIUS)},z.__getTargetMarker=function(R,P){P===void 0&&(P=!1);var F=P?i.utils.getClosest(R,".psv-marker"):R;return F?F[d]:void 0},z.__targetOnTooltip=function(R,P){return R&&P?i.utils.hasParent(R,P.container):!1},z.__onMouseEnter=function(R,P){P&&!P.isPoly()&&(this.prop.hoveringMarker=P,this.trigger(u.OVER_MARKER,P),this.prop.showAllTooltips||P.showTooltip(R))},z.__onMouseLeave=function(R,P){P&&!(P.isPoly()&&this.__targetOnTooltip(R.relatedTarget,P.tooltip))&&(this.trigger(u.LEAVE_MARKER,P),this.prop.hoveringMarker=null,this.prop.showAllTooltips||P.hideTooltip())},z.__onMouseMove=function(R,P){var F,X;P!=null&&P.isPoly()?X=P:this.prop.hoveringMarker&&this.__targetOnTooltip(R.target,this.prop.hoveringMarker.tooltip)&&(X=this.prop.hoveringMarker),X?(this.prop.hoveringMarker||(this.trigger(u.OVER_MARKER,X),this.prop.hoveringMarker=X),this.prop.showAllTooltips||X.showTooltip(R)):(F=this.prop.hoveringMarker)!=null&&F.isPoly()&&(this.trigger(u.LEAVE_MARKER,this.prop.hoveringMarker),this.prop.showAllTooltips||this.prop.hoveringMarker.hideTooltip(),this.prop.hoveringMarker=null)},z.__onClick=function(R,P,F){var X,J=(X=P.objects.find(function(te){return te.userData[d]}))==null?void 0:X.userData[d];J||(J=this.__getTargetMarker(P.target,!0)),J?(this.prop.currentMarker=J,this.trigger(u.SELECT_MARKER,J,{dblclick:F,rightclick:P.rightclick}),this.config.clickEventOnMarker?P.marker=J:R.stopPropagation(),this.markers[J.id]&&this.showMarkerPanel(J.id)):this.prop.currentMarker&&(this.trigger(u.UNSELECT_MARKER,this.prop.currentMarker),this.psv.panel.hide(p),this.prop.currentMarker=null)},z.__refreshUi=function(){var R=Object.values(this.markers).filter(function(X){return!X.config.hideList}).length,P=this.psv.navbar.getButton(Q.id,!1),F=this.psv.navbar.getButton(Z.id,!1);R===0?(P==null||P.hide(),F==null||F.hide(),this.psv.panel.isVisible(v)?this.psv.panel.hide():this.psv.panel.isVisible(p)&&this.psv.panel.hide()):(P==null||P.show(),F==null||F.show(),this.psv.panel.isVisible(v)?this.showMarkersList():this.psv.panel.isVisible(p)&&(this.prop.currentMarker?this.showMarkerPanel(this.prop.currentMarker):this.psv.panel.hide()))},z.__checkObjectsObserver=function(){var R=Object.values(this.markers).some(function(P){return P.is3d()});!R&&this.prop.stopObserver?(this.prop.stopObserver(),this.prop.stopObserver=null):R&&!this.prop.stopObserver&&(this.prop.stopObserver=this.psv.observeObjects(d,this))},Y}(i.AbstractPlugin);L.id="markers",L.EVENTS=u,t.EVENTS=u,t.MarkersPlugin=L,Object.defineProperty(t,"__esModule",{value:!0})})})(Jo,Jo.exports);const Ex=[{id:"my-button",content:'<input id="uploadInput" type="file" accept="image/*" name="myFiles">',title:"Hello world",className:"custom-button",onClick:()=>{}},"autorotate","zoom","markers","markersList","description","caption","fullscreen"],wx=[{id:"circle",circle:20,longitude:0,latitude:0,tooltip:"A circle marker"}],Bc=new Wo.exports.Viewer({panorama:"https://photo-sphere-viewer-data.netlify.app/assets/sphere.jpg",container:"app",caption:"Parc national du Mercantour <b>&copy; Damien Sorel</b>",loadingImg:"https://photo-sphere-viewer.js.org/assets/photosphere-logo.gif",defaultLat:.3,touchmoveTwoFingers:!0,navbar:Ex,plugins:[[Jo.exports.MarkersPlugin,{markers:wx}]]}),bf=document.getElementById("uploadInput");bf.onchange=()=>bx();function bx(){const r=new FileReader;r.readAsDataURL(bf.files[0]),r.onload=()=>Bc.setPanorama(r.result),r.onerror=e=>console.log(e)}const qn=Bc.getPlugin(Jo.exports.MarkersPlugin);Bc.on("click",(r,e)=>{e.rightclick||qn.addMarker({id:"#"+Math.random(),longitude:e.longitude,latitude:e.latitude,image:"https://photo-sphere-viewer.js.org/assets/pin-red.png",width:32,height:32,anchor:"bottom center",tooltip:"Generated pin",data:{generated:!0,deletable:!0}})});qn.on("select-marker",(r,e,t)=>{console.log("select",e.id),e.data&&e.data.deletable&&(t.dblclick?qn.removeMarker(e):t.rightclick&&qn.updateMarker({id:e.id,image:"https://photo-sphere-viewer.js.org/assets/pin-blue.png"}))});qn.on("unselect-marker",(r,e)=>{console.log("unselect",e.id)});qn.on("over-marker",(r,e)=>{console.log("over",e.id)});qn.on("leave-marker",(r,e)=>{console.log("leave",e.id)});qn.on("select-marker-list",(r,e)=>{console.log("select-list",e.id)});qn.on("goto-marker-done",(r,e)=>{console.log("goto-done",e.id)});
